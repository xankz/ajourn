{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@quasar/quasar-ui-qmediaplayer/src/components/icon-set sync ^\\.\\/.*\\.js$","webpack:///./node_modules/@quasar/quasar-ui-qmediaplayer/src/components/lang sync ^\\.\\/.*\\.js$","webpack:///./src/components/maps/MapView.vue?7438","webpack:///./src/components/fields/EmbedField.vue?575b","webpack:///./src/components/EntryView.vue?72df","webpack:///./src/components/fields/AttachmentsField.vue?6943","webpack:///./src/components/EditEntryDialog.vue?7d3d","webpack:///./src/registerServiceWorker.ts","webpack:///./src/App.vue","webpack:///./src/components/JournalDrawer.vue","webpack:///./src/components/CreateEntryDialog.vue","webpack:///./src/components/EntryIconDialog.vue","webpack:///./src/components/attachments/SelectAttachmentsDialog.vue","webpack:///./src/store/types.ts","webpack:///./src/utils.ts","webpack:///./src/components/attachments/SelectAttachmentsDialog.vue?606f","webpack:///./src/components/attachments/SelectAttachmentsDialog.vue?90b5","webpack:///./src/components/EntryIconDialog.vue?6f59","webpack:///./src/components/EntryIconDialog.vue?0d23","webpack:///./src/db.ts","webpack:///./src/store/index.ts","webpack:///./src/components/ManageCategoriesDialog.vue","webpack:///./src/components/ManageCategoriesDialog.vue?d319","webpack:///./src/components/ManageCategoriesDialog.vue?6f91","webpack:///./src/components/CreateEntryDialog.vue?9438","webpack:///./src/components/CreateEntryDialog.vue?5eb9","webpack:///./src/components/CategoryChips.vue","webpack:///./src/components/CategoryChips.vue?6ba4","webpack:///./src/components/CategoryChips.vue?4748","webpack:///./src/components/EntryLink.vue","webpack:///./src/components/EntryLink.vue?7611","webpack:///./src/components/EntryLink.vue?3d8b","webpack:///./src/components/JournalDrawer.vue?cac0","webpack:///./src/components/JournalDrawer.vue?c8a8","webpack:///./src/App.vue?0d89","webpack:///./src/App.vue?0d5a","webpack:///./src/devtools.ts","webpack:///./src/quasar-user-options.js","webpack:///./src/components/EntryView.vue","webpack:///./src/components/fields/AttachmentsField.vue","webpack:///./src/components/attachments/PreviewAttachmentDialog.vue","webpack:///./src/components/attachments/PreviewAttachmentDialog.vue?8da1","webpack:///./src/components/attachments/PreviewAttachmentDialog.vue?5966","webpack:///./src/components/fields/AttachmentsFieldIcon.vue","webpack:///./src/components/fields/AttachmentsFieldIcon.vue?377e","webpack:///./src/components/fields/AttachmentsFieldIcon.vue?6b26","webpack:///./src/components/fields/AttachmentsField.vue?391f","webpack:///./src/components/fields/AttachmentsField.vue?fac2","webpack:///./src/components/fields/DescriptionField.vue","webpack:///./src/components/fields/DescriptionField.vue?f6c9","webpack:///./src/components/fields/DescriptionField.vue?d729","webpack:///./src/components/fields/EmbedField.vue","webpack:///./src/components/fields/EmbedField.vue?3439","webpack:///./src/components/fields/EmbedField.vue?c3fb","webpack:///./src/components/fields/MapField.vue","webpack:///./src/components/maps/EditMapDialog.vue","webpack:///./src/components/form/SelectEntry.vue","webpack:///./src/components/form/SelectEntry.vue?6838","webpack:///./src/components/form/SelectEntry.vue?c607","webpack:///./src/components/maps/MapView.vue","webpack:///./src/components/maps/MapView.vue?a98a","webpack:///./src/components/maps/MapView.vue?d5d3","webpack:///./src/components/maps/EditMapDialog.vue?2b17","webpack:///./src/components/maps/EditMapDialog.vue?0d8d","webpack:///./src/components/fields/MapField.vue?cddc","webpack:///./src/components/fields/MapField.vue?1f99","webpack:///./src/components/fields/NumberField.vue","webpack:///./src/components/fields/NumberField.vue?33fc","webpack:///./src/components/fields/NumberField.vue?4b38","webpack:///./src/components/fields/ProgressField.vue","webpack:///./src/components/fields/ProgressField.vue?0f74","webpack:///./src/components/fields/ProgressField.vue?0c9e","webpack:///./src/components/fields/ReferenceField.vue","webpack:///./src/components/fields/ReferenceField.vue?e7c6","webpack:///./src/components/fields/ReferenceField.vue?547c","webpack:///./src/components/fields/TextField.vue","webpack:///./src/components/fields/TextField.vue?a366","webpack:///./src/components/fields/TextField.vue?b0be","webpack:///./src/components/fields/ToggleField.vue","webpack:///./src/components/fields/ToggleField.vue?00cb","webpack:///./src/components/fields/ToggleField.vue?0e2b","webpack:///./src/constants.ts","webpack:///./src/components/attachments/ViewAttachmentsDialog.vue","webpack:///./src/components/attachments/CreateAttachmentDialog.vue","webpack:///./src/components/attachments/CreateAttachmentDialog.vue?114f","webpack:///./src/components/attachments/CreateAttachmentDialog.vue?8448","webpack:///./src/components/attachments/DeleteAttachmentDialog.vue","webpack:///./src/components/attachments/DeleteAttachmentDialog.vue?15f6","webpack:///./src/components/attachments/DeleteAttachmentDialog.vue?71c4","webpack:///./src/components/attachments/ViewAttachmentsDialog.vue?403a","webpack:///./src/components/attachments/ViewAttachmentsDialog.vue?4ee0","webpack:///./src/components/DeleteEntryDialog.vue","webpack:///./src/components/DeleteEntryDialog.vue?c945","webpack:///./src/components/DeleteEntryDialog.vue?f30a","webpack:///./src/components/EditEntryDialog.vue","webpack:///./src/components/fields/ErrorField.vue","webpack:///./src/components/fields/ErrorField.vue?76e1","webpack:///./src/components/fields/ErrorField.vue?eccc","webpack:///./src/components/EditEntryDialog.vue?dffe","webpack:///./src/components/EditEntryDialog.vue?481e","webpack:///./src/components/EntryView.vue?6293","webpack:///./src/components/EntryView.vue?f949","webpack:///./src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?a516","webpack:///./src/views/Landing.vue","webpack:///./src/components/CreateJournalDialog.vue","webpack:///./src/components/CreateJournalDialog.vue?6f89","webpack:///./src/components/CreateJournalDialog.vue?b39e","webpack:///./src/views/Landing.vue?c93b","webpack:///./src/views/Landing.vue?a826","webpack:///./src/router/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","code","keys","ready","log","registered","cached","updatefound","updated","offline","view","currentJournal","elevated","class","icon","flat","round","exitJournal","title","toggleDarkMode","side","bordered","padding","show-if-above","currentJournalID","entries","standout","label","entrySearch","dense","clearable","lastEntry","header","entryId","item","filteredCategories","text-color","size","entryCategoryFilter","openCreateCategory","categories","style","openCreateEntry","filteredEntries","to","avatar","color","ratio","getEntryAvatar","caption","ref","onDialogHide","submit","rounded","max-width","showIconDialog","updateAvatar","placeholder","outlined","autofocus","multiple","category","options","new-value-mode","option-label","options-dense","option-value","emit-value","map-options","use-chips","no-option","after","outline","openManageCategories","template","align","disable","loading","onCancelClick","tab","useAttachments","animated","iconGroups","g","icons","attachIcon","bottom-slots","accept","selectedImage","hint","attachImage","selectAttachment","selected","separator","entry","attachments","att","attName","clickable","setSelected","active","getAttachmentIcon","content_type","getExtension","filteredAttachmentsLen","onOKClick","FieldType","DocumentType","EmbedFieldService","API_FETCH_JOURNALS","API_CREATE_JOURNAL","API_OPEN_JOURNAL","API_FETCH_JOURNAL","API_CLOSE_JOURNAL","API_CREATE_ENTRY","API_FETCH_ENTRIES","API_FETCH_ENTRY","API_UPDATE_ENTRY","API_DELETE_ENTRY","API_ADD_ENTRY_ATTACHMENT","API_DELETE_ENTRY_ATTACHMENT","API_SET_LAST_ENTRY","API_UPDATE_JOURNAL","SET_JOURNAL","SET_JOURNALS","SET_ENTRIES","SET_ENTRY","UI_VISIBILITY","SET_CURRENT_JOURNAL","SET_LAST_ENTRY","indexDocumentKey","validateYouTubeUrl","url","regExp","match","validateSoundcloudUrl","URL","Invalid","YouTube","Soundcloud","Unknown","b64","contentType","startsWith","renderText","atob","b64toBlob","b64Data","sliceSize","byteCharacters","byteArrays","offset","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","props","required","Boolean","default","emits","setup","dialogRef","onDialogOK","onDialogCancel","filteredAttachments","includes","filter","render","QDialog","QCard","QCardSection","QSpace","QBtn","QTooltip","QList","QItem","QItemSection","QIcon","QBadge","QCardActions","Ripple","methods","this","$emit","$q","dialog","component","SelectAttachmentsDialog","componentProps","onOk","val","QTabs","QTab","QSeparator","QTabPanels","QTabPanel","QItemLabel","QFile","useDB","mustExist","db","skip_setup","plugin","dbIndexes","useStore","store","state","fetchingJournals","fetchingEntries","showUi","journals","mutations","payload","journal","getters","entryAttachment","entryAttachmentFull","actions","commit","set","dispatch","removeAttachment","_rev","close","force","attachment","File","mType","putAttachment","remove","_id","put","allDbs","inds","ind","replace","fetchingJournalsOpen","createIndex","index","fields","generate","Entry","_attachments","save","flush","find","selector","$elemMatch","$eq","data2","docs","reduce","acc","description","plugins","persistent","addCategory","idx","expand-separator","header-style","group","rules","hide-bottom-space","append","transition-show","transition-hide","labelSingular","stack-label","pluralize","singular","labelPlural","namePluralized","saveChanges","$store","luminosity","notify","QExpansionItem","QInput","QPopupProxy","QColor","components","EntryIconDialog","$router","$route","avatarFile","e2","params","jid","fr","FileReader","readAsDataURL","ManageCategoriesDialog","QAvatar","QSelect","QSpinnerDots","modelValue","updateValue","$event","ctx","emit","v","kv","QChip","entryAvatar","avatarSize","showLink","String","EntryLink","CategoryChips","values","every","fc","CreateEntryDialog","QImg","JournalDrawer","showToolbar","showDrawer","toggleUi","dark","toggle","QLayout","QHeader","QToolbar","QToolbarTitle","QDrawer","QPageContainer","devtools","install","app","config","position","Dialog","Notify","QMediaPlayer","previewAvatar","split","editEntry","viewAttachments","deleteEntry","f","getComponentFromField","editView","linkedAttachments","selectAttachments","previewAttachment","controls","anchor","self","AttachmentsFieldIcon","currentSlide","updateAttachments","k2","PreviewAttachmentDialog","__scopeId","content","max-height","toolbar","QEditor","updateUrl","debounce","embedLoading","embedService","embedServiceC","href","ms","QVideo","imageKey","editLocations","attachmentOptions","updateImageKey","option","itemProps","itemEvents","scope","opt","customName","updateCustomName","mapBackground","locations","background","showLocations","addLocation","mapLocations","mapSelected","selectOpts","mapSelectedPtr","currentOpt","attrs","mapReady","crs","CRS","Simple","center","mapCenter","zoom","mapZoom","minZoom","mapImage","bounds","mapBounds","location","lat-lng","coordinates","draggable","updateLocation","focusPrevLocation","focusNextLocation","LMap","LImageOverlay","LMarker","LPopup","LControl","mapLocationRefs","mapRef","mapFocus","lng","lat","leafletObject","normalizeLocation","loc","ml","idx2","focusLocation","flyTo","moveLocation","setLatLng","updateBackground","mapBlob","createObjectURL","img","Image","height","width","getMapCenter","fullscreen","addTo","revokeObjectURL","SelectEntry","MapView","_","EditMapDialog","Number","parseInt","updateLabel","minValue","updateMinValue","maxValue","updateMaxValue","showBar","updateShowBar","barOptions","barType","updateBarType","barColor","updateBarColor","barValue","progressLabel","min","max","show-value","center-color","track-color","progress","value2","replaceAll","toFixed","$el","QCheckbox","QLinearProgress","QCircularProgress","updateCategories","updateEntries","entryReferences","journalCategories","c2","catg","entr","forEach","whenTrue","whenFalse","updateWhenTrue","updateWhenFalse","DefaultTextField","DefaultDescriptionField","DefaultNumberField","DefaultToggleField","DefaultProgressField","DefaultAttachmentsField","DefaultEmbedField","DefaultMapField","DefaultReferenceField","FieldDefs","Text","TextField","Description","DescriptionField","NumberField","Toggle","ToggleField","Progress","ProgressField","Attachments","AttachmentsField","Map","MapField","Reference","ReferenceField","Embed","EmbedField","CreateFieldTree","selectable","fieldType","children","k","createAttachment","splitVal","limits","before","isEmpty","selectedAttKey","selectedAtt","horizontal","selectedAttSplitter","selectedAttData","zoomImage","truncate","humanStorageSize","replaceAttachment","deleteAttachment","currentTab","uploadData","uploadDataSize","prepend","rawData","rawDataSize","attachmentName","test","replaceData","format","presubmit","cancel","ok","onCancel","CreateAttachmentDialog","DeleteAttachmentDialog","QSplitter","QMarkupTable","ClosePopup","entryModel","createFieldTooltip","createFieldPopup","createFieldTreeFilter","createFieldTreeFilterRef","nodes","createFieldTree","node-key","expanded","createFieldTreeExpanded","createFieldTreeSelected","onCreateFieldSubmit","fieldTree","selected-color","fieldTreeSelected","fieldTreeExpanded","accordion","default-header","prop","node","showEntryAvatarDialog","updateEntryAvatar","currentField","moveCurrentField","deleteField","entryID","currentFieldName","mapKeyToModel","setModelFromKey","mapFieldToIcon","fieldTreeRef","delta","indexOf","newIndex","indexes","sort","genFieldTree","model","DeleteEntryDialog","submitCreateField","focus","ErrorField","QTree","QForm","QBtnGroup","eid","categoryBadgeRef","getCategoryTextColor","colors","brightness","getCategoryBorderColor","lighten","EditEntryDialog","ViewAttachmentsDialog","QBtnDropdown","openCreateJournal","no-caps","createOnline","CreateJournalDialog","routes","path","Landing","Dashboard","EntryView","beforeEnter","from","next","Loading","show","spinner","QSpinnerGrid","hide","router","history","screenfull","App","use","listenTo","mount","$options","devt"],"mappings":"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","file":"js/app.6e1bb289.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0c9189\":\"4312ce11\",\"chunk-2d0cf391\":\"1c4b4848\",\"chunk-2d0da8f3\":\"f59eb4b6\",\"chunk-2d22523a\":\"c0744dc4\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/ajourn/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./eva-icons.js\": \"ae42\",\n\t\"./fontawesome-v5-pro.js\": \"9f2c\",\n\t\"./fontawesome-v5.js\": \"b0a2\",\n\t\"./ionicons-v4.js\": \"01e2\",\n\t\"./line-awesome.js\": \"5129\",\n\t\"./material-icons-outlined.js\": \"f894\",\n\t\"./material-icons-round.js\": \"ce94\",\n\t\"./material-icons-sharp.js\": \"4459\",\n\t\"./material-icons.js\": \"8c07\",\n\t\"./mdi-v3.js\": \"f00f\",\n\t\"./mdi-v4.js\": \"cbeb\",\n\t\"./mdi-v5.js\": \"595a\",\n\t\"./svg-material-icons.js\": \"78b6\",\n\t\"./svg-mdi-v5.js\": \"557a\",\n\t\"./themify.js\": \"fc09\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"02f7\";","var map = {\n\t\"./ar.js\": \"5b8b\",\n\t\"./bg.js\": \"c9d2\",\n\t\"./ca.js\": \"8151\",\n\t\"./cs.js\": \"d6d8\",\n\t\"./da.js\": \"8fc3\",\n\t\"./de.js\": \"2d68\",\n\t\"./el.js\": \"0945\",\n\t\"./en-gb.js\": \"932d\",\n\t\"./en-us.js\": \"3b69\",\n\t\"./eo.js\": \"6321\",\n\t\"./es.js\": \"5815\",\n\t\"./fa-ir.js\": \"e9c4\",\n\t\"./fi.js\": \"122a\",\n\t\"./fr.js\": \"0857\",\n\t\"./gn.js\": \"21d7\",\n\t\"./he.js\": \"ea35\",\n\t\"./hr.js\": \"6e23\",\n\t\"./hu.js\": \"5f15\",\n\t\"./id.js\": \"a7b6\",\n\t\"./it.js\": \"6186\",\n\t\"./ja.js\": \"148e\",\n\t\"./km.js\": \"16a5\",\n\t\"./ko-kr.js\": \"81e9\",\n\t\"./lu.js\": \"8508\",\n\t\"./lv.js\": \"0b80\",\n\t\"./ml.js\": \"6d60\",\n\t\"./ms.js\": \"77e7\",\n\t\"./nb-no.js\": \"0edf\",\n\t\"./nl.js\": \"3f3c\",\n\t\"./pl.js\": \"d080\",\n\t\"./pt-br.js\": \"4f99\",\n\t\"./pt.js\": \"589a\",\n\t\"./ro.js\": \"9e37\",\n\t\"./ru.js\": \"27cd\",\n\t\"./sk.js\": \"c8b6\",\n\t\"./sl.js\": \"fb8d\",\n\t\"./sr.js\": \"3d7c\",\n\t\"./sv.js\": \"f9e5\",\n\t\"./ta.js\": \"194c\",\n\t\"./th.js\": \"3d56\",\n\t\"./tr.js\": \"90c8\",\n\t\"./uk.js\": \"ff58\",\n\t\"./vi.js\": \"593a\",\n\t\"./zh-hans.js\": \"bbca\",\n\t\"./zh-hant.js\": \"74ef\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"203b\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./MapView.vue?vue&type=style&index=0&id=9ae87e28&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./EmbedField.vue?vue&type=style&index=0&id=1eeca434&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./EntryView.vue?vue&type=style&index=0&id=0ecb68b3&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./AttachmentsField.vue?vue&type=style&index=0&id=4846aa0d&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./EditEntryDialog.vue?vue&type=style&index=0&id=2a9150eb&lang=scss&scoped=true\"","/* eslint-disable no-console */\n\nimport { register } from \"register-service-worker\";\n\nif (process.env.NODE_ENV === \"production\") {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        \"App is being served from cache by a service worker.\\n\" +\n          \"For more details, visit https://goo.gl/AFskqB\"\n      );\n    },\n    registered() {\n      console.log(\"Service worker has been registered.\");\n    },\n    cached() {\n      console.log(\"Content has been cached for offline use.\");\n    },\n    updatefound() {\n      console.log(\"New content is downloading.\");\n    },\n    updated() {\n      console.log(\"New content is available; please refresh.\");\n    },\n    offline() {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    },\n    error(error) {\n      console.error(\"Error during service worker registration:\", error);\n    }\n  });\n}\n","<template>\n    <q-layout view=\"hHh lpR fFf\">\n        <q-header elevated class=\"bg-primary text-white\" v-if=\"currentJournal\">\n            <q-toolbar>\n                <q-btn icon=\"home\" flat round @click=\"exitJournal\"> </q-btn>\n                <q-toolbar-title>\n                    {{ currentJournal.title }}\n                </q-toolbar-title>\n                <q-space></q-space>\n                <q-btn icon=\"dark_mode\" round flat @click=\"toggleDarkMode\">\n                    <q-tooltip>Toggle dark mode</q-tooltip>\n                </q-btn>\n            </q-toolbar>\n        </q-header>\n\n        <q-drawer v-if=\"currentJournal\" side=\"left\" bordered padding show-if-above>\n            <journal-drawer :currentJournal=\"currentJournalID\" :entries=\"entries\"></journal-drawer>\n        </q-drawer>\n\n        <q-page-container>\n            <router-view />\n        </q-page-container>\n    </q-layout>\n</template>\n\n<script lang=\"ts\">\nimport Cookies from \"js-cookie\";\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport JournalDrawer from \"@/components/JournalDrawer.vue\";\n\nimport { useStore } from \"./store\";\nimport {\n    API_CLOSE_JOURNAL,\n    API_FETCH_JOURNALS,\n    SET_LAST_ENTRY,\n    UI_VISIBILITY,\n} from \"./store/types\";\n\nexport default defineComponent({\n    name: \"LayoutDefault\",\n    components: {\n        JournalDrawer,\n    },\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n        const $router = useRouter();\n\n        onMounted(async () => {\n            // await $store.dispatch(API_FETCH_JOURNALS);\n            const lastEntry = Cookies.get(\"lastEntry\");\n            if (lastEntry && $store.state.entries[lastEntry]) {\n                $store.commit(SET_LAST_ENTRY, lastEntry);\n            }\n        });\n\n        const exitJournal = async () => {\n            if (!$store.state.currentJournal) return;\n            await $store.dispatch(API_CLOSE_JOURNAL);\n            await $router.push(\"/\");\n        };\n\n        return {\n            currentJournalID: computed(() => $store.state.currentJournal),\n            currentJournal: computed(() => $store.getters.currentJournal),\n            showToolbar: computed(() => $store.state.showUi),\n            showDrawer: computed(() => $store.state.showUi),\n            entries: computed(() => $store.state.entries),\n            exitJournal,\n            toggleUi: () => {\n                $store.commit(UI_VISIBILITY, !$store.state.showUi);\n            },\n            toggleDarkMode: $q.dark.toggle,\n        };\n    },\n});\n</script>\n","<template>\n    <q-input\n        standout=\"bg-primary text-white\"\n        class=\"q-px-md q-mt-lg\"\n        label=\"Search\"\n        v-model=\"entrySearch\"\n        dense\n        clearable\n    ></q-input>\n    <q-separator class=\"q-mt-md\"></q-separator>\n    <q-list padding>\n        <template v-if=\"lastEntry\">\n            <q-item-label header>Last viewed entry</q-item-label>\n            <entry-link :entryId=\"lastEntry\" item></entry-link>\n            <q-separator class=\"q-mt-md q-mb-sm\"></q-separator>\n        </template>\n        <q-item-label header class=\"row justify-between items-center full-width q-pb-md\">\n            Categories\n            <div>\n                <q-btn\n                    round\n                    icon=\"clear\"\n                    text-color=\"red\"\n                    class=\"q-mr-sm\"\n                    size=\"sm\"\n                    v-if=\"filteredCategories.length\"\n                    @click=\"entryCategoryFilter = {}\"\n                >\n                    <q-tooltip>Clear category filter</q-tooltip>\n                </q-btn>\n                <q-btn round icon=\"settings\" class=\"self-end\" size=\"sm\" @click=\"openCreateCategory\">\n                    <q-tooltip>Manage categories</q-tooltip>\n                </q-btn>\n            </div>\n        </q-item-label>\n        <q-item v-if=\"categories.length\" class=\"q-pt-none q-mb-sm\" style=\"flex-wrap: wrap\">\n            <category-chips :categories=\"categories\" v-model=\"entryCategoryFilter\"></category-chips>\n        </q-item>\n        <q-item v-else class=\"text-grey\">There are no categories in this journal.</q-item>\n        <q-separator></q-separator>\n        <q-item-label header class=\"row justify-between items-center full-width q-mt-sm\">\n            Entries\n            <q-btn\n                round\n                icon=\"add\"\n                text-color=\"primary\"\n                class=\"self-end\"\n                size=\"sm\"\n                @click=\"openCreateEntry\"\n            >\n                <q-tooltip>Create a new entry</q-tooltip>\n            </q-btn>\n        </q-item-label>\n        <template v-if=\"filteredEntries.length\">\n            <q-item\n                v-for=\"e in filteredEntries\"\n                :key=\"e.id\"\n                :to=\"'/j/' + currentJournal + '/e/' + e.id\"\n            >\n                <q-item-section avatar>\n                    <q-icon\n                        v-if=\"e.avatar.type == 'icon'\"\n                        :name=\"e.avatar.data\"\n                        color=\"primary\"\n                    ></q-icon>\n                    <q-img\n                        ratio=\"1\"\n                        v-else\n                        :src=\"getEntryAvatar(e.id, e.avatar.data)\"\n                        class=\"rounded-borders\"\n                    ></q-img>\n                </q-item-section>\n                <q-item-section v-if=\"e.title\">\n                    {{ e.title }}\n                </q-item-section>\n                <q-item-section v-else class=\"text-grey text-italic\">\n                    Untitled entry\n                </q-item-section>\n            </q-item>\n        </template>\n        <q-item v-else-if=\"filteredEntries.length == 0 && entrySearch\">\n            <q-item-label caption>No results for \"{{ entrySearch }}\".</q-item-label>\n        </q-item>\n        <q-item v-if=\"entries.length <= 0\">\n            <q-item-label caption>There are no entries in this journal.</q-item-label>\n        </q-item>\n    </q-list>\n</template>\n\n<script lang=\"ts\">\nimport { intersection, xor } from \"lodash\";\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport CreateEntryDialog from \"@/components/CreateEntryDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { Category, Entry } from \"@/store/types\";\n\nimport CategoryChips from \"./CategoryChips.vue\";\nimport EntryLink from \"./EntryLink.vue\";\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\nexport default defineComponent({\n    name: \"JournalDrawer\",\n    components: { EntryLink, CategoryChips },\n    setup: (props) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const entrySearch = ref(\"\");\n        const entryCategoryFilter = ref<{ [key: string]: boolean }>({});\n\n        // Computed\n        const lastEntry = computed(() =>\n            $store.state.entries[$store.state.lastEntry] ? $store.state.lastEntry : undefined\n        );\n        const categories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const filteredCategories = computed(() =>\n            Object.entries(entryCategoryFilter.value)\n                .filter((kv) => kv[1])\n                .map((kv) => kv[0])\n        );\n        const filteredEntries = computed(() =>\n            Object.values(props.entries)\n                .filter((e) => (entrySearch.value ? e.title.includes(entrySearch.value) : true))\n                .filter((e) => {\n                    if (!filteredCategories.value.length) {\n                        return true;\n                    }\n                    // return xor(filteredCategories, e.category).length === 0;\n                    return filteredCategories.value.every((fc) => e.category.includes(fc));\n                })\n        );\n\n        // Functions\n        const openCreateEntry = () => {\n            $q.dialog({ component: CreateEntryDialog });\n        };\n        const openCreateCategory = () => {\n            $q.dialog({ component: ManageCategoriesDialog });\n        };\n        const getEntryAvatar = (id: string, name: string) => {\n            return $store.getters.entryAttachment(id, name);\n        };\n\n        return {\n            openCreateEntry,\n            getEntryAvatar,\n            lastEntry,\n            openCreateCategory,\n            entrySearch,\n            categories,\n            filteredEntries,\n            entryCategoryFilter,\n            filteredCategories,\n        };\n    },\n    props: {\n        currentJournal: {\n            type: String,\n        },\n        entries: {\n            type: Object as PropType<{ [key: string]: Entry }>,\n            default: {},\n        },\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <form @submit.prevent=\"submit\">\n                <q-card-section>\n                    <div class=\"text-h6\">Create a new entry</div>\n                </q-card-section>\n                <q-card-section class=\"q-pt-none row items-center\">\n                    <q-avatar\n                        :icon=\"avatar.data\"\n                        class=\"q-mr-md cursor-pointer\"\n                        rounded\n                        color=\"grey-4\"\n                        text-color=\"dark\"\n                        size=\"56px\"\n                        v-if=\"avatar.type == 'icon'\"\n                    >\n                        <q-tooltip>Change entry avatar</q-tooltip>\n                        <q-popup-proxy max-width=\"200px\" v-model=\"showIconDialog\">\n                            <entry-icon-dialog @attach=\"updateAvatar\"></entry-icon-dialog>\n                        </q-popup-proxy>\n                    </q-avatar>\n                    <q-avatar\n                        v-else\n                        class=\"q-mr-md cursor-pointer\"\n                        rounded\n                        color=\"grey-4\"\n                        text-color=\"dark\"\n                        size=\"56px\"\n                    >\n                        <q-tooltip>Change entry avatar</q-tooltip>\n                        <img :src=\"avatar.data\" />\n                        <q-popup-proxy max-width=\"200px\" v-model=\"showIconDialog\">\n                            <entry-icon-dialog @attach=\"updateAvatar\"></entry-icon-dialog>\n                        </q-popup-proxy>\n                    </q-avatar>\n                    <q-input\n                        placeholder=\"Untitled entry\"\n                        outlined\n                        autofocus\n                        class=\"col\"\n                        v-model=\"title\"\n                    ></q-input>\n                </q-card-section>\n                <q-card-section>\n                    <q-select\n                        label=\"In category...\"\n                        outlined\n                        dense\n                        multiple\n                        v-model=\"category\"\n                        :options=\"categories\"\n                        new-value-mode=\"add-unique\"\n                        option-label=\"name\"\n                        options-dense\n                        option-value=\"id\"\n                        emit-value\n                        map-options\n                        use-chips\n                    >\n                        <template v-slot:no-option>\n                            <q-item dense>\n                                <q-item-section class=\"text-italic text-grey\">\n                                    No categories\n                                </q-item-section>\n                            </q-item>\n                        </template>\n                        <template v-slot:after>\n                            <q-btn\n                                outline\n                                icon=\"add\"\n                                color=\"primary\"\n                                class=\"full-height\"\n                                @click=\"openManageCategories\"\n                            >\n                                <q-tooltip>Create a new category</q-tooltip>\n                            </q-btn>\n                        </template>\n                    </q-select>\n                </q-card-section>\n                <q-expansion-item label=\"Additional settings\" dense>\n                    <q-card-section>\n                        <q-select\n                            label=\"From template...\"\n                            v-model=\"template\"\n                            outlined\n                            dense\n                        ></q-select>\n                    </q-card-section>\n                </q-expansion-item>\n                <q-card-actions align=\"right\" class=\"text-primary\">\n                    <q-btn\n                        flat\n                        label=\"Create\"\n                        type=\"submit\"\n                        :disable=\"title.length <= 0\"\n                        :loading=\"loading\"\n                    >\n                        <template v-slot:loading>\n                            <q-spinner-dots class=\"on-left\" />\n                        </template>\n                    </q-btn>\n                    <q-btn flat label=\"Cancel\" @click=\"onCancelClick\" />\n                </q-card-actions>\n            </form>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { QDialog, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, reactive, ref, toRefs } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\nimport EntryIconDialog from \"@/components/EntryIconDialog.vue\";\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_CREATE_ENTRY,\n    CreateAttachment,\n    Entry,\n    EntryAvatar,\n} from \"@/store/types\";\n\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\ninterface CreateEntryDialogData {\n    avatar: EntryAvatar;\n    title: string;\n    category: string[];\n    template: string;\n    showIconDialog: boolean;\n    loading: boolean;\n}\n\nexport default defineComponent({\n    name: \"CreateEntryDialog\",\n    components: {\n        EntryIconDialog,\n    },\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup: () => {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n        const $route = useRoute();\n\n        const avatarFile = ref<File | undefined>(undefined);\n        const state = {\n            avatar: ref<EntryAvatar>({ type: \"icon\", data: \"subject\" }),\n            title: ref(\"\"),\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n            category: ref([]),\n            template: ref(\"\"),\n            loading: ref(false),\n            showIconDialog: ref(false),\n        };\n\n        const submit = async () => {\n            state.loading.value = true;\n            try {\n                if (state.avatar.value.type == \"attachment\") {\n                    if (!avatarFile.value) {\n                        throw new Error(\"Avatar never uploaded\");\n                    }\n                    const e = {\n                        title: state.title.value,\n                        avatar: { type: \"attachment\", data: \"avatar\" },\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: e2.id,\n                        attachment: {\n                            name: \"avatar\",\n                            data: avatarFile.value,\n                        } as CreateAttachment,\n                    });\n                    console.log($route.params.jid, e2.id);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                } else {\n                    const e = {\n                        title: state.title.value,\n                        avatar: state.avatar.value,\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                }\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            } finally {\n                state.loading.value = false;\n            }\n        };\n\n        const updateAvatar = (data: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            // Hide icon dialog\n            state.showIconDialog.value = false;\n            if (data.type === \"image\") {\n                const fr = new FileReader();\n                fr.onload = () => {\n                    if (fr.result == null) {\n                        $q.notify({ type: \"negative\", message: \"Failed to load avatar\" });\n                        return;\n                    }\n                    state.avatar.value = { type: \"attachment\", data: fr.result };\n                };\n                avatarFile.value = data.data as File;\n                fr.readAsDataURL(data.data as File);\n            } else if (data.type === \"icon\") {\n                avatarFile.value = undefined;\n                state.avatar.value = { type: \"icon\", data: data.data as string };\n            }\n        };\n\n        const openManageCategories = () => {\n            $q.dialog({\n                component: ManageCategoriesDialog,\n            });\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            ...state,\n            submit,\n            updateAvatar,\n            onOKClick() {\n                submit();\n                onDialogOK();\n                // or with payload: onDialogOK({ ... })\n                // ...and it will also hide the dialog automatically\n            },\n            openManageCategories,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-tabs class=\"text-primary\" v-model=\"tab\" dense>\n        <q-tab label=\"Icon\" name=\"icon\"></q-tab>\n        <q-tab label=\"Image\" name=\"image\" v-if=\"!useAttachments\"></q-tab>\n        <q-tab label=\"Attachment\" name=\"attachment\" v-if=\"useAttachments\"></q-tab>\n    </q-tabs>\n    <q-separator></q-separator>\n    <q-tab-panels v-model=\"tab\" animated>\n        <q-tab-panel name=\"icon\" class=\"text-dark\">\n            <q-list :style=\"{ maxHeight: '150px' }\">\n                <q-item class=\"column q-pa-none\" v-for=\"g in iconGroups\" :key=\"g\">\n                    <q-item-label caption>{{ g.category }}</q-item-label>\n                    <q-item-label class=\"full-width row q-my-xs\">\n                        <q-icon\n                            v-for=\"i in g.icons\"\n                            :name=\"i\"\n                            :key=\"i\"\n                            class=\"q-pa-xs cursor-pointer\"\n                            size=\"16px\"\n                            @click=\"attachIcon(i)\"\n                        ></q-icon>\n                    </q-item-label>\n                </q-item>\n            </q-list>\n        </q-tab-panel>\n        <q-tab-panel name=\"image\" v-if=\"!useAttachments\">\n            <q-file\n                bottom-slots\n                accept=\"image/*\"\n                class=\"full-width\"\n                placeholder=\"Choose one image...\"\n                v-model=\"selectedImage\"\n            >\n                <template v-slot:hint>Images only. 512x512 recommended.</template>\n            </q-file>\n            <q-btn\n                color=\"primary\"\n                label=\"Attach\"\n                class=\"full-width q-mt-lg\"\n                size=\"sm\"\n                @click=\"attachImage\"\n            ></q-btn>\n        </q-tab-panel>\n        <q-tab-panel name=\"attachment\" class=\"text-dark\" v-if=\"useAttachments\">\n            <q-btn\n                outline\n                dense\n                label=\"Select an attachment\"\n                color=\"primary\"\n                @click=\"selectAttachment\"\n            ></q-btn>\n        </q-tab-panel>\n    </q-tab-panels>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nimport SelectAttachmentsDialog from \"./attachments/SelectAttachmentsDialog.vue\";\n\ninterface EntryIconDialogData {\n    selectedImage?: File;\n    tab: \"icon\" | \"image\";\n    iconGroups: {\n        category: string;\n        icons: string[];\n    }[];\n}\n\nexport default defineComponent({\n    name: \"EntryIconDialog\",\n    props: {\n        useAttachments: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n        },\n    },\n    emits: [\"attach\"],\n    methods: {\n        attachImage() {\n            if (this.selectedImage) {\n                this.$emit(\"attach\", { type: \"image\", data: this.selectedImage });\n            }\n        },\n        attachIcon(icon: string) {\n            this.$emit(\"attach\", { type: \"icon\", data: icon });\n        },\n        selectAttachment() {\n            this.$q\n                .dialog({\n                    component: SelectAttachmentsDialog,\n                    componentProps: {\n                        entry: this.entry,\n                    },\n                })\n                .onOk((val: string) => {\n                    this.$emit(\"attach\", { type: \"attachment\", data: val });\n                });\n        },\n    },\n    data() {\n        return {\n            selectedImage: undefined,\n            tab: \"icon\",\n            iconGroups: [\n                {\n                    category: \"Standard\",\n                    icons: [\"subject\", \"person\", \"map\"],\n                },\n                {\n                    category: \"Figures\",\n                    icons: [\n                        \"person\",\n                        \"group\",\n                        \"groups\",\n                        \"directions_run\",\n                        \"elderly\",\n                        \"emoji_people\",\n                        \"self_improvement\",\n                        \"record_voice_over\",\n                        \"manage_accounts\",\n                        \"accessible\",\n                        \"sentiment_very_satisfied\",\n                        \"sentiment_satisfied\",\n                        \"sentiment_neutral\",\n                        \"sentiment_dissatisfied\",\n                        \"sentiment_very_dissatisfied\",\n                        \"mood_bad\",\n                    ],\n                },\n                {\n                    category: \"Locations\",\n                    icons: [\n                        \"home\",\n                        \"apartment\",\n                        \"corporate_fare\",\n                        \"fence\",\n                        \"holiday_village\",\n                        \"foundation\",\n                        \"festival\",\n                        \"store_mall_directory\",\n                        \"storefront\",\n                        \"terrain\",\n                        \"map\",\n                        \"park\",\n                        \"place\",\n                        \"attractions\",\n                        \"home_work\",\n                        \"public\",\n                    ],\n                },\n                {\n                    category: \"Miscellaneous\",\n                    icons: [\n                        \"radio_button_checked\",\n                        \"radio_button_unchecked\",\n                        \"trip_origin\",\n                        \"lens\",\n                        \"adjust\",\n                        \"device_hub\",\n                        \"bubble_chart\",\n                        \"error\",\n                        \"stars\",\n                        \"build_circle\",\n                    ],\n                },\n            ],\n        } as EntryIconDialogData;\n    },\n});\n</script>\n","<template>\n    <!-- notice dialogRef here -->\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">\n                    Select attachment\n                    <span v-if=\"selected.length\">({{ selected.length }})</span>\n                </div>\n                <q-space></q-space>\n                <q-btn icon=\"add\" color=\"primary\" flat round dense>\n                    <q-tooltip>Create a new attachment</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <q-list bordered separator dense style=\"max-height: 150px; overflow: auto\">\n                <q-item\n                    clickable\n                    v-ripple\n                    v-for=\"(att, attName) in entry.attachments\"\n                    :key=\"attName\"\n                    @click=\"setSelected(attName)\"\n                    :active=\"selected == attName\"\n                >\n                    <q-item-section avatar class=\"q-pr-none\" style=\"min-width: 0; width: 28px\">\n                        <q-icon :name=\"getAttachmentIcon(att.content_type)\" size=\"20px\"></q-icon>\n                    </q-item-section>\n                    <q-item-section>\n                        {{ attName }}\n                    </q-item-section>\n                    <q-item-section side>\n                        <q-badge outline color=\"grey\">\n                            {{ getExtension(att.content_type) || \"?\" }}\n                        </q-badge>\n                    </q-item-section>\n                </q-item>\n            </q-list>\n            <q-card-actions align=\"right\">\n                <div class=\"text-body q-pl-md text-grey\">\n                    {{ filteredAttachmentsLen }} attachment{{\n                        filteredAttachmentsLen == 1 ? \"\" : \"s\"\n                    }}\n                </div>\n                <q-space></q-space>\n                <q-btn\n                    color=\"primary\"\n                    flat\n                    :disable=\"!selected.length\"\n                    label=\"Select\"\n                    @click=\"onOKClick\"\n                />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport { useDialogPluginComponent } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nexport default defineComponent({\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        // Refs\n        const selected = ref<string[]>([]);\n\n        // Computed\n        const filteredAttachments = computed(() => props.entry.attachments);\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (selected.value.includes(key)) {\n                selected.value = selected.value.filter((s) => s !== key);\n            } else {\n                if (props.multiple) {\n                    selected.value.push(key);\n                } else {\n                    selected.value = [key];\n                }\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            getAttachmentIcon,\n            getExtension: mime.extension,\n            selected,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            setSelected,\n\n            onOKClick() {\n                if (selected.value) {\n                    onDialogOK(props.multiple ? selected.value : selected.value[0]);\n                }\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","export const API_FETCH_JOURNALS = \"API_FETCH_JOURNALS\";\nexport const API_CREATE_JOURNAL = \"API_CREATE_JOURNAL\";\nexport const API_OPEN_JOURNAL = \"API_OPEN_JOURNAL\";\nexport const API_FETCH_JOURNAL = \"API_FETCH_JOURNAL\";\nexport const API_CLOSE_JOURNAL = \"API_CLOSE_JOURNAL\";\nexport const API_CREATE_ENTRY = \"API_CREATE_ENTRY\";\nexport const API_FETCH_ENTRIES = \"API_FETCH_ENTRIES\";\nexport const API_FETCH_ENTRY = \"API_FETCH_ENTRY\";\nexport const API_UPDATE_ENTRY = \"API_UPDATE_ENTRY\";\nexport const API_DELETE_ENTRY = \"API_DELETE_ENTRY\";\nexport const API_ADD_ENTRY_ATTACHMENT = \"API_ADD_ENTRY_ATTACHMENT\";\nexport const API_DELETE_ENTRY_ATTACHMENT = \"API_DELETE_ENTRY_ATTACHMENT\";\nexport const API_SET_LAST_ENTRY = \"API_SET_LAST_ENTRY\";\nexport const API_UPDATE_JOURNAL = \"API_UPDATE_JOURNAL\";\n\nexport const SET_JOURNAL = \"SET_JOURNAL\";\nexport const SET_JOURNALS = \"SET_JOURNALS\";\nexport const SET_ENTRIES = \"SET_ENTRIES\";\nexport const SET_ENTRY = \"SET_ENTRY\";\nexport const UI_VISIBILITY = \"UI_VISIBILITY\";\nexport const SET_CURRENT_JOURNAL = \"SET_CURRENT_JOURNAL\";\nexport const SET_DB = \"SET_DB\";\nexport const SET_LAST_ENTRY = \"SET_LAST_ENTRY\";\n\nexport const indexDocumentKey = \"0\";\n\nexport enum FieldType {\n    Text = 0,\n    Description = 1,\n    Number = 2,\n    Toggle = 3,\n    Progress = 4,\n    Attachments = 5,\n    Map = 6,\n    Reference = 7,\n    Embed = 8,\n}\n\nexport type Journal = {\n    id: string;\n    title: string;\n};\n\nexport enum DocumentType {\n    Entry = \"entry\",\n    Category = \"category\",\n}\n\nexport type JournalIndex = {\n    title: string;\n    description: string;\n    categories: Category[];\n};\n\nexport type FetchEntriesOpts = {\n    save: boolean;\n    category: string;\n    flush: boolean;\n};\n\nexport type Category = {\n    name: string;\n    color: string;\n    labelSingular: string;\n    labelPlural: string;\n    id: string;\n};\n\nexport type Entry = {\n    type: DocumentType.Entry;\n    title: string;\n    avatar: EntryAvatar;\n    category: string[];\n    fields: Field[];\n    id: string;\n    readonly attachments: { [key: string]: PouchDB.Core.FullAttachment };\n};\n\nexport type BaseField = {\n    name: string;\n    id: string;\n};\n\nexport type Field =\n    | TextField\n    | DescriptionField\n    | NumberField\n    | ToggleField\n    | ProgressField\n    | AttachmentsField\n    | EmbedField\n    | MapField\n    | ReferenceField;\n\nexport type TextField = BaseField & {\n    type: FieldType.Text;\n    content: string;\n};\n\nexport type DescriptionField = BaseField & {\n    type: FieldType.Description;\n    content: string;\n};\n\nexport type NumberField = BaseField & {\n    type: FieldType.Number;\n    value: number;\n};\n\nexport type ToggleField = BaseField & {\n    type: FieldType.Toggle;\n    value: boolean;\n    whenTrue: string;\n    whenFalse: string;\n};\n\nexport type ProgressField = BaseField & {\n    type: FieldType.Progress;\n    minValue: number;\n    value: number;\n    maxValue: number;\n    showBar: boolean;\n    barType: \"linear\" | \"circular\";\n    barColor: string;\n    label: string;\n};\n\nexport type AttachmentsField = BaseField & {\n    type: FieldType.Attachments;\n    attachments: string[];\n};\n\nexport type CreateAttachment = {\n    name: string;\n    data: File | string;\n};\n\nexport enum EmbedFieldService {\n    Invalid = -1,\n    Unknown = 0,\n    YouTube = 1,\n    Spotify = 2,\n    Soundcloud = 3,\n}\n\nexport type EmbedField = BaseField & {\n    type: FieldType.Embed;\n    url: string;\n};\n\nexport type MapField = BaseField & {\n    type: FieldType.Map;\n    customName?: string;\n    imageKey?: string;\n    locations: MapFieldLocation[];\n};\n\nexport type MapFieldLocation = {\n    entryId: string;\n    position: [number, number];\n};\n\nexport type ReferenceField = BaseField & {\n    type: FieldType.Reference;\n    entries: string[];\n    categories: string[];\n};\n\nexport type EntryAvatar = {\n    type: \"icon\" | \"attachment\";\n    data: string | ArrayBuffer;\n};\n\nexport type CurrentJournal = {\n    index: JournalIndex;\n    categories: string[];\n    entries: Entry[];\n};\n\nexport type CreateJournal = Pick<Journal, \"title\">;\n","import { EmbedFieldService } from \"./store/types\";\n\nconst validateYouTubeUrl = (url = \"\") => {\n    const regExp = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n    if (url.match(regExp)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nconst validateSoundcloudUrl = (url = \"\") => {\n    if (url.match(/^(https?:\\/\\/)?(www\\.)?(soundcloud\\.com|snd\\.sc)\\/.*$/)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const getEmbedService = (url: string): EmbedFieldService => {\n    // Validate URL\n    try {\n        new URL(url);\n    } catch (e) {\n        return EmbedFieldService.Invalid;\n    }\n\n    // Match URL to service\n    if (validateYouTubeUrl(url)) {\n        return EmbedFieldService.YouTube;\n    } else if (validateSoundcloudUrl(url)) {\n        return EmbedFieldService.Soundcloud;\n    } else {\n        return EmbedFieldService.Unknown;\n    }\n};\n\nexport const b64 = (contentType: string, data: string) => {\n    return \"data:\" + contentType + \";base64,\" + data;\n};\n\nexport const getAttachmentIcon = (type: string) => {\n    if (type.startsWith(\"text/\")) {\n        return \"description\";\n    }\n    if (type.startsWith(\"image/\")) {\n        return \"insert_photo\";\n    }\n    if (type.startsWith(\"audio/\")) {\n        return \"headset\";\n    }\n    if (type.startsWith(\"video/\")) {\n        return \"movie\";\n    }\n    return \"insert_drive_file\";\n};\n\nexport const renderText = (data: string) => {\n    return atob(data);\n};\n\nexport const b64toBlob = (b64Data: string, contentType?: string, sliceSize?: number) => {\n    contentType = contentType || \"\";\n    sliceSize = sliceSize || 512;\n\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n\n        byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n};\n","\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nexport default defineComponent({\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        // Refs\n        const selected = ref<string[]>([]);\n\n        // Computed\n        const filteredAttachments = computed(() => props.entry.attachments);\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (selected.value.includes(key)) {\n                selected.value = selected.value.filter((s) => s !== key);\n            } else {\n                if (props.multiple) {\n                    selected.value.push(key);\n                } else {\n                    selected.value = [key];\n                }\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            getAttachmentIcon,\n            getExtension: mime.extension,\n            selected,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            setSelected,\n\n            onOKClick() {\n                if (selected.value) {\n                    onDialogOK(props.multiple ? selected.value : selected.value[0]);\n                }\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./SelectAttachmentsDialog.vue?vue&type=template&id=7037d441\"\nimport script from \"./SelectAttachmentsDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectAttachmentsDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QList,QItem,QItemSection,QIcon,QBadge,QCardActions});qInstall(script, 'directives', {Ripple});\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nimport SelectAttachmentsDialog from \"./attachments/SelectAttachmentsDialog.vue\";\n\ninterface EntryIconDialogData {\n    selectedImage?: File;\n    tab: \"icon\" | \"image\";\n    iconGroups: {\n        category: string;\n        icons: string[];\n    }[];\n}\n\nexport default defineComponent({\n    name: \"EntryIconDialog\",\n    props: {\n        useAttachments: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n        },\n    },\n    emits: [\"attach\"],\n    methods: {\n        attachImage() {\n            if (this.selectedImage) {\n                this.$emit(\"attach\", { type: \"image\", data: this.selectedImage });\n            }\n        },\n        attachIcon(icon: string) {\n            this.$emit(\"attach\", { type: \"icon\", data: icon });\n        },\n        selectAttachment() {\n            this.$q\n                .dialog({\n                    component: SelectAttachmentsDialog,\n                    componentProps: {\n                        entry: this.entry,\n                    },\n                })\n                .onOk((val: string) => {\n                    this.$emit(\"attach\", { type: \"attachment\", data: val });\n                });\n        },\n    },\n    data() {\n        return {\n            selectedImage: undefined,\n            tab: \"icon\",\n            iconGroups: [\n                {\n                    category: \"Standard\",\n                    icons: [\"subject\", \"person\", \"map\"],\n                },\n                {\n                    category: \"Figures\",\n                    icons: [\n                        \"person\",\n                        \"group\",\n                        \"groups\",\n                        \"directions_run\",\n                        \"elderly\",\n                        \"emoji_people\",\n                        \"self_improvement\",\n                        \"record_voice_over\",\n                        \"manage_accounts\",\n                        \"accessible\",\n                        \"sentiment_very_satisfied\",\n                        \"sentiment_satisfied\",\n                        \"sentiment_neutral\",\n                        \"sentiment_dissatisfied\",\n                        \"sentiment_very_dissatisfied\",\n                        \"mood_bad\",\n                    ],\n                },\n                {\n                    category: \"Locations\",\n                    icons: [\n                        \"home\",\n                        \"apartment\",\n                        \"corporate_fare\",\n                        \"fence\",\n                        \"holiday_village\",\n                        \"foundation\",\n                        \"festival\",\n                        \"store_mall_directory\",\n                        \"storefront\",\n                        \"terrain\",\n                        \"map\",\n                        \"park\",\n                        \"place\",\n                        \"attractions\",\n                        \"home_work\",\n                        \"public\",\n                    ],\n                },\n                {\n                    category: \"Miscellaneous\",\n                    icons: [\n                        \"radio_button_checked\",\n                        \"radio_button_unchecked\",\n                        \"trip_origin\",\n                        \"lens\",\n                        \"adjust\",\n                        \"device_hub\",\n                        \"bubble_chart\",\n                        \"error\",\n                        \"stars\",\n                        \"build_circle\",\n                    ],\n                },\n            ],\n        } as EntryIconDialogData;\n    },\n});\n","import { render } from \"./EntryIconDialog.vue?vue&type=template&id=8cb0c310\"\nimport script from \"./EntryIconDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./EntryIconDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QTabs from 'quasar/src/components/tabs/QTabs.js';\nimport QTab from 'quasar/src/components/tabs/QTab.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QTabPanels from 'quasar/src/components/tab-panels/QTabPanels.js';\nimport QTabPanel from 'quasar/src/components/tab-panels/QTabPanel.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QFile from 'quasar/src/components/file/QFile.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QTabs,QTab,QSeparator,QTabPanels,QTabPanel,QList,QItem,QItemLabel,QIcon,QFile,QBtn});\n","import PouchDB from \"pouchdb\";\nimport allDbs from \"pouchdb-all-dbs\";\nimport PouchDBFind from \"pouchdb-find\";\n\nallDbs(PouchDB);\nPouchDB.plugin(PouchDBFind);\n\nexport function openLocal(name: string) {\n    return new PouchDB(name);\n}\n\nexport function useDB(name: string, mustExist = true) {\n    if (mustExist) {\n        try {\n            const db = new PouchDB(name, { skip_setup: true });\n            return db;\n        } catch (e) {\n            console.log(e);\n            throw new Error(\"Database does not exist\");\n        }\n    } else {\n        return new PouchDB(name);\n    }\n}\n\nexport { PouchDB };\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport Cookies from \"js-cookie\";\nimport * as mime from \"mime-types\";\nimport shortid from \"short-uuid\";\nimport { InjectionKey, unref } from \"vue\";\nimport { createLogger, createStore, Plugin, Store, useStore as baseUseStore } from \"vuex\";\n\nimport { openLocal, PouchDB, useDB } from \"@/db\";\nimport { b64 } from \"@/utils\";\n\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_CLOSE_JOURNAL,\n    API_CREATE_ENTRY,\n    API_CREATE_JOURNAL,\n    API_DELETE_ENTRY,\n    API_DELETE_ENTRY_ATTACHMENT,\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    API_FETCH_JOURNAL,\n    API_FETCH_JOURNALS,\n    API_OPEN_JOURNAL,\n    API_SET_LAST_ENTRY,\n    API_UPDATE_ENTRY,\n    API_UPDATE_JOURNAL,\n    CreateAttachment,\n    CreateJournal,\n    DocumentType,\n    Entry,\n    FetchEntriesOpts,\n    indexDocumentKey,\n    JournalIndex,\n    SET_CURRENT_JOURNAL,\n    SET_ENTRIES,\n    SET_ENTRY,\n    SET_JOURNAL,\n    SET_JOURNALS,\n    SET_LAST_ENTRY,\n    UI_VISIBILITY,\n} from \"./types\";\n\nexport interface State {\n    fetchingJournals: boolean;\n    fetchingJournalsOpen?: string;\n    fetchingEntries: boolean;\n    currentJournal?: string;\n    entries: { [key: string]: Entry };\n    journals: { [key: string]: JournalIndex };\n    lastEntry: string;\n    showUi: boolean;\n}\n\nexport const key: InjectionKey<Store<State>> = Symbol();\n\nconst dbIndexes = [[\"title\"], [\"type\"], [\"category\"]];\n\nexport function useStore() {\n    return baseUseStore(key);\n}\n\nexport const store = createStore<State>({\n    state: {\n        fetchingJournals: false,\n        fetchingEntries: false,\n        currentJournal: undefined,\n        showUi: false,\n        entries: {},\n        lastEntry: \"\",\n        journals: {},\n    },\n    mutations: {\n        [SET_LAST_ENTRY](state, payload: string) {\n            state.lastEntry = payload;\n        },\n        [SET_JOURNALS](state, payload: { [key: string]: JournalIndex }) {\n            state.journals = payload;\n        },\n        [SET_JOURNAL](state, payload: { id: string; journal: JournalIndex }) {\n            state.journals[payload.id] = payload.journal;\n        },\n        [UI_VISIBILITY](state, payload: boolean) {\n            state.showUi = payload;\n        },\n        [SET_CURRENT_JOURNAL](state, payload?: string) {\n            state.currentJournal = payload;\n        },\n        [SET_ENTRIES](state, payload: { [key: string]: Entry }) {\n            if (state.currentJournal) {\n                state.entries = payload;\n            }\n        },\n        [SET_ENTRY](state, payload: { id: string; entry: Entry }) {\n            state.entries[payload.id] = payload.entry;\n        },\n    },\n    getters: {\n        currentJournal(state) {\n            return state.currentJournal ? state.journals[state.currentJournal] : undefined;\n        },\n        entryAttachment: (state) => (id: string, name: string) => {\n            if (id in state.entries) {\n                if (name in state.entries[id].attachments) {\n                    return b64(\n                        state.entries[id].attachments[name].content_type,\n                        state.entries[id].attachments[name].data as string\n                    );\n                }\n            }\n            return undefined;\n        },\n        entryAttachmentFull: (state) => (id: string, name: string) => {\n            if (id in state.entries) {\n                if (name in state.entries[id].attachments) {\n                    return state.entries[id].attachments[name];\n                }\n            }\n            return undefined;\n        },\n    },\n    actions: {\n        async [API_SET_LAST_ENTRY]({ commit }, payload: string) {\n            Cookies.set(\"lastEntry\", payload);\n            commit(SET_LAST_ENTRY, payload);\n        },\n        async [API_DELETE_ENTRY_ATTACHMENT](\n            { state, dispatch },\n            payload: { id: string; name: string }\n        ) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened\");\n            }\n\n            // Delete attachment from database\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                const e = await db.get<Entry>(payload.id);\n                await db.removeAttachment(payload.id, payload.name, e._rev);\n                await db.close();\n                await dispatch(API_FETCH_ENTRY, { id: payload.id, force: true });\n            } catch (e) {\n                throw new Error(e.message);\n            }\n        },\n        async [API_ADD_ENTRY_ATTACHMENT](\n            { state, dispatch },\n            payload: { id: string; attachment: CreateAttachment }\n        ) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened\");\n            }\n\n            // Add attachment to database\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                const e = await db.get<Entry>(payload.id);\n\n                // Determine attachment content-type\n                let contentType = \"text/plain\";\n                if (payload.attachment.data instanceof File) {\n                    const mType = mime.extension(payload.attachment.data.name) || \"text/plain\";\n                    contentType = payload.attachment.data.type || mType;\n                }\n\n                // Save attachment\n                await db.putAttachment(\n                    payload.id,\n                    payload.attachment.name,\n                    e._rev,\n                    new Blob([payload.attachment.data], { type: contentType }),\n                    contentType\n                );\n                await db.close();\n                await dispatch(API_FETCH_ENTRY, { id: payload.id, force: true });\n            } catch (e) {\n                throw new Error(e.message);\n            }\n        },\n        async [API_DELETE_ENTRY]({ state, dispatch }, payload: string) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened\");\n            }\n\n            // Delete database entry\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                const e = await db.get<Entry>(payload);\n                await db.remove(e._id, e._rev);\n                await db.close();\n            } catch (e) {\n                throw new Error(e.message);\n            }\n\n            await dispatch(API_FETCH_ENTRIES);\n        },\n        async [API_UPDATE_ENTRY]({ state, dispatch }, payload: { id: string; data: Entry }) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n\n            // Update database entry\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                let e = await db.get<Entry>(payload.id);\n                e = { ...e, ...payload.data };\n\n                // Ensure attachments map isn't included in update\n                if (Object.prototype.hasOwnProperty.call(e, \"attachments\")) {\n                    delete (e as any)[\"attachments\"];\n                }\n\n                await db.put(e);\n                await db.close();\n            } catch (e) {\n                throw new Error(e.message);\n            }\n\n            await dispatch(API_FETCH_ENTRIES);\n        },\n        async [API_FETCH_JOURNALS]({ commit, state, dispatch }) {\n            state.fetchingJournals = true;\n\n            // Fetch and filter all databases native to ajourn\n            const all = (await PouchDB.allDbs()).filter((j) => j.startsWith(\"aj_\"));\n\n            // Fetch index document from each database to aggregate\n            const inds: { [key: string]: JournalIndex } = {};\n            for (let i = 0; i < all.length; i++) {\n                const db = useDB(all[i]);\n                try {\n                    const ind = await db.get<JournalIndex>(indexDocumentKey);\n                    const key = all[i].replace(\"aj_\", \"\");\n                    inds[key] = ind;\n                } catch (e) {\n                    continue;\n                } finally {\n                    await db.close();\n                    state.fetchingJournals = false;\n                }\n            }\n\n            // Update journals in local state\n            commit(SET_JOURNALS, inds);\n\n            // Open journal if cached\n            if (state.fetchingJournalsOpen) {\n                await dispatch(API_OPEN_JOURNAL, state.fetchingJournalsOpen);\n                state.fetchingJournalsOpen = \"\";\n            }\n        },\n        async [API_FETCH_JOURNAL]({ state, commit }, payload: string) {\n            // Check if journal exists in local state\n            if (state.journals[payload]) {\n                return state.journals[payload];\n            }\n\n            const db = new PouchDB(payload, { skip_setup: true });\n            // Load journal from database\n            try {\n                const i = await db.get<JournalIndex>(indexDocumentKey);\n\n                // Add journal to local state\n                // state.journals[payload] = i;\n                commit(SET_JOURNAL, { id: payload, journal: i });\n\n                return i;\n            } catch (e) {\n                throw new Error(\"Journal does not exist\");\n            } finally {\n                await db.close();\n            }\n        },\n        async [API_CLOSE_JOURNAL]({ state, commit }) {\n            commit(SET_CURRENT_JOURNAL, \"\");\n            commit(SET_ENTRIES, {});\n        },\n        async [API_UPDATE_JOURNAL]({ state, commit }, payload: Partial<JournalIndex>) {\n            if (!state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n            const db = useDB(`aj_${state.currentJournal}`);\n            try {\n                let j = await db.get<JournalIndex>(indexDocumentKey);\n                j = { ...j, ...payload };\n\n                await db.put(j);\n                commit(SET_JOURNAL, { id: state.currentJournal, journal: j });\n            } catch (e) {\n                throw new Error(e.message);\n            } finally {\n                await db.close();\n            }\n        },\n        async [API_OPEN_JOURNAL]({ dispatch, commit, state }, payload: string) {\n            if (state.fetchingJournals) {\n                state.fetchingJournalsOpen = payload;\n                return;\n            }\n\n            // Test open journal database - create database indexes\n            const db = useDB(`aj_${payload}`);\n            try {\n                for (let i = 0; i < dbIndexes.length; i++) {\n                    await db.createIndex({ index: { fields: dbIndexes[i] } });\n                }\n            } catch (e) {\n                throw new Error(e.message);\n            } finally {\n                await db.close();\n            }\n\n            // Set current journal\n            commit(SET_CURRENT_JOURNAL, payload);\n\n            // Load top-level state collections\n            await dispatch(API_FETCH_ENTRIES);\n        },\n        async [API_CREATE_ENTRY]({ state, dispatch }, payload: Entry) {\n            if (!state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n\n            // Create entry\n            const db = useDB(`aj_${state.currentJournal}`);\n            const id = shortid.generate();\n            await db.put<Entry>({\n                _id: id,\n                ...payload,\n                type: DocumentType.Entry,\n                fields: [],\n            });\n            await db.close();\n            await dispatch(API_FETCH_ENTRIES);\n            return await dispatch(API_FETCH_ENTRY, { id });\n        },\n        async [API_FETCH_ENTRY](\n            { state, dispatch, commit },\n            payload: { id: string; force: boolean }\n        ) {\n            if (!state.currentJournal && !state.fetchingEntries) {\n                throw new Error(\"Journal not opened.\");\n            }\n\n            // Check if entry exists in local state\n            if (\n                state.entries[payload.id] &&\n                Object.prototype.hasOwnProperty.call(state.entries[payload.id], \"attachments\") &&\n                !payload.force\n            ) {\n                return state.entries[payload.id];\n            }\n\n            // Load journal from database\n            const db = useDB(`aj_${state.currentJournal}`);\n            try {\n                let e = await db.get<Entry>(payload.id, { attachments: true });\n                e = {\n                    ...e,\n                    attachments: e._attachments\n                        ? (e._attachments as {\n                              [key: string]: PouchDB.Core.FullAttachment;\n                          })\n                        : {},\n                    id: e._id,\n                };\n                if (e._attachments) {\n                    delete e._attachments;\n                }\n                commit(SET_ENTRY, { id: e._id, entry: e });\n                return e;\n            } catch (e) {\n                throw new Error(\"Entry does not exist.\");\n            } finally {\n                await db.close();\n            }\n        },\n        async [API_FETCH_ENTRIES](\n            { state, commit },\n            payload: FetchEntriesOpts = { save: true, category: \"\", flush: true }\n        ) {\n            if (!state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n            const db = useDB(`aj_${state.currentJournal}`);\n            state.fetchingEntries = true;\n            let data;\n            try {\n                data = await db.find({\n                    selector: {\n                        type: DocumentType.Entry,\n                        category: payload.category\n                            ? { $elemMatch: { $eq: payload.category } }\n                            : undefined,\n                    },\n                    fields: [\n                        \"_id\",\n                        \"title\",\n                        \"avatar\",\n                        \"category\",\n                        \"type\",\n                        \"fields\",\n                        \"_attachments\",\n                    ],\n                });\n                // Map attachments to all entries\n                let data2 = data.docs.map((d: any) => {\n                    return {\n                        id: d._id,\n                        title: d.title,\n                        avatar: d.avatar,\n                        category: d.category,\n                        type: d.type,\n                        fields: d.fields,\n                        attachments: d._attachments ? d._attachments : {},\n                    };\n                });\n                if (payload.save) {\n                    data2 = payload.flush ? data2 : { ...state.entries, ...data2 };\n                    commit(\n                        SET_ENTRIES,\n                        data2.reduce((acc, e) => ({ [e.id]: e, ...acc }), {})\n                    );\n                }\n                return data2;\n            } catch (e) {\n                throw new Error(e.message);\n            } finally {\n                await db.close();\n                state.fetchingEntries = false;\n            }\n        },\n        async [API_CREATE_JOURNAL]({ state }, payload: CreateJournal) {\n            const id = shortid.generate();\n            const db = useDB(`aj_${id}`, false);\n            await db.put({\n                _id: indexDocumentKey,\n                title: payload.title,\n                description: `${payload.title}... What a strange place.`,\n                categories: [],\n            } as JournalIndex);\n            await db.close();\n            await this.dispatch(API_FETCH_JOURNALS);\n            return id;\n        },\n    },\n    modules: {},\n    plugins: [createLogger()],\n});\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">Manage categories</div>\n                <q-space></q-space>\n                <q-btn icon=\"add\" color=\"primary\" flat round dense @click=\"addCategory\">\n                    <q-tooltip>Create a new category</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <q-card-section>\n                <q-list\n                    bordered\n                    class=\"rounded-borders\"\n                    style=\"overflow: auto; max-height: 300px\"\n                    v-if=\"categories.length\"\n                >\n                    <template v-for=\"(c, idx) in categories\" :key=\"c.id\">\n                        <q-expansion-item\n                            expand-separator\n                            :label=\"c.name ? c.name : '[ Untitled category ]'\"\n                            icon=\"circle\"\n                            caption=\"0 entries\"\n                            :header-style=\"c.color ? { color: c.color } : {}\"\n                            group=\"categories\"\n                        >\n                            <q-card>\n                                <q-card-section>\n                                    <q-input\n                                        outlined\n                                        dense\n                                        label=\"Name\"\n                                        v-model=\"c.name\"\n                                        class=\"q-mb-sm\"\n                                        :rules=\"[(val) => !!val || 'Please input a valid name']\"\n                                        hide-bottom-space\n                                    ></q-input>\n                                    <q-input\n                                        outlined\n                                        dense\n                                        v-model=\"c.color\"\n                                        label=\"Color\"\n                                        class=\"q-mb-sm\"\n                                    >\n                                        <template v-slot:append>\n                                            <q-icon name=\"colorize\" class=\"cursor-pointer\">\n                                                <q-popup-proxy\n                                                    transition-show=\"scale\"\n                                                    transition-hide=\"scale\"\n                                                >\n                                                    <q-color v-model=\"c.color\" />\n                                                </q-popup-proxy>\n                                            </q-icon>\n                                        </template>\n                                    </q-input>\n                                    <div class=\"row q-gutter-sm no-wrap\">\n                                        <q-input\n                                            outlined\n                                            dense\n                                            v-model=\"c.labelSingular\"\n                                            label=\"Singular label\"\n                                            stack-label\n                                            :placeholder=\"pluralize.singular(c.name)\"\n                                        >\n                                        </q-input>\n                                        <q-input\n                                            outlined\n                                            dense\n                                            v-model=\"c.labelPlural\"\n                                            label=\"Plural label\"\n                                            :placeholder=\"namePluralized\"\n                                            stack-label\n                                        >\n                                        </q-input>\n                                    </div>\n                                </q-card-section>\n                            </q-card>\n                        </q-expansion-item>\n                        <q-separator v-if=\"idx != categories.length - 1\"></q-separator>\n                    </template>\n                </q-list>\n                <div class=\"text-body1 text-grey\" v-else>\n                    No categories indexed for this journal.\n                </div>\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" flat label=\"Save changes\" @click=\"saveChanges\" />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { cloneDeep } from \"lodash\";\nimport pluralize from \"pluralize\";\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport randomColor from \"randomcolor\";\nimport shortid from \"short-uuid\";\nimport { computed, defineComponent, ref, unref, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_UPDATE_JOURNAL, Category } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ManageCategoriesDialog\",\n    props: {},\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const categories = ref<Category[]>(\n            $store.getters.currentJournal ? cloneDeep($store.getters.currentJournal.categories) : []\n        );\n\n        // Computed\n        const namePluralized = computed((idx: number) =>\n            categories.value[idx] ? pluralize(categories.value[idx].name) : \"\"\n        );\n\n        // Functions\n        const addCategory = () => {\n            categories.value.push({\n                name: \"Untitled category\",\n                labelSingular: \"\",\n                labelPlural: \"\",\n                color: randomColor({ luminosity: \"dark\" }),\n                id: shortid.generate(),\n            });\n        };\n\n        const saveChanges = async () => {\n            try {\n                await $store.dispatch(API_UPDATE_JOURNAL, { categories: unref(categories) });\n                onDialogOK();\n            } catch (e) {\n                console.error(e);\n                $q.notify({ message: e.message, type: \"negative\" });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            categories,\n            addCategory,\n            pluralize,\n            namePluralized,\n            saveChanges,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport { cloneDeep } from \"lodash\";\nimport pluralize from \"pluralize\";\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport randomColor from \"randomcolor\";\nimport shortid from \"short-uuid\";\nimport { computed, defineComponent, ref, unref, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_UPDATE_JOURNAL, Category } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ManageCategoriesDialog\",\n    props: {},\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const categories = ref<Category[]>(\n            $store.getters.currentJournal ? cloneDeep($store.getters.currentJournal.categories) : []\n        );\n\n        // Computed\n        const namePluralized = computed((idx: number) =>\n            categories.value[idx] ? pluralize(categories.value[idx].name) : \"\"\n        );\n\n        // Functions\n        const addCategory = () => {\n            categories.value.push({\n                name: \"Untitled category\",\n                labelSingular: \"\",\n                labelPlural: \"\",\n                color: randomColor({ luminosity: \"dark\" }),\n                id: shortid.generate(),\n            });\n        };\n\n        const saveChanges = async () => {\n            try {\n                await $store.dispatch(API_UPDATE_JOURNAL, { categories: unref(categories) });\n                onDialogOK();\n            } catch (e) {\n                console.error(e);\n                $q.notify({ message: e.message, type: \"negative\" });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            categories,\n            addCategory,\n            pluralize,\n            namePluralized,\n            saveChanges,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./ManageCategoriesDialog.vue?vue&type=template&id=88d8a2fc\"\nimport script from \"./ManageCategoriesDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./ManageCategoriesDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QExpansionItem from 'quasar/src/components/expansion-item/QExpansionItem.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QColor from 'quasar/src/components/color/QColor.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QList,QExpansionItem,QInput,QIcon,QPopupProxy,QColor,QSeparator,QCardActions});\n","\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, reactive, ref, toRefs } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\nimport EntryIconDialog from \"@/components/EntryIconDialog.vue\";\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_CREATE_ENTRY,\n    CreateAttachment,\n    Entry,\n    EntryAvatar,\n} from \"@/store/types\";\n\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\ninterface CreateEntryDialogData {\n    avatar: EntryAvatar;\n    title: string;\n    category: string[];\n    template: string;\n    showIconDialog: boolean;\n    loading: boolean;\n}\n\nexport default defineComponent({\n    name: \"CreateEntryDialog\",\n    components: {\n        EntryIconDialog,\n    },\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup: () => {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n        const $route = useRoute();\n\n        const avatarFile = ref<File | undefined>(undefined);\n        const state = {\n            avatar: ref<EntryAvatar>({ type: \"icon\", data: \"subject\" }),\n            title: ref(\"\"),\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n            category: ref([]),\n            template: ref(\"\"),\n            loading: ref(false),\n            showIconDialog: ref(false),\n        };\n\n        const submit = async () => {\n            state.loading.value = true;\n            try {\n                if (state.avatar.value.type == \"attachment\") {\n                    if (!avatarFile.value) {\n                        throw new Error(\"Avatar never uploaded\");\n                    }\n                    const e = {\n                        title: state.title.value,\n                        avatar: { type: \"attachment\", data: \"avatar\" },\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: e2.id,\n                        attachment: {\n                            name: \"avatar\",\n                            data: avatarFile.value,\n                        } as CreateAttachment,\n                    });\n                    console.log($route.params.jid, e2.id);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                } else {\n                    const e = {\n                        title: state.title.value,\n                        avatar: state.avatar.value,\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                }\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            } finally {\n                state.loading.value = false;\n            }\n        };\n\n        const updateAvatar = (data: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            // Hide icon dialog\n            state.showIconDialog.value = false;\n            if (data.type === \"image\") {\n                const fr = new FileReader();\n                fr.onload = () => {\n                    if (fr.result == null) {\n                        $q.notify({ type: \"negative\", message: \"Failed to load avatar\" });\n                        return;\n                    }\n                    state.avatar.value = { type: \"attachment\", data: fr.result };\n                };\n                avatarFile.value = data.data as File;\n                fr.readAsDataURL(data.data as File);\n            } else if (data.type === \"icon\") {\n                avatarFile.value = undefined;\n                state.avatar.value = { type: \"icon\", data: data.data as string };\n            }\n        };\n\n        const openManageCategories = () => {\n            $q.dialog({\n                component: ManageCategoriesDialog,\n            });\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            ...state,\n            submit,\n            updateAvatar,\n            onOKClick() {\n                submit();\n                onDialogOK();\n                // or with payload: onDialogOK({ ... })\n                // ...and it will also hide the dialog automatically\n            },\n            openManageCategories,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CreateEntryDialog.vue?vue&type=template&id=7f0bc311\"\nimport script from \"./CreateEntryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateEntryDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QExpansionItem from 'quasar/src/components/expansion-item/QExpansionItem.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QSpinnerDots from 'quasar/src/components/spinner/QSpinnerDots.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QAvatar,QTooltip,QPopupProxy,QInput,QSelect,QItem,QItemSection,QBtn,QExpansionItem,QCardActions,QSpinnerDots});\n","<template>\n    <q-chip\n        style=\"max-width: 175px\"\n        clickable\n        v-for=\"c in categories\"\n        :key=\"c.id\"\n        :selected=\"modelValue[c.id]\"\n        @update:selected=\"updateValue(c.id, $event)\"\n    >\n        <div class=\"ellipsis\">\n            {{ c.name }}\n            <q-tooltip> {{ c.name }} </q-tooltip>\n        </div>\n    </q-chip>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Category } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CategoryChips\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<{ [key: string]: boolean }>,\n        },\n        categories: {\n            type: Array as PropType<Array<Category>>,\n            default: [],\n        },\n    },\n    setup: (props, ctx) => {\n        const updateValue = (id: string, val: boolean) => {\n            if (!props.modelValue) return;\n            ctx.emit(\"update:modelValue\", {\n                ...Object.entries(props.modelValue)\n                    .filter((v) => !!v[1])\n                    .reduce((acc, kv) => (acc = { ...acc, [kv[0]]: kv[1] }), {}),\n                [id]: val,\n            });\n        };\n\n        return { updateValue };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Category } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CategoryChips\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<{ [key: string]: boolean }>,\n        },\n        categories: {\n            type: Array as PropType<Array<Category>>,\n            default: [],\n        },\n    },\n    setup: (props, ctx) => {\n        const updateValue = (id: string, val: boolean) => {\n            if (!props.modelValue) return;\n            ctx.emit(\"update:modelValue\", {\n                ...Object.entries(props.modelValue)\n                    .filter((v) => !!v[1])\n                    .reduce((acc, kv) => (acc = { ...acc, [kv[0]]: kv[1] }), {}),\n                [id]: val,\n            });\n        };\n\n        return { updateValue };\n    },\n});\n","import { render } from \"./CategoryChips.vue?vue&type=template&id=ba916af4\"\nimport script from \"./CategoryChips.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryChips.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QChip from 'quasar/src/components/chip/QChip.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QChip,QTooltip});\n","<template>\n    <template v-if=\"item && entry && currentJournal\">\n        <q-item :to=\"'/j/' + currentJournal + '/e/' + entry.id\">\n            <q-item-section avatar>\n                <q-avatar rounded v-if=\"entryAvatar.type === 'attachment'\" :size=\"avatarSize\">\n                    <img :src=\"entryAvatar.data\" />\n                </q-avatar>\n                <q-avatar\n                    v-else\n                    text-color=\"primary\"\n                    rounded\n                    :icon=\"entryAvatar.data\"\n                    :size=\"avatarSize\"\n                ></q-avatar>\n            </q-item-section>\n            <q-item-section v-if=\"entry.title\">\n                {{ entry.title }}\n            </q-item-section>\n            <q-item-section v-else class=\"text-grey text-italic\"> Untitled entry </q-item-section>\n        </q-item>\n    </template>\n    <div v-else-if=\"entry && currentJournal\">\n        <div class=\"row\">\n            <div class=\"col-auto q-mr-md\">\n                <q-avatar rounded v-if=\"entryAvatar.type === 'attachment'\" :size=\"avatarSize\">\n                    <img :src=\"entryAvatar.data\" />\n                </q-avatar>\n                <q-avatar\n                    v-else\n                    text-color=\"primary\"\n                    rounded\n                    :icon=\"entryAvatar.data\"\n                    :size=\"avatarSize\"\n                ></q-avatar>\n            </div>\n            <div class=\"col\">\n                <div class=\"text-h6\" style=\"line-height: 1.2em\">{{ entry.title }}</div>\n                <router-link\n                    :to=\"'/j/' + currentJournal + '/e/' + entryId\"\n                    style=\"text-decoration: none\"\n                    class=\"text-subtitle2\"\n                    v-if=\"showLink\"\n                >\n                    View entry\n                </router-link>\n            </div>\n        </div>\n    </div>\n    <div class=\"text-subtitle2 q-mb-xs text-negative\" v-else>Error loading link!</div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onBeforeMount, ref, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_FETCH_ENTRY } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"EntryLink\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        showLink: {\n            type: Boolean,\n            default: true,\n        },\n        item: {\n            type: Boolean,\n            default: false,\n        },\n        avatarSize: {\n            type: String,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const entryAvatar = computed(() => {\n            if (entry.value) {\n                return {\n                    data:\n                        entry.value.avatar.type === \"attachment\"\n                            ? $store.getters.entryAttachment(\n                                  entry.value.id,\n                                  entry.value.avatar.data as string\n                              )\n                            : entry.value.avatar.data,\n                    type: entry.value.avatar.type,\n                };\n            }\n            return undefined;\n        });\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        return { entry, entryAvatar, currentJournal };\n    },\n});\n</script>\n","\nimport { computed, defineComponent, onBeforeMount, ref, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_FETCH_ENTRY } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"EntryLink\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        showLink: {\n            type: Boolean,\n            default: true,\n        },\n        item: {\n            type: Boolean,\n            default: false,\n        },\n        avatarSize: {\n            type: String,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const entryAvatar = computed(() => {\n            if (entry.value) {\n                return {\n                    data:\n                        entry.value.avatar.type === \"attachment\"\n                            ? $store.getters.entryAttachment(\n                                  entry.value.id,\n                                  entry.value.avatar.data as string\n                              )\n                            : entry.value.avatar.data,\n                    type: entry.value.avatar.type,\n                };\n            }\n            return undefined;\n        });\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        return { entry, entryAvatar, currentJournal };\n    },\n});\n","import { render } from \"./EntryLink.vue?vue&type=template&id=109310a4\"\nimport script from \"./EntryLink.vue?vue&type=script&lang=ts\"\nexport * from \"./EntryLink.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QItem,QItemSection,QAvatar});\n","\nimport { intersection, xor } from \"lodash\";\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport CreateEntryDialog from \"@/components/CreateEntryDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { Category, Entry } from \"@/store/types\";\n\nimport CategoryChips from \"./CategoryChips.vue\";\nimport EntryLink from \"./EntryLink.vue\";\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\nexport default defineComponent({\n    name: \"JournalDrawer\",\n    components: { EntryLink, CategoryChips },\n    setup: (props) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const entrySearch = ref(\"\");\n        const entryCategoryFilter = ref<{ [key: string]: boolean }>({});\n\n        // Computed\n        const lastEntry = computed(() =>\n            $store.state.entries[$store.state.lastEntry] ? $store.state.lastEntry : undefined\n        );\n        const categories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const filteredCategories = computed(() =>\n            Object.entries(entryCategoryFilter.value)\n                .filter((kv) => kv[1])\n                .map((kv) => kv[0])\n        );\n        const filteredEntries = computed(() =>\n            Object.values(props.entries)\n                .filter((e) => (entrySearch.value ? e.title.includes(entrySearch.value) : true))\n                .filter((e) => {\n                    if (!filteredCategories.value.length) {\n                        return true;\n                    }\n                    // return xor(filteredCategories, e.category).length === 0;\n                    return filteredCategories.value.every((fc) => e.category.includes(fc));\n                })\n        );\n\n        // Functions\n        const openCreateEntry = () => {\n            $q.dialog({ component: CreateEntryDialog });\n        };\n        const openCreateCategory = () => {\n            $q.dialog({ component: ManageCategoriesDialog });\n        };\n        const getEntryAvatar = (id: string, name: string) => {\n            return $store.getters.entryAttachment(id, name);\n        };\n\n        return {\n            openCreateEntry,\n            getEntryAvatar,\n            lastEntry,\n            openCreateCategory,\n            entrySearch,\n            categories,\n            filteredEntries,\n            entryCategoryFilter,\n            filteredCategories,\n        };\n    },\n    props: {\n        currentJournal: {\n            type: String,\n        },\n        entries: {\n            type: Object as PropType<{ [key: string]: Entry }>,\n            default: {},\n        },\n    },\n});\n","import { render } from \"./JournalDrawer.vue?vue&type=template&id=7d478b5a\"\nimport script from \"./JournalDrawer.vue?vue&type=script&lang=ts\"\nexport * from \"./JournalDrawer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QSeparator,QList,QItemLabel,QBtn,QTooltip,QItem,QItemSection,QIcon,QImg});\n","\nimport Cookies from \"js-cookie\";\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport JournalDrawer from \"@/components/JournalDrawer.vue\";\n\nimport { useStore } from \"./store\";\nimport {\n    API_CLOSE_JOURNAL,\n    API_FETCH_JOURNALS,\n    SET_LAST_ENTRY,\n    UI_VISIBILITY,\n} from \"./store/types\";\n\nexport default defineComponent({\n    name: \"LayoutDefault\",\n    components: {\n        JournalDrawer,\n    },\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n        const $router = useRouter();\n\n        onMounted(async () => {\n            // await $store.dispatch(API_FETCH_JOURNALS);\n            const lastEntry = Cookies.get(\"lastEntry\");\n            if (lastEntry && $store.state.entries[lastEntry]) {\n                $store.commit(SET_LAST_ENTRY, lastEntry);\n            }\n        });\n\n        const exitJournal = async () => {\n            if (!$store.state.currentJournal) return;\n            await $store.dispatch(API_CLOSE_JOURNAL);\n            await $router.push(\"/\");\n        };\n\n        return {\n            currentJournalID: computed(() => $store.state.currentJournal),\n            currentJournal: computed(() => $store.getters.currentJournal),\n            showToolbar: computed(() => $store.state.showUi),\n            showDrawer: computed(() => $store.state.showUi),\n            entries: computed(() => $store.state.entries),\n            exitJournal,\n            toggleUi: () => {\n                $store.commit(UI_VISIBILITY, !$store.state.showUi);\n            },\n            toggleDarkMode: $q.dark.toggle,\n        };\n    },\n});\n","import { render } from \"./App.vue?vue&type=template&id=930f67ec\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QLayout from 'quasar/src/components/layout/QLayout.js';\nimport QHeader from 'quasar/src/components/header/QHeader.js';\nimport QToolbar from 'quasar/src/components/toolbar/QToolbar.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QToolbarTitle from 'quasar/src/components/toolbar/QToolbarTitle.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QDrawer from 'quasar/src/components/drawer/QDrawer.js';\nimport QPageContainer from 'quasar/src/components/page/QPageContainer.js';\nimport qInstall from \"../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QLayout,QHeader,QToolbar,QBtn,QToolbarTitle,QSpace,QTooltip,QDrawer,QPageContainer});\n","import { App, Plugin } from \"vue\";\n\nconst devtools: Plugin = {\n    install(app: App) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (process.env.NODE_ENV === \"development\" && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            window.__VUE_DEVTOOLS_GLOBAL_HOOK__.Vue = app;\n        }\n    },\n};\n\nexport { devtools };\n","import \"./styles/quasar.scss\";\nimport \"@quasar/extras/material-icons/material-icons.css\";\nimport \"@quasar/extras/fontawesome-v5/fontawesome-v5.css\";\n\nimport { QMediaPlayer } from \"@quasar/quasar-ui-qmediaplayer\";\nimport Dialog from 'quasar/src/plugins/Dialog.js';import Notify from 'quasar/src/plugins/Notify.js';;\n\n// To be used on app.use(Quasar, { ... })\nexport default {\n    config: {\n        notify: {\n            position: \"bottom-right\",\n            timeout: 3000,\n        },\n    },\n    plugins: {\n        Dialog,\n        Notify,\n        QMediaPlayer,\n    },\n};\n","<template>\n    <div class=\"row\">\n        <q-card class=\"col col-md-5\">\n            <q-item class=\"q-my-sm\">\n                <q-item-section avatar v-if=\"entry\">\n                    <q-avatar size=\"64px\" rounded v-if=\"entry.avatar.type == 'icon'\">\n                        <q-icon :name=\"entry.avatar.data\" color=\"primary\"></q-icon>\n                    </q-avatar>\n                    <q-img\n                        v-else\n                        :src=\"entryAvatar\"\n                        :ratio=\"1\"\n                        :style=\"{ width: '64px', height: '64px' }\"\n                        class=\"rounded-borders cursor-pointer\"\n                        loading=\"lazy\"\n                        @click=\"previewAvatar\"\n                    />\n                </q-item-section>\n\n                <q-item-section v-if=\"entry\">\n                    <div class=\"text-h5\" :style=\"{ lineHeight: '1.25em' }\">{{ entry.title }}</div>\n                </q-item-section>\n            </q-item>\n            <q-separator></q-separator>\n            <q-card-section class=\"q-pt-sm q-px-none q-pb-none\">\n                <!-- <q-btn\n                    size=\"10px\"\n                    icon=\"expand_more\"\n                    color=\"white\"\n                    text-color=\"dark\"\n                    class=\"absolute\"\n                    style=\"top: 0; right: 16px; transform: translateY(-50%); padding: 4px 8px\"\n                >\n                    <q-tooltip>More settings</q-tooltip>\n                </q-btn>\n                <q-btn\n                    size=\"10px\"\n                    label=\"Edit\"\n                    color=\"white\"\n                    text-color=\"dark\"\n                    class=\"absolute text-weight-bold\"\n                    @click=\"editEntry\"\n                    style=\"top: 0; right: calc(16px + 33px + 8px); transform: translateY(-50%)\"\n                >\n                    <q-tooltip>Edit \"{{ entry.title }}\"</q-tooltip>\n                </q-btn> -->\n                <div\n                    class=\"absolute row\"\n                    style=\"\n                        top: 0;\n                        left: 16px;\n                        transform: translateY(-50%);\n                        width: calc(100% - 32px);\n                    \"\n                >\n                    <div class=\"col q-mr-md\">\n                        <div class=\"ellipsis\" style=\"padding: 4px 0\" v-if=\"categories.length\">\n                            <q-badge\n                                ref=\"categoryBadgeRef\"\n                                class=\"text-weight-bold shadow-2 q-mr-sm\"\n                                :style=\"{\n                                    backgroundColor: c.color,\n                                    color: getCategoryTextColor(c.color),\n                                    borderColor: getCategoryBorderColor(c.color),\n                                }\"\n                                v-for=\"c in categories\"\n                                :key=\"c.id\"\n                                style=\"\n                                    padding: 6px 8px;\n                                    font-size: 12px;\n                                    border-width: 1px;\n                                    border-style: solid;\n                                    max-width: 200px;\n                                \"\n                            >\n                                <div class=\"ellipsis\">\n                                    {{ c.name }}\n                                </div>\n                            </q-badge>\n                        </div>\n                    </div>\n\n                    <div class=\"col-auto\">\n                        <q-btn-dropdown\n                            size=\"10px\"\n                            class=\"edit self-end\"\n                            color=\"white\"\n                            text-color=\"dark\"\n                            split\n                            label=\"Edit\"\n                            @click=\"editEntry\"\n                            style=\"margin: 4px 0\"\n                        >\n                            <q-list dense>\n                                <q-item clickable v-close-popup @click=\"viewAttachments\">\n                                    <q-item-section avatar style=\"min-width: 0\">\n                                        <q-icon name=\"perm_media\" size=\"16px\"></q-icon>\n                                    </q-item-section>\n                                    <q-item-section>\n                                        <q-item-label>Attachments</q-item-label>\n                                    </q-item-section>\n                                </q-item>\n                                <q-separator></q-separator>\n                                <q-item clickable v-close-popup>\n                                    <q-item-section avatar style=\"min-width: 0\">\n                                        <q-icon name=\"info_outline\" size=\"16px\"></q-icon>\n                                    </q-item-section>\n                                    <q-item-section>\n                                        <q-item-label>Info</q-item-label>\n                                    </q-item-section>\n                                </q-item>\n                                <q-item\n                                    clickable\n                                    v-close-popup\n                                    class=\"text-negative\"\n                                    @click=\"deleteEntry\"\n                                >\n                                    <q-item-section avatar style=\"min-width: 0\">\n                                        <q-icon name=\"delete_outline\" size=\"16px\"></q-icon>\n                                    </q-item-section>\n                                    <q-item-section>\n                                        <q-item-label>Delete</q-item-label>\n                                    </q-item-section>\n                                </q-item>\n                            </q-list>\n                        </q-btn-dropdown>\n                    </div>\n                </div>\n            </q-card-section>\n            <q-card-section v-if=\"entry && entry.fields.length\">\n                <component\n                    v-for=\"(f, i) in entry.fields\"\n                    :is=\"getComponentFromField(f)\"\n                    :modelValue=\"f\"\n                    :key=\"f ? f.id : i\"\n                    :editView=\"false\"\n                    :entry=\"entry\"\n                    :class=\"{ 'q-mb-sm': i != entry.fields.length - 1 }\"\n                ></component>\n            </q-card-section>\n            <q-card-section v-else class=\"text-subtitle1 text-grey-8\">\n                No fields for this entry.\n            </q-card-section>\n        </q-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport * as _ from \"lodash\";\nimport { colors, QBadge, useQuasar } from \"quasar\";\nimport { computed, defineComponent, ref } from \"vue\";\nimport { onBeforeRouteLeave, onBeforeRouteUpdate, useRoute, useRouter } from \"vue-router\";\n\nimport { FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_SET_LAST_ENTRY, Field, SET_LAST_ENTRY } from \"@/store/types\";\nimport { b64 } from \"@/utils\";\n\nimport PreviewAttachmentDialog from \"./attachments/PreviewAttachmentDialog.vue\";\nimport ViewAttachmentsDialog from \"./attachments/ViewAttachmentsDialog.vue\";\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EditEntryDialog from \"./EditEntryDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EntryView\",\n    setup: () => {\n        const $store = useStore();\n        const $route = useRoute();\n        const $router = useRouter();\n        const $q = useQuasar();\n\n        const state = {\n            entry: computed(() => $store.state.entries[$route.params.eid as string]),\n        };\n\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            state.entry.value\n                ? state.entry.value.category\n                      .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                      .filter((c) => c !== undefined)\n                : []\n        );\n\n        const categoryBadgeRef = ref<typeof QBadge | null>(null);\n        const getCategoryTextColor = (color: string) => {\n            return colors.brightness(color) < 128 ? \"#fff\" : \"#1d1d1d\";\n        };\n\n        const getCategoryBorderColor = (color: string) => {\n            return colors.lighten(color, -25);\n        };\n\n        const getComponentFromField = (f: Field) => {\n            if (!f || !_.has(f, \"type\") || !(f.type in FieldDefs)) {\n                return ErrorField;\n            }\n            return FieldDefs[f.type].component;\n        };\n\n        const entryAvatar = computed(() => {\n            return $store.getters.entryAttachment(\n                state.entry.value.id,\n                state.entry.value.avatar.data\n            );\n        });\n        const previewAvatar = () => {\n            if (!state.entry.value.attachments[\"avatar\"]) {\n                return;\n            }\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: { ...state.entry.value.attachments[\"avatar\"], name: \"avatar\" },\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n        const editEntry = () => {\n            $q.dialog({\n                component: EditEntryDialog,\n                persistent: true,\n                componentProps: {\n                    entry: _.cloneDeep(state.entry.value),\n                    entryID: $route.params.eid as string,\n                },\n            });\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: state.entry.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, $route.params.eid);\n                    $store.state.lastEntry = \"\";\n                    $router.push(`/j/${$store.state.currentJournal}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const viewAttachments = () => {\n            $q.dialog({\n                component: ViewAttachmentsDialog,\n                componentProps: {\n                    // entry: state.entry.value,\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n\n        onBeforeRouteUpdate(() => {\n            $store.dispatch(API_SET_LAST_ENTRY, state.entry.value.id);\n        });\n\n        return {\n            ...state,\n            editEntry,\n            categories,\n            deleteEntry,\n            entryAvatar,\n            viewAttachments,\n            getComponentFromField,\n            getCategoryTextColor,\n            getCategoryBorderColor,\n            previewAvatar,\n            categoryBadgeRef,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.edit ::v-deep(.q-btn-dropdown__arrow-container) {\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n}\n\n.edit ::v-deep(.q-btn) {\n    font-weight: bold;\n}\n</style>\n","<template>\n    <template v-if=\"editView\">\n        <div class=\"row items-center\">\n            <div class=\"text-body text-grey\">{{ linkedAttachments.length }} selected</div>\n            <q-space></q-space>\n            <q-btn\n                @click=\"selectAttachments\"\n                label=\"Select\"\n                icon=\"upload_file\"\n                class=\"select-att\"\n                flat\n                color=\"primary\"\n            ></q-btn>\n        </div>\n        <q-list bordered separator class=\"q-mt-sm\" dense>\n            <q-item v-for=\"att in linkedAttachments\" :key=\"att.name\">\n                <q-item-section avatar class=\"q-pr-none\" style=\"min-width: 36px\">\n                    <q-icon :name=\"getAttachmentIcon(att.content_type)\" color=\"grey-8\"></q-icon>\n                </q-item-section>\n                <q-item-section class=\"text-weight-bold\" style=\"line-height: 1.3em\">\n                    {{ att.name }}\n                </q-item-section>\n                <q-item-section side>\n                    <q-btn flat dense round icon=\"close\" @click=\"removeAttachment(att.name)\">\n                    </q-btn>\n                </q-item-section>\n            </q-item>\n        </q-list>\n    </template>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div\n            class=\"shadow-1 rounded-borders row q-gutter-sm q-mb-md\"\n            style=\"margin-left: 0; margin-top: 0; padding-bottom: 8px\"\n        >\n            <attachments-field-icon\n                v-for=\"att in linkedAttachments\"\n                :key=\"att.name\"\n                :attachment=\"att\"\n                :entryId=\"entry.id\"\n                @click=\"previewAttachment(att)\"\n            ></attachments-field-icon>\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\n\nimport SelectAttachmentsDialog from \"@/components/attachments/SelectAttachmentsDialog.vue\";\nimport { useStore } from \"@/store\";\nimport {\n    AttachmentsField,\n    DescriptionField,\n    Entry,\n    Field,\n    FieldType,\n    TextField,\n} from \"@/store/types\";\nimport { b64, getAttachmentIcon, renderText } from \"@/utils\";\n\nimport PreviewAttachmentDialog from \"../attachments/PreviewAttachmentDialog.vue\";\nimport AttachmentsFieldIcon from \"./AttachmentsFieldIcon.vue\";\n\nexport default defineComponent({\n    components: { AttachmentsFieldIcon },\n    name: \"AttachmentsField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<AttachmentsField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const currentSlide = ref(\"\");\n\n        // Computed\n        const linkedAttachments = computed(() =>\n            Object.entries(props.entry.attachments)\n                .filter((kv) => props.modelValue.attachments.includes(kv[0]))\n                .map((kv) => {\n                    return {\n                        name: kv[0],\n                        ...kv[1],\n                    };\n                })\n        );\n\n        // Functions\n        const updateAttachments = (attachments: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, attachments } as AttachmentsField);\n        };\n\n        const removeAttachment = (key: string) => {\n            if (!props.modelValue.attachments.includes(key)) {\n                return;\n            }\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                attachments: props.modelValue.attachments.filter((k2) => k2 !== key),\n            } as AttachmentsField);\n        };\n\n        const selectAttachments = () => {\n            $q.dialog({\n                component: SelectAttachmentsDialog,\n                componentProps: {\n                    entry: props.entry,\n                },\n            }).onOk((name: string) => {\n                if (props.modelValue.attachments.includes(name)) return;\n                updateAttachments([...props.modelValue.attachments, name]);\n            });\n        };\n        const previewAttachment = (att: PouchDB.Core.FullAttachment & { name: string }) => {\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: att,\n                    entryId: props.entry.id,\n                },\n            });\n        };\n\n        return {\n            selectAttachments,\n            linkedAttachments,\n            getAttachmentIcon,\n            removeAttachment,\n            currentSlide,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n            previewAttachment,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.select-att ::v-deep .q-icon {\n    margin-right: 6px;\n}\n</style>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-img\n            v-if=\"attachment.content_type.startsWith('image')\"\n            :src=\"entryAttachment(entryId, attachment.name)\"\n        >\n            <div class=\"absolute-bottom-right text-subtitle2 text-weight-bold\">\n                {{ attachment.name }}\n            </div>\n        </q-img>\n        <q-card v-else-if=\"attachment.content_type.startsWith('text')\">\n            <q-card-section class=\"text-h6 q-pb-none\">\n                {{ attachment.name }}\n            </q-card-section>\n            <q-card-section>\n                {{ renderText(attachment.data) }}\n            </q-card-section>\n        </q-card>\n        <q-card class=\"q-dialog-plugin\" v-else-if=\"attachment.content_type.startsWith('audio')\">\n            <q-card-section class=\"text-h6\">\n                {{ attachment.name }}\n            </q-card-section>\n            <audio controls :src=\"entryAttachment(entryId, attachment.name)\"></audio>\n        </q-card>\n        <q-card class=\"q-dialog-plugin\" v-else-if=\"attachment.content_type.startsWith('video')\">\n            <q-card-section class=\"text-h6\">\n                {{ attachment.name }}\n            </q-card-section>\n            <video\n                controls\n                class=\"q-dialog-plugin\"\n                :src=\"entryAttachment(entryId, attachment.name)\"\n                style=\"max-width: 600px\"\n            ></video>\n        </q-card>\n        <q-card class=\"q-dialog-plugin\" v-else>\n            <q-card-section class=\"text-h6\">\n                {{ attachment.name }}\n                <div class=\"text-subtitle2\">{{ attachment.content_type }}</div>\n            </q-card-section>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"PreviewAttachmentDialog\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            onCancelClick: onDialogCancel,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"PreviewAttachmentDialog\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            onCancelClick: onDialogCancel,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n","import { render } from \"./PreviewAttachmentDialog.vue?vue&type=template&id=15639d56\"\nimport script from \"./PreviewAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./PreviewAttachmentDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QImg,QCard,QCardSection});\n","<template>\n    <q-img\n        v-if=\"attachment.content_type.startsWith('image')\"\n        class=\"bg-grey-3 rounded-borders cursor-pointer\"\n        style=\"width: 64px; height: 64px\"\n        :src=\"entryAttachment(entryId, attachment.name)\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-img>\n    <div\n        v-else-if=\"attachment.content_type.startsWith('text')\"\n        class=\"bg-grey-3 rounded-borders text-caption q-pa-xs ellipsis-3-lines cursor-pointer\"\n        style=\"\n            width: 64px;\n            height: 64px;\n            line-height: 1.3em;\n            font-size: 10px;\n            word-wrap: break-word;\n        \"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n        {{ renderText(attachment.data) }}\n    </div>\n    <q-avatar\n        v-else-if=\"attachment.content_type.startsWith('audio')\"\n        rounded\n        color=\"blue-grey-3\"\n        class=\"cursor-pointer\"\n        icon=\"headset\"\n        text-color=\"dark\"\n        style=\"width: 64px; height: 64px\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-avatar>\n    <q-avatar\n        v-else-if=\"attachment.content_type.startsWith('video')\"\n        rounded\n        color=\"red-3\"\n        class=\"cursor-pointer\"\n        icon=\"play_circle_outline\"\n        text-color=\"dark\"\n        style=\"width: 64px; height: 64px\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-avatar>\n    <q-avatar\n        v-else\n        rounded\n        color=\"grey-3\"\n        class=\"cursor-pointer\"\n        icon=\"insert_drive_file\"\n        text-color=\"dark\"\n        style=\"width: 64px; height: 64px\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-avatar>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"AttachmentsFieldIcon\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        return {\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"AttachmentsFieldIcon\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        return {\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n","import { render } from \"./AttachmentsFieldIcon.vue?vue&type=template&id=2dae5618\"\nimport script from \"./AttachmentsFieldIcon.vue?vue&type=script&lang=ts\"\nexport * from \"./AttachmentsFieldIcon.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QImg,QTooltip,QAvatar});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\n\nimport SelectAttachmentsDialog from \"@/components/attachments/SelectAttachmentsDialog.vue\";\nimport { useStore } from \"@/store\";\nimport {\n    AttachmentsField,\n    DescriptionField,\n    Entry,\n    Field,\n    FieldType,\n    TextField,\n} from \"@/store/types\";\nimport { b64, getAttachmentIcon, renderText } from \"@/utils\";\n\nimport PreviewAttachmentDialog from \"../attachments/PreviewAttachmentDialog.vue\";\nimport AttachmentsFieldIcon from \"./AttachmentsFieldIcon.vue\";\n\nexport default defineComponent({\n    components: { AttachmentsFieldIcon },\n    name: \"AttachmentsField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<AttachmentsField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const currentSlide = ref(\"\");\n\n        // Computed\n        const linkedAttachments = computed(() =>\n            Object.entries(props.entry.attachments)\n                .filter((kv) => props.modelValue.attachments.includes(kv[0]))\n                .map((kv) => {\n                    return {\n                        name: kv[0],\n                        ...kv[1],\n                    };\n                })\n        );\n\n        // Functions\n        const updateAttachments = (attachments: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, attachments } as AttachmentsField);\n        };\n\n        const removeAttachment = (key: string) => {\n            if (!props.modelValue.attachments.includes(key)) {\n                return;\n            }\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                attachments: props.modelValue.attachments.filter((k2) => k2 !== key),\n            } as AttachmentsField);\n        };\n\n        const selectAttachments = () => {\n            $q.dialog({\n                component: SelectAttachmentsDialog,\n                componentProps: {\n                    entry: props.entry,\n                },\n            }).onOk((name: string) => {\n                if (props.modelValue.attachments.includes(name)) return;\n                updateAttachments([...props.modelValue.attachments, name]);\n            });\n        };\n        const previewAttachment = (att: PouchDB.Core.FullAttachment & { name: string }) => {\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: att,\n                    entryId: props.entry.id,\n                },\n            });\n        };\n\n        return {\n            selectAttachments,\n            linkedAttachments,\n            getAttachmentIcon,\n            removeAttachment,\n            currentSlide,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n            previewAttachment,\n        };\n    },\n});\n","import { render } from \"./AttachmentsField.vue?vue&type=template&id=4846aa0d&scoped=true\"\nimport script from \"./AttachmentsField.vue?vue&type=script&lang=ts\"\nexport * from \"./AttachmentsField.vue?vue&type=script&lang=ts\"\n\nimport \"./AttachmentsField.vue?vue&type=style&index=0&id=4846aa0d&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-4846aa0d\"\n\nexport default script\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QSpace,QBtn,QList,QItem,QItemSection,QIcon});\n","<template>\n    <div v-if=\"editView\">\n        <q-editor\n            dense\n            :modelValue=\"modelValue.content\"\n            @update:modelValue=\"updateValue\"\n            class=\"q-mt-md\"\n            max-height=\"200px\"\n            :toolbar=\"[\n                ['bold', 'italic', 'underline', 'strike', 'subscript', 'superscript'],\n                ['undo', 'redo'],\n                ['removeFormat'],\n            ]\"\n        ></q-editor>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div\n            class=\"text-body2 text-justify\"\n            v-html=\"modelValue.content\"\n            style=\"word-wrap: break-word\"\n        ></div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType } from \"vue\";\n\nimport { DescriptionField, Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DescriptionField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as DescriptionField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, onMounted, PropType } from \"vue\";\n\nimport { DescriptionField, Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DescriptionField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as DescriptionField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./DescriptionField.vue?vue&type=template&id=7a351a23\"\nimport script from \"./DescriptionField.vue?vue&type=script&lang=ts\"\nexport * from \"./DescriptionField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QEditor from 'quasar/src/components/editor/QEditor.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QEditor});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"URL\"\n            :modelValue=\"modelValue.url\"\n            @update:modelValue=\"updateUrl\"\n            debounce=\"600\"\n            :loading=\"embedLoading\"\n            outlined\n            dense\n        ></q-input>\n        <div class=\"text-body text-grey-8 q-pt-md row items-center\">\n            <div class=\"text-red\" v-if=\"embedService == EmbedFieldService.Invalid\">\n                <q-icon name=\"clear\" class=\"q-pr-sm\"></q-icon>\n                Please enter a valid URL\n            </div>\n            <template v-else-if=\"embedService != EmbedFieldService.Unknown\">\n                <q-icon name=\"checkmark\" class=\"q-pr-sm\"></q-icon>\n                Will use {{ EmbedFieldService[embedService] }} style.\n            </template>\n            <template v-else>\n                <q-icon name=\"help_outline\" class=\"q-pr-sm\"></q-icon>\n                Unknown, will use generic style.\n            </template>\n        </div>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <q-video\n            v-if=\"embedServiceC == EmbedFieldService.YouTube\"\n            :src=\"modelValue.url.replace('watch?v=', 'embed/')\"\n        ></q-video>\n        <iframe\n            v-else-if=\"embedServiceC == EmbedFieldService.Soundcloud\"\n            :src=\"\n                'https://soundcloud.com/oembed?format=js&url=' +\n                encodeURIComponent(modelValue.url) +\n                '&iframe=true'\n            \"\n        ></iframe>\n        <q-card\n            v-else-if=\"embedServiceC == EmbedFieldService.Unknown\"\n            class=\"q-mt-sm\"\n            flat\n            bordered\n        >\n            <q-item>\n                <q-item-section avatar class=\"q-pr-none\" style=\"min-width: 48px\">\n                    <q-icon name=\"link\"></q-icon>\n                </q-item-section>\n                <q-item-section class=\"text-subtitle2\">\n                    <a :href=\"modelValue.url\">{{ modelValue.url }}</a>\n                </q-item-section>\n            </q-item>\n        </q-card>\n        <div v-else class=\"text-negative text-subtitle2\">Error parsing URL!</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { EmbedField, EmbedFieldService, Entry, FieldType } from \"@/store/types\";\nimport { getEmbedService } from \"@/utils\";\n\nimport AddExternalDialog from \"../AddExternalDialog.vue\";\n\nexport default defineComponent({\n    name: \"EmbedField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<EmbedField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n\n        // Refs\n        const embedLoading = ref(false);\n        const embedService = ref(EmbedFieldService.Unknown);\n\n        // Computed\n        const embedServiceC = computed(() => getEmbedService(props.modelValue.url));\n\n        // Functions\n        const timeout = async (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n        const updateUrl = (url: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, url } as EmbedField);\n        };\n\n        // Effects\n        watchEffect(async () => {\n            if (!props.modelValue.url) {\n                return;\n            }\n            embedLoading.value = true;\n            await timeout(200);\n            embedService.value = getEmbedService(props.modelValue.url);\n            embedLoading.value = false;\n        });\n\n        return {\n            FieldType,\n            updateUrl,\n            embedLoading,\n            embedService,\n            embedServiceC,\n            EmbedFieldService,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.no-i::v-deep i {\n    display: none !important;\n}\n</style>\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { EmbedField, EmbedFieldService, Entry, FieldType } from \"@/store/types\";\nimport { getEmbedService } from \"@/utils\";\n\nimport AddExternalDialog from \"../AddExternalDialog.vue\";\n\nexport default defineComponent({\n    name: \"EmbedField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<EmbedField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n\n        // Refs\n        const embedLoading = ref(false);\n        const embedService = ref(EmbedFieldService.Unknown);\n\n        // Computed\n        const embedServiceC = computed(() => getEmbedService(props.modelValue.url));\n\n        // Functions\n        const timeout = async (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n        const updateUrl = (url: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, url } as EmbedField);\n        };\n\n        // Effects\n        watchEffect(async () => {\n            if (!props.modelValue.url) {\n                return;\n            }\n            embedLoading.value = true;\n            await timeout(200);\n            embedService.value = getEmbedService(props.modelValue.url);\n            embedLoading.value = false;\n        });\n\n        return {\n            FieldType,\n            updateUrl,\n            embedLoading,\n            embedService,\n            embedServiceC,\n            EmbedFieldService,\n        };\n    },\n});\n","import { render } from \"./EmbedField.vue?vue&type=template&id=1eeca434&scoped=true\"\nimport script from \"./EmbedField.vue?vue&type=script&lang=ts\"\nexport * from \"./EmbedField.vue?vue&type=script&lang=ts\"\n\nimport \"./EmbedField.vue?vue&type=style&index=0&id=1eeca434&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1eeca434\"\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QVideo from 'quasar/src/components/video/QVideo.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QIcon,QVideo,QCard,QItem,QItemSection});\n","<template>\n    <div v-if=\"editView\">\n        <q-btn\n            label=\"Edit locations\"\n            outline\n            color=\"primary\"\n            class=\"full-width\"\n            :disable=\"!modelValue.imageKey\"\n            @click=\"editLocations\"\n        ></q-btn>\n        <q-select\n            label=\"Image attachment\"\n            outlined\n            dense\n            class=\"q-mt-sm\"\n            :options=\"attachmentOptions\"\n            :modelValue=\"modelValue.imageKey\"\n            @update:modelValue=\"updateImageKey\"\n        >\n            <template v-slot:option=\"scope\">\n                <q-item v-bind=\"scope.itemProps\" v-on=\"scope.itemEvents\" dense>\n                    <q-item-section>\n                        <q-item-label v-html=\"scope.opt.label\"></q-item-label>\n                    </q-item-section>\n                    <q-item-section avatar>\n                        <q-icon size=\"16px\" :name=\"scope.opt.icon\"></q-icon>\n                    </q-item-section>\n                </q-item>\n            </template>\n            <template v-slot:no-option>\n                <q-item>\n                    <q-item-section class=\"text-italic text-grey\">\n                        No attachments saved\n                    </q-item-section>\n                </q-item>\n            </template>\n        </q-select>\n        <q-input\n            class=\"q-mt-sm\"\n            outlined\n            dense\n            label=\"Custom name\"\n            :modelValue=\"modelValue.customName\"\n            @update:modelValue=\"updateCustomName\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <map-view\n            :locations=\"modelValue.locations\"\n            :background=\"mapBackground\"\n            showLocations\n            style=\"height: 200px\"\n            v-if=\"mapBackground\"\n        ></map-view>\n        <div class=\"text-subtitle2 q-mb-xs text-negative\" v-else>\n            Error loading field! Could not retrieve background.\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { Entry, FieldType, MapField, MapFieldLocation, NumberField } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nimport EditMapDialog from \"../maps/EditMapDialog.vue\";\nimport MapView from \"../maps/MapView.vue\";\n\nexport default defineComponent({\n    name: \"MapField\",\n    emits: [\"update:modelValue\"],\n    components: { MapView },\n    props: {\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        // const mapBackground = ref<string>(\n        //     $store.getters.entryAttachmentFull(props.entry.id, props.modelValue.imageKey)\n        // );\n\n        // Computed\n        const attachmentOptions = computed(() =>\n            $store.state.entries[props.entry.id]\n                ? Object.entries($store.state.entries[props.entry.id].attachments)\n                      .filter((kv) => kv[1].content_type.startsWith(\"image\"))\n                      .map((kv) => {\n                          return {\n                              label: kv[0],\n                              value: kv[0],\n                              icon: getAttachmentIcon(kv[1].content_type),\n                          };\n                      })\n                : []\n        );\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entry.id,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n\n        // Functions\n        const updateCustomName = (customName: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                customName,\n            } as MapField);\n        };\n        const updateImageKey = (imageKey: { label: string; value: string; icon: string }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                imageKey: imageKey.value,\n            } as MapField);\n        };\n        const editLocations = () => {\n            $q.dialog({\n                component: EditMapDialog,\n                componentProps: {\n                    modelValue: props.modelValue,\n                    entryId: props.entry.id,\n                },\n            }).onOk((data: { locations: MapFieldLocation[] }) => {\n                emit(\"update:modelValue\", {\n                    ...props.modelValue,\n                    locations: data.locations,\n                } as MapField);\n            });\n        };\n\n        return {\n            FieldType,\n            updateCustomName,\n            updateImageKey,\n            attachmentOptions,\n            editLocations,\n            mapBackground,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\" style=\"width: 100%\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">Editing \"{{ modelValue.name }}\"</div>\n                <q-space></q-space>\n                <q-btn\n                    icon=\"add_location_alt\"\n                    color=\"primary\"\n                    flat\n                    round\n                    dense\n                    @click=\"addLocation\"\n                >\n                    <q-tooltip>Create a new location</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <div>\n                <map-view\n                    :background=\"mapBackground\"\n                    :locations=\"mapLocations\"\n                    showLocations\n                    editLocations\n                    @update:locations=\"mapLocations = $event\"\n                    @selected=\"mapSelected = $event\"\n                    style=\"height: 300px\"\n                    ref=\"mapRef\"\n                ></map-view>\n            </div>\n            <q-card-section class=\"q-pb-sm\">\n                <div class=\"row\">\n                    <div class=\"col col-md-4\">\n                        <q-select\n                            :label=\"selectOpts.length ? 'Select a location' : '(no locations)'\"\n                            :disable=\"!selectOpts.length\"\n                            dense\n                            :options=\"selectOpts\"\n                            outlined\n                            class=\"q-mr-sm\"\n                            v-model=\"mapSelected\"\n                        ></q-select>\n                    </div>\n                    <div class=\"col\">\n                        <select-entry\n                            outlined\n                            dense\n                            class=\"q-mr-sm\"\n                            options-dense\n                            v-if=\"mapSelectedPtr\"\n                            v-model=\"mapSelectedPtr.entryId\"\n                        ></select-entry>\n                    </div>\n                    <div class=\"col-auto\">\n                        <q-btn\n                            icon=\"delete_outline\"\n                            class=\"full-height\"\n                            outline\n                            color=\"negative\"\n                            :disable=\"!mapSelectedPtr\"\n                        >\n                        </q-btn>\n                    </div>\n                </div>\n            </q-card-section>\n            <q-card-section>\n                <div class=\"row\">\n                    <div class=\"col col-md-2 q-pr-sm\">\n                        <q-input\n                            type=\"number\"\n                            label=\"X\"\n                            dense\n                            outlined\n                            :modelValue=\"mapSelectedPtr.position[0]\"\n                            @update:modelValue=\"\n                                mapRef.moveLocation(mapSelected, {\n                                    lat: mapSelectedPtr.position[1],\n                                    lng: $event,\n                                })\n                            \"\n                            v-if=\"mapSelectedPtr\"\n                        ></q-input>\n                    </div>\n                    <div class=\"col col-md-2 q-pr-sm\">\n                        <q-input\n                            type=\"number\"\n                            label=\"Y\"\n                            dense\n                            outlined\n                            :modelValue=\"mapSelectedPtr.position[1]\"\n                            @update:modelValue=\"\n                                mapRef.moveLocation(mapSelected, {\n                                    lat: $event,\n                                    lng: mapSelectedPtr.position[0],\n                                })\n                            \"\n                            v-if=\"mapSelectedPtr\"\n                        ></q-input>\n                    </div>\n                    <q-space></q-space>\n                    <q-btn label=\"Save changes\" color=\"primary\" flat @click=\"saveChanges\"></q-btn>\n                </div>\n            </q-card-section>\n            <!-- <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"OK\" @click=\"onOKClick\" />\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions> -->\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport {\n    computed,\n    defineComponent,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { MapField, MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport SelectEntry from \"../form/SelectEntry.vue\";\nimport MapView from \"./MapView.vue\";\n\nexport default defineComponent({\n    name: \"EditMapDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n    },\n    // components: { LMap, LImageOverlay, LMarker, LPopup, SelectEntry },\n    components: { SelectEntry, MapView },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entryId,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n        const mapLocations = ref<MapFieldLocation[]>(props.modelValue.locations);\n        const mapSelected = ref<number | undefined>(undefined);\n        const mapRef = ref<typeof MapView | undefined>(undefined);\n\n        // Computed\n        // const selectOpts = computed(() =>\n        //     mapLocations.value.map((l, idx) => ({ label: idx, data: l }))\n        // );\n        const selectOpts = computed(() => mapLocations.value.map((_, i) => i));\n        const mapSelectedPtr = computed(() =>\n            mapSelected.value !== undefined ? mapLocations.value[mapSelected.value] : undefined\n        );\n\n        // Functions\n        const addLocation = () => {\n            mapLocations.value = [\n                ...mapLocations.value,\n                {\n                    entryId: \"\",\n                    position: mapRef.value ? mapRef.value.getMapCenter() : [0, 0],\n                },\n            ];\n            mapSelected.value = mapLocations.value.length - 1;\n        };\n        const saveChanges = () => {\n            onDialogOK({\n                locations: mapLocations,\n            });\n        };\n\n        return {\n            mapBackground,\n            saveChanges,\n            dialogRef,\n            onDialogHide,\n            mapLocations,\n            selectOpts,\n            CRS: L.CRS,\n            addLocation,\n            mapSelected,\n            mapSelectedPtr,\n            mapRef,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-select\n        v-bind=\"attrs\"\n        label=\"Select an entry\"\n        :options=\"selectOpts\"\n        :modelValue=\"modelValue\"\n        @update:modelValue=\"updateValue\"\n        :option-value=\"(opt) => (opt !== undefined ? opt.id : '')\"\n        emit-value\n        :multiple=\"multiple\"\n        map-options\n    >\n        <template v-slot:option=\"scope\">\n            <q-item v-bind=\"scope.itemProps\">\n                <q-item-section avatar style=\"min-width: 0\">\n                    <q-avatar rounded v-if=\"scope.opt.avatar.type === 'attachment'\" size=\"24px\">\n                        <img :src=\"scope.opt.avatar.data\" />\n                    </q-avatar>\n                    <q-avatar\n                        v-else\n                        text-color=\"primary\"\n                        rounded\n                        :icon=\"scope.opt.avatar.data\"\n                        size=\"24px\"\n                    ></q-avatar>\n                </q-item-section>\n                <q-item-section>\n                    <q-item-label>{{ scope.opt.label }}</q-item-label>\n                </q-item-section>\n            </q-item>\n        </template>\n        <template v-slot:prepend v-if=\"!multiple\">\n            <q-avatar rounded v-if=\"currentOpt && currentOpt.avatar.type === 'attachment'\">\n                <img :src=\"currentOpt.avatar.data\" />\n            </q-avatar>\n            <q-avatar\n                v-else-if=\"currentOpt && currentOpt.avatar.type === 'icon'\"\n                text-color=\"primary\"\n                rounded\n                :icon=\"currentOpt.avatar.data\"\n            ></q-avatar>\n        </template>\n    </q-select>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n    name: \"SelectEntry\",\n    props: {\n        modelValue: {\n            type: Object as PropType<string | Array<string>>,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: [\"update:modelValue\"],\n    setup: (props, ctx) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const selectOpts = computed(() =>\n            Object.entries($store.state.entries).map((e) => {\n                const avatar =\n                    e[1].avatar.type === \"attachment\"\n                        ? $store.getters.entryAttachment(e[1].id, e[1].avatar.data as string)\n                        : e[1].avatar.data;\n                return {\n                    label: e[1].title,\n                    avatar: {\n                        type: e[1].avatar.type,\n                        data: avatar,\n                    },\n                    id: e[1].id,\n                };\n            })\n        );\n        const currentOpt = computed(() => selectOpts.value.find((o) => o.id === props.modelValue));\n\n        // Functions\n        const updateValue = (val: { id: string }) => {\n            ctx.emit(\"update:modelValue\", val);\n        };\n\n        return {\n            attrs: ctx.attrs,\n            updateValue,\n            selectOpts,\n            currentOpt,\n        };\n    },\n});\n</script>\n","\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n    name: \"SelectEntry\",\n    props: {\n        modelValue: {\n            type: Object as PropType<string | Array<string>>,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: [\"update:modelValue\"],\n    setup: (props, ctx) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const selectOpts = computed(() =>\n            Object.entries($store.state.entries).map((e) => {\n                const avatar =\n                    e[1].avatar.type === \"attachment\"\n                        ? $store.getters.entryAttachment(e[1].id, e[1].avatar.data as string)\n                        : e[1].avatar.data;\n                return {\n                    label: e[1].title,\n                    avatar: {\n                        type: e[1].avatar.type,\n                        data: avatar,\n                    },\n                    id: e[1].id,\n                };\n            })\n        );\n        const currentOpt = computed(() => selectOpts.value.find((o) => o.id === props.modelValue));\n\n        // Functions\n        const updateValue = (val: { id: string }) => {\n            ctx.emit(\"update:modelValue\", val);\n        };\n\n        return {\n            attrs: ctx.attrs,\n            updateValue,\n            selectOpts,\n            currentOpt,\n        };\n    },\n});\n","import { render } from \"./SelectEntry.vue?vue&type=template&id=251191ed\"\nimport script from \"./SelectEntry.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectEntry.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QSelect,QItem,QItemSection,QAvatar,QItemLabel});\n","<template>\n    <l-map\n        :crs=\"CRS.Simple\"\n        :center=\"mapCenter\"\n        v-model:zoom=\"mapZoom\"\n        :minZoom=\"-2\"\n        ref=\"mapRef\"\n        :options=\"{\n            fullscreenControl: true,\n            fullscreenControlOptions: {\n                position: 'topleft',\n            },\n        }\"\n        v-if=\"mapReady\"\n    >\n        <l-image-overlay :url=\"mapImage\" :bounds=\"mapBounds\"></l-image-overlay>\n        <template v-if=\"showLocations\">\n            <l-marker\n                v-for=\"(location, idx) in mapLocations\"\n                :key=\"idx\"\n                :lat-lng=\"location.coordinates\"\n                :draggable=\"editLocations\"\n                :ref=\"\n                    (el) => {\n                        if (el) mapLocationRefs[idx] = el;\n                    }\n                \"\n                @update:latLng=\"updateLocation(idx, $event)\"\n                @click=\"$emit('selected', idx)\"\n            >\n                <l-popup :options=\"{ minWidth: 200, closeButton: false }\">\n                    <entry-link :entryId=\"location.entryId\" :showLink=\"!editLocations\"></entry-link>\n                </l-popup>\n            </l-marker>\n        </template>\n        <l-control class=\"leaflet-control leaflet-demo-control\" v-if=\"locations.length\">\n            <q-btn icon=\"chevron_left\" dense flat size=\"10px\" @click=\"focusPrevLocation\"></q-btn>\n            <q-btn icon=\"chevron_right\" dense flat size=\"10px\" @click=\"focusNextLocation\"></q-btn>\n        </l-control>\n    </l-map>\n</template>\n\n<script lang=\"ts\">\nimport \"leaflet.fullscreen\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { LControl, LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as JD from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport { isEqual } from \"lodash\";\nimport {\n    computed,\n    defineComponent,\n    onBeforeUnmount,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport EntryLink from \"../EntryLink.vue\";\n\ntype MapViewLocation = {\n    entryId: string;\n    coordinates: { lat: number; lng: number };\n    ref?: L.Marker;\n};\n\nexport default defineComponent({\n    name: \"MapView\",\n    props: {\n        background: {\n            type: Object as PropType<{ data: string; contentType: string }>,\n            required: true,\n        },\n        locations: {\n            type: Array as PropType<Array<MapFieldLocation>>,\n            default: [],\n        },\n        showLocations: {\n            type: Boolean,\n            default: false,\n        },\n        editLocations: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    components: { LMap, LImageOverlay, LMarker, LPopup, EntryLink, LControl },\n    emits: [\"selected\", \"update:locations\"],\n    setup: (props, ctx) => {\n        // Refs\n        const mapImage = ref(\"\");\n        const mapBounds = ref<[[number, number], [number, number]]>([\n            [0, 0],\n            [0, 0],\n        ]);\n        const mapCenter = ref<[number, number]>([0, 0]);\n        const mapZoom = ref(0);\n        const mapLocationRefs = ref<Array<{ leafletObject: L.Marker }>>([]);\n        const mapRef = ref<typeof LMap | undefined>(undefined);\n        const mapReady = ref(false);\n        const mapFocus = ref(0);\n\n        // Computed\n        const mapLocations = computed<MapViewLocation[]>(() =>\n            props.locations.map((l, i) => {\n                return {\n                    entryId: l.entryId,\n                    coordinates: { lng: l.position[0], lat: l.position[1] },\n                    ref: mapLocationRefs.value[i]\n                        ? (mapLocationRefs.value[i].leafletObject as L.Marker)\n                        : undefined,\n                };\n            })\n        );\n\n        // Functions\n        const normalizeLocation = (loc: MapViewLocation): MapFieldLocation => {\n            return { entryId: loc.entryId, position: [loc.coordinates.lat, loc.coordinates.lng] };\n        };\n        const updateLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            ctx.emit(\n                \"update:locations\",\n                mapLocations.value.map(\n                    (ml, idx2): MapFieldLocation => {\n                        return {\n                            entryId: ml.entryId,\n                            position:\n                                idx === idx2\n                                    ? [coordinates.lng, coordinates.lat]\n                                    : [ml.coordinates.lng, ml.coordinates.lat],\n                        };\n                    }\n                )\n            );\n        };\n        const focusLocation = (idx: number) => {\n            if (!mapRef.value || !mapLocationRefs.value[idx]) {\n                return;\n            }\n            mapRef.value.leafletObject.flyTo({\n                lat: props.locations[idx].position[1],\n                lng: props.locations[idx].position[0],\n            });\n        };\n        const focusPrevLocation = () => {\n            mapFocus.value = mapFocus.value <= 0 ? props.locations.length - 1 : mapFocus.value - 1;\n            focusLocation(mapFocus.value);\n        };\n        const focusNextLocation = () => {\n            mapFocus.value = mapFocus.value >= props.locations.length - 1 ? 0 : mapFocus.value + 1;\n            focusLocation(mapFocus.value);\n        };\n        const moveLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            if (mapLocationRefs.value[idx]) {\n                mapLocationRefs.value[idx].leafletObject.setLatLng(coordinates);\n            }\n        };\n        const updateBackground = () => {\n            mapReady.value = false;\n\n            // Convert background b64 to blob\n            const mapBlob = b64toBlob(props.background.data, props.background.contentType);\n            mapImage.value = URL.createObjectURL(mapBlob);\n\n            // Calculate background bounds\n            const img = new Image();\n            img.onload = () => {\n                mapBounds.value = [\n                    [0, 0],\n                    [img.height, img.width],\n                ];\n                mapCenter.value = [img.width / 2, img.height / 2];\n                mapReady.value = true;\n            };\n            img.src = mapImage.value;\n        };\n\n        const getMapCenter = () => {\n            return mapCenter;\n        };\n\n        // Effects\n        onMounted(() => {\n            updateBackground();\n            setTimeout(() => {\n                if (!mapRef.value) {\n                    return;\n                }\n                L.control.fullscreen().addTo((mapRef.value.leafletObject as unknown) as L.Map);\n            }, 500);\n        });\n        watchEffect(() => {\n            if (props.background) {\n                updateBackground();\n            }\n        });\n        onBeforeUpdate(() => {\n            mapLocationRefs.value = [];\n        });\n        // onMounted(() => {});\n        onBeforeUnmount(() => {\n            // Release map object URL\n            if (mapImage.value) {\n                URL.revokeObjectURL(mapImage.value);\n            }\n        });\n\n        return {\n            mapImage,\n            mapBounds,\n            mapCenter,\n            mapLocations,\n            mapZoom,\n            normalizeLocation,\n            CRS: L.CRS,\n            updateLocation,\n            focusPrevLocation,\n            focusNextLocation,\n            focusLocation,\n            mapFocus,\n            mapLocationRefs,\n            mapRef,\n            getMapCenter,\n            moveLocation,\n            mapReady,\n        };\n    },\n});\n</script>\n\n<style>\n.leaflet-demo-control {\n    background: white;\n    border: 2px solid rgba(0, 0, 0, 0.2);\n    border-radius: 0.6em;\n    padding: 0.5em;\n    float: right;\n    margin: 10px;\n}\n</style>\n","\nimport \"leaflet.fullscreen\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { LControl, LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as JD from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport { isEqual } from \"lodash\";\nimport {\n    computed,\n    defineComponent,\n    onBeforeUnmount,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport EntryLink from \"../EntryLink.vue\";\n\ntype MapViewLocation = {\n    entryId: string;\n    coordinates: { lat: number; lng: number };\n    ref?: L.Marker;\n};\n\nexport default defineComponent({\n    name: \"MapView\",\n    props: {\n        background: {\n            type: Object as PropType<{ data: string; contentType: string }>,\n            required: true,\n        },\n        locations: {\n            type: Array as PropType<Array<MapFieldLocation>>,\n            default: [],\n        },\n        showLocations: {\n            type: Boolean,\n            default: false,\n        },\n        editLocations: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    components: { LMap, LImageOverlay, LMarker, LPopup, EntryLink, LControl },\n    emits: [\"selected\", \"update:locations\"],\n    setup: (props, ctx) => {\n        // Refs\n        const mapImage = ref(\"\");\n        const mapBounds = ref<[[number, number], [number, number]]>([\n            [0, 0],\n            [0, 0],\n        ]);\n        const mapCenter = ref<[number, number]>([0, 0]);\n        const mapZoom = ref(0);\n        const mapLocationRefs = ref<Array<{ leafletObject: L.Marker }>>([]);\n        const mapRef = ref<typeof LMap | undefined>(undefined);\n        const mapReady = ref(false);\n        const mapFocus = ref(0);\n\n        // Computed\n        const mapLocations = computed<MapViewLocation[]>(() =>\n            props.locations.map((l, i) => {\n                return {\n                    entryId: l.entryId,\n                    coordinates: { lng: l.position[0], lat: l.position[1] },\n                    ref: mapLocationRefs.value[i]\n                        ? (mapLocationRefs.value[i].leafletObject as L.Marker)\n                        : undefined,\n                };\n            })\n        );\n\n        // Functions\n        const normalizeLocation = (loc: MapViewLocation): MapFieldLocation => {\n            return { entryId: loc.entryId, position: [loc.coordinates.lat, loc.coordinates.lng] };\n        };\n        const updateLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            ctx.emit(\n                \"update:locations\",\n                mapLocations.value.map(\n                    (ml, idx2): MapFieldLocation => {\n                        return {\n                            entryId: ml.entryId,\n                            position:\n                                idx === idx2\n                                    ? [coordinates.lng, coordinates.lat]\n                                    : [ml.coordinates.lng, ml.coordinates.lat],\n                        };\n                    }\n                )\n            );\n        };\n        const focusLocation = (idx: number) => {\n            if (!mapRef.value || !mapLocationRefs.value[idx]) {\n                return;\n            }\n            mapRef.value.leafletObject.flyTo({\n                lat: props.locations[idx].position[1],\n                lng: props.locations[idx].position[0],\n            });\n        };\n        const focusPrevLocation = () => {\n            mapFocus.value = mapFocus.value <= 0 ? props.locations.length - 1 : mapFocus.value - 1;\n            focusLocation(mapFocus.value);\n        };\n        const focusNextLocation = () => {\n            mapFocus.value = mapFocus.value >= props.locations.length - 1 ? 0 : mapFocus.value + 1;\n            focusLocation(mapFocus.value);\n        };\n        const moveLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            if (mapLocationRefs.value[idx]) {\n                mapLocationRefs.value[idx].leafletObject.setLatLng(coordinates);\n            }\n        };\n        const updateBackground = () => {\n            mapReady.value = false;\n\n            // Convert background b64 to blob\n            const mapBlob = b64toBlob(props.background.data, props.background.contentType);\n            mapImage.value = URL.createObjectURL(mapBlob);\n\n            // Calculate background bounds\n            const img = new Image();\n            img.onload = () => {\n                mapBounds.value = [\n                    [0, 0],\n                    [img.height, img.width],\n                ];\n                mapCenter.value = [img.width / 2, img.height / 2];\n                mapReady.value = true;\n            };\n            img.src = mapImage.value;\n        };\n\n        const getMapCenter = () => {\n            return mapCenter;\n        };\n\n        // Effects\n        onMounted(() => {\n            updateBackground();\n            setTimeout(() => {\n                if (!mapRef.value) {\n                    return;\n                }\n                L.control.fullscreen().addTo((mapRef.value.leafletObject as unknown) as L.Map);\n            }, 500);\n        });\n        watchEffect(() => {\n            if (props.background) {\n                updateBackground();\n            }\n        });\n        onBeforeUpdate(() => {\n            mapLocationRefs.value = [];\n        });\n        // onMounted(() => {});\n        onBeforeUnmount(() => {\n            // Release map object URL\n            if (mapImage.value) {\n                URL.revokeObjectURL(mapImage.value);\n            }\n        });\n\n        return {\n            mapImage,\n            mapBounds,\n            mapCenter,\n            mapLocations,\n            mapZoom,\n            normalizeLocation,\n            CRS: L.CRS,\n            updateLocation,\n            focusPrevLocation,\n            focusNextLocation,\n            focusLocation,\n            mapFocus,\n            mapLocationRefs,\n            mapRef,\n            getMapCenter,\n            moveLocation,\n            mapReady,\n        };\n    },\n});\n","import { render } from \"./MapView.vue?vue&type=template&id=9ae87e28\"\nimport script from \"./MapView.vue?vue&type=script&lang=ts\"\nexport * from \"./MapView.vue?vue&type=script&lang=ts\"\n\nimport \"./MapView.vue?vue&type=style&index=0&id=9ae87e28&lang=css\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","\nimport { LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport {\n    computed,\n    defineComponent,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { MapField, MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport SelectEntry from \"../form/SelectEntry.vue\";\nimport MapView from \"./MapView.vue\";\n\nexport default defineComponent({\n    name: \"EditMapDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n    },\n    // components: { LMap, LImageOverlay, LMarker, LPopup, SelectEntry },\n    components: { SelectEntry, MapView },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entryId,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n        const mapLocations = ref<MapFieldLocation[]>(props.modelValue.locations);\n        const mapSelected = ref<number | undefined>(undefined);\n        const mapRef = ref<typeof MapView | undefined>(undefined);\n\n        // Computed\n        // const selectOpts = computed(() =>\n        //     mapLocations.value.map((l, idx) => ({ label: idx, data: l }))\n        // );\n        const selectOpts = computed(() => mapLocations.value.map((_, i) => i));\n        const mapSelectedPtr = computed(() =>\n            mapSelected.value !== undefined ? mapLocations.value[mapSelected.value] : undefined\n        );\n\n        // Functions\n        const addLocation = () => {\n            mapLocations.value = [\n                ...mapLocations.value,\n                {\n                    entryId: \"\",\n                    position: mapRef.value ? mapRef.value.getMapCenter() : [0, 0],\n                },\n            ];\n            mapSelected.value = mapLocations.value.length - 1;\n        };\n        const saveChanges = () => {\n            onDialogOK({\n                locations: mapLocations,\n            });\n        };\n\n        return {\n            mapBackground,\n            saveChanges,\n            dialogRef,\n            onDialogHide,\n            mapLocations,\n            selectOpts,\n            CRS: L.CRS,\n            addLocation,\n            mapSelected,\n            mapSelectedPtr,\n            mapRef,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./EditMapDialog.vue?vue&type=template&id=372f80cf\"\nimport script from \"./EditMapDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./EditMapDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QSelect,QInput,QCardActions});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { Entry, FieldType, MapField, MapFieldLocation, NumberField } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nimport EditMapDialog from \"../maps/EditMapDialog.vue\";\nimport MapView from \"../maps/MapView.vue\";\n\nexport default defineComponent({\n    name: \"MapField\",\n    emits: [\"update:modelValue\"],\n    components: { MapView },\n    props: {\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        // const mapBackground = ref<string>(\n        //     $store.getters.entryAttachmentFull(props.entry.id, props.modelValue.imageKey)\n        // );\n\n        // Computed\n        const attachmentOptions = computed(() =>\n            $store.state.entries[props.entry.id]\n                ? Object.entries($store.state.entries[props.entry.id].attachments)\n                      .filter((kv) => kv[1].content_type.startsWith(\"image\"))\n                      .map((kv) => {\n                          return {\n                              label: kv[0],\n                              value: kv[0],\n                              icon: getAttachmentIcon(kv[1].content_type),\n                          };\n                      })\n                : []\n        );\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entry.id,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n\n        // Functions\n        const updateCustomName = (customName: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                customName,\n            } as MapField);\n        };\n        const updateImageKey = (imageKey: { label: string; value: string; icon: string }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                imageKey: imageKey.value,\n            } as MapField);\n        };\n        const editLocations = () => {\n            $q.dialog({\n                component: EditMapDialog,\n                componentProps: {\n                    modelValue: props.modelValue,\n                    entryId: props.entry.id,\n                },\n            }).onOk((data: { locations: MapFieldLocation[] }) => {\n                emit(\"update:modelValue\", {\n                    ...props.modelValue,\n                    locations: data.locations,\n                } as MapField);\n            });\n        };\n\n        return {\n            FieldType,\n            updateCustomName,\n            updateImageKey,\n            attachmentOptions,\n            editLocations,\n            mapBackground,\n        };\n    },\n});\n","import { render } from \"./MapField.vue?vue&type=template&id=36be94ac\"\nimport script from \"./MapField.vue?vue&type=script&lang=ts\"\nexport * from \"./MapField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn,QSelect,QItem,QItemSection,QItemLabel,QIcon,QInput});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"Value\"\n            type=\"number\"\n            outlined\n            dense\n            :modelValue=\"modelValue.value\"\n            @update:modelValue=\"updateValue\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div class=\"text-body1\">{{ modelValue.value }}</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, NumberField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"NumberField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                value: Number.parseInt(value),\n            } as NumberField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, NumberField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"NumberField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                value: Number.parseInt(value),\n            } as NumberField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./NumberField.vue?vue&type=template&id=3d117a36\"\nimport script from \"./NumberField.vue?vue&type=script&lang=ts\"\nexport * from \"./NumberField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"Label\"\n            :modelValue=\"modelValue.label\"\n            @update:modelValue=\"updateLabel\"\n            style=\"font-family: monospace\"\n            outlined\n            dense\n        >\n            <template v-slot:append>\n                <q-icon name=\"help\">\n                    <q-tooltip>\n                        Available variables:<br />\n                        %min = Minimum value<br />\n                        %max = Maximum value <br />\n                        %val = Current value<br />\n                        %val2 = Current value (%)<br />\n                        %rem = Remaining value<br />\n                        %rem2 = Remaining value (%)\n                    </q-tooltip>\n                    <q-dialog>hi</q-dialog>\n                </q-icon>\n            </template>\n        </q-input>\n        <div class=\"row q-gutter-md q-pt-sm\">\n            <div class=\"col-md\">\n                <q-input\n                    outlined\n                    dense\n                    label=\"Min\"\n                    type=\"number\"\n                    :modelValue=\"modelValue.minValue\"\n                    @update:modelValue=\"updateMinValue\"\n                ></q-input>\n            </div>\n            <div class=\"col-md\">\n                <q-input\n                    label=\"Max\"\n                    type=\"number\"\n                    outlined\n                    dense\n                    :modelValue=\"modelValue.maxValue\"\n                    @update:modelValue=\"updateMaxValue\"\n                ></q-input>\n            </div>\n            <div class=\"col-md\">\n                <q-input\n                    label=\"Value\"\n                    type=\"number\"\n                    outlined\n                    dense\n                    :modelValue=\"modelValue.value\"\n                    @update:modelValue=\"updateValue\"\n                ></q-input>\n            </div>\n        </div>\n        <q-separator class=\"q-my-md\"></q-separator>\n        <div class=\"row\">\n            <div class=\"col-md\">\n                <q-checkbox\n                    :modelValue=\"modelValue.showBar\"\n                    @update:modelValue=\"updateShowBar\"\n                    style=\"transform: translateX(-10px)\"\n                    label=\"Show bar\"\n                ></q-checkbox>\n            </div>\n            <div class=\"col-md\">\n                <q-select\n                    label=\"Bar type\"\n                    :disable=\"!modelValue.showBar\"\n                    :options=\"barOptions\"\n                    :modelValue=\"modelValue.barType\"\n                    @update:modelValue=\"updateBarType\"\n                    outlined\n                    dense\n                >\n                </q-select>\n            </div>\n        </div>\n        <q-input\n            class=\"q-mt-sm\"\n            label=\"Bar color\"\n            :disable=\"!modelValue.showBar\"\n            :modelValue=\"modelValue.barColor\"\n            @update:modelValue=\"updateBarColor\"\n            outlined\n            dense\n        >\n            <template v-slot:append>\n                <q-icon name=\"colorize\" class=\"cursor-pointer\">\n                    <q-popup-proxy transition-show=\"scale\" transition-hide=\"scale\">\n                        <q-color\n                            :modelValue=\"modelValue.barColor\"\n                            @update:modelValue=\"updateBarColor\"\n                        />\n                    </q-popup-proxy>\n                </q-icon>\n            </template>\n        </q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <template v-if=\"modelValue.showBar\">\n            <q-linear-progress\n                size=\"24px\"\n                rounded\n                v-if=\"modelValue.barType == 'linear'\"\n                :value=\"barValue\"\n                ref=\"progress\"\n            >\n                <div class=\"absolute-full flex flex-center\">\n                    <q-badge\n                        color=\"white\"\n                        text-color=\"accent\"\n                        class=\"text-weight-bold\"\n                        :label=\"progressLabel\"\n                    />\n                </div>\n            </q-linear-progress>\n            <div v-else style=\"display: inline-block\">\n                <q-circular-progress\n                    :value=\"modelValue.value\"\n                    size=\"xl\"\n                    :min=\"modelValue.minValue\"\n                    :max=\"modelValue.maxValue\"\n                    show-value\n                    :style=\"{ color: modelValue.barColor }\"\n                    center-color=\"grey-3\"\n                    track-color=\"grey-3\"\n                >\n                </q-circular-progress>\n                <q-tooltip>{{ progressLabel }}</q-tooltip>\n            </div>\n        </template>\n        <template v-else>\n            <div class=\"text-weight-bold text-h6\">{{ progressLabel }}</div>\n        </template>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { QCircularProgress, QLinearProgress, setCssVar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { Entry, Field, FieldType, ProgressField, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ProgressField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ProgressField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const progress = ref<QLinearProgress | QCircularProgress | null>(null);\n        const updateMinValue = (minValue: string) => {\n            const value = Number.parseInt(minValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, minValue: value } as ProgressField);\n        };\n        const updateMaxValue = (maxValue: string) => {\n            const value = Number.parseInt(maxValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, maxValue: value } as ProgressField);\n        };\n        const updateValue = (value: string) => {\n            const value2 = Number.parseInt(value) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, value: value2 } as ProgressField);\n        };\n        const updateShowBar = (showBar: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, showBar } as ProgressField);\n        };\n        const updateBarType = (barType: { value: \"linear\" | \"circular\" }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                barType: barType.value,\n            } as ProgressField);\n        };\n        const updateBarColor = (barColor: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, barColor } as ProgressField);\n        };\n        const updateLabel = (label: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, label } as ProgressField);\n        };\n        const barValue = computed(() => {\n            return (\n                (props.modelValue as ProgressField).value /\n                ((props.modelValue as ProgressField).maxValue -\n                    (props.modelValue as ProgressField).minValue)\n            );\n        });\n        const progressLabel = computed(() => {\n            let l = props.modelValue.label.replaceAll(\"%min\", String(props.modelValue.minValue));\n            l = l.replaceAll(\"%max\", String(props.modelValue.maxValue));\n            l = l.replaceAll(\"%rem2\", String(((1 - barValue.value) * 100).toFixed(2)));\n            l = l.replaceAll(\"%rem\", String(props.modelValue.maxValue - props.modelValue.value));\n            l = l.replaceAll(\"%val2\", String((barValue.value * 100).toFixed(2)));\n            l = l.replaceAll(\"%val\", String(props.modelValue.value));\n            return l;\n        });\n        watchEffect(() => {\n            if (progress.value) {\n                setCssVar(\n                    \"primary\",\n                    (props.modelValue as ProgressField).barColor,\n                    progress.value.$el\n                );\n            }\n        });\n        const barOptions = [\n            {\n                label: \"Linear\",\n                value: \"linear\",\n            },\n            {\n                label: \"Circular\",\n                value: \"circular\",\n            },\n        ];\n\n        return {\n            FieldType,\n            updateLabel,\n            updateMinValue,\n            updateMaxValue,\n            updateValue,\n            updateShowBar,\n            updateBarType,\n            updateBarColor,\n            barOptions,\n            barValue,\n            progress,\n            progressLabel,\n        };\n    },\n});\n</script>\n","\nimport QCircularProgress from 'quasar/src/components/circular-progress/QCircularProgress.js';import QLinearProgress from 'quasar/src/components/linear-progress/QLinearProgress.js';import setCssVar from 'quasar/src/utils/set-css-var.js';;\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { Entry, Field, FieldType, ProgressField, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ProgressField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ProgressField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const progress = ref<QLinearProgress | QCircularProgress | null>(null);\n        const updateMinValue = (minValue: string) => {\n            const value = Number.parseInt(minValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, minValue: value } as ProgressField);\n        };\n        const updateMaxValue = (maxValue: string) => {\n            const value = Number.parseInt(maxValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, maxValue: value } as ProgressField);\n        };\n        const updateValue = (value: string) => {\n            const value2 = Number.parseInt(value) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, value: value2 } as ProgressField);\n        };\n        const updateShowBar = (showBar: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, showBar } as ProgressField);\n        };\n        const updateBarType = (barType: { value: \"linear\" | \"circular\" }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                barType: barType.value,\n            } as ProgressField);\n        };\n        const updateBarColor = (barColor: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, barColor } as ProgressField);\n        };\n        const updateLabel = (label: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, label } as ProgressField);\n        };\n        const barValue = computed(() => {\n            return (\n                (props.modelValue as ProgressField).value /\n                ((props.modelValue as ProgressField).maxValue -\n                    (props.modelValue as ProgressField).minValue)\n            );\n        });\n        const progressLabel = computed(() => {\n            let l = props.modelValue.label.replaceAll(\"%min\", String(props.modelValue.minValue));\n            l = l.replaceAll(\"%max\", String(props.modelValue.maxValue));\n            l = l.replaceAll(\"%rem2\", String(((1 - barValue.value) * 100).toFixed(2)));\n            l = l.replaceAll(\"%rem\", String(props.modelValue.maxValue - props.modelValue.value));\n            l = l.replaceAll(\"%val2\", String((barValue.value * 100).toFixed(2)));\n            l = l.replaceAll(\"%val\", String(props.modelValue.value));\n            return l;\n        });\n        watchEffect(() => {\n            if (progress.value) {\n                setCssVar(\n                    \"primary\",\n                    (props.modelValue as ProgressField).barColor,\n                    progress.value.$el\n                );\n            }\n        });\n        const barOptions = [\n            {\n                label: \"Linear\",\n                value: \"linear\",\n            },\n            {\n                label: \"Circular\",\n                value: \"circular\",\n            },\n        ];\n\n        return {\n            FieldType,\n            updateLabel,\n            updateMinValue,\n            updateMaxValue,\n            updateValue,\n            updateShowBar,\n            updateBarType,\n            updateBarColor,\n            barOptions,\n            barValue,\n            progress,\n            progressLabel,\n        };\n    },\n});\n","import { render } from \"./ProgressField.vue?vue&type=template&id=88f0bab4\"\nimport script from \"./ProgressField.vue?vue&type=script&lang=ts\"\nexport * from \"./ProgressField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QColor from 'quasar/src/components/color/QColor.js';\nimport QLinearProgress from 'quasar/src/components/linear-progress/QLinearProgress.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QCircularProgress from 'quasar/src/components/circular-progress/QCircularProgress.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QIcon,QTooltip,QDialog,QSeparator,QCheckbox,QSelect,QPopupProxy,QColor,QLinearProgress,QBadge,QCircularProgress});\n","<template>\n    <div v-if=\"editView\">\n        <q-select\n            label=\"Categories\"\n            outlined\n            dense\n            multiple\n            :modelValue=\"modelValue.categories\"\n            @update:modelValue=\"updateCategories\"\n            :options=\"categories\"\n            class=\"q-mt-md\"\n            new-value-mode=\"add-unique\"\n            option-label=\"name\"\n            options-dense\n            option-value=\"id\"\n            emit-value\n            map-options\n            use-chips\n        >\n            <template v-slot:no-option>\n                <q-item dense>\n                    <q-item-section class=\"text-italic text-grey\"> No categories </q-item-section>\n                </q-item>\n            </template>\n        </q-select>\n        <select-entry\n            multiple\n            :modelValue=\"modelValue.entries\"\n            @update:modelValue=\"updateEntries\"\n            outlined\n            dense\n            class=\"q-mt-sm\"\n            options-dense\n            label=\"Entries\"\n        ></select-entry>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <q-list bordered separator class=\"rounded-borders\">\n            <entry-link v-for=\"e in entryReferences\" :entryId=\"e\" :key=\"e\" item></entry-link>\n        </q-list>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { intersection } from \"lodash\";\nimport { computed, defineComponent, PropType, watch, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    Entry,\n    FieldType,\n    ReferenceField,\n    TextField,\n} from \"@/store/types\";\n\nimport EntryLink from \"../EntryLink.vue\";\nimport SelectEntry from \"../form/SelectEntry.vue\";\n\nexport default defineComponent({\n    name: \"ReferenceField\",\n    emits: [\"update:modelValue\"],\n    components: { SelectEntry, EntryLink },\n    props: {\n        modelValue: {\n            type: Object as PropType<ReferenceField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            props.entry.category\n                .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                .filter((c) => c !== undefined)\n        );\n        const entryReferences = computed(() =>\n            Object.values($store.state.entries)\n                .filter(\n                    (e) =>\n                        intersection(e.category, props.modelValue.categories).length ||\n                        props.modelValue.entries.includes(e.id)\n                )\n                .map((e) => e.id)\n        );\n\n        // Functions\n        const updateCategories = (catg: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, categories: catg } as ReferenceField);\n        };\n        const updateEntries = (entr: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, entries: entr } as ReferenceField);\n        };\n\n        // Effects\n        watchEffect(() => {\n            if (!props.editView) {\n                props.modelValue.categories.forEach(\n                    async (c) =>\n                        await $store.dispatch(API_FETCH_ENTRIES, { category: c, flush: false })\n                );\n                props.modelValue.entries.forEach(\n                    async (e) => await $store.dispatch(API_FETCH_ENTRY, { id: e })\n                );\n            }\n        });\n\n        return {\n            FieldType,\n            categories,\n            updateCategories,\n            updateEntries,\n            entryReferences,\n        };\n    },\n});\n</script>\n","\nimport { intersection } from \"lodash\";\nimport { computed, defineComponent, PropType, watch, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    Entry,\n    FieldType,\n    ReferenceField,\n    TextField,\n} from \"@/store/types\";\n\nimport EntryLink from \"../EntryLink.vue\";\nimport SelectEntry from \"../form/SelectEntry.vue\";\n\nexport default defineComponent({\n    name: \"ReferenceField\",\n    emits: [\"update:modelValue\"],\n    components: { SelectEntry, EntryLink },\n    props: {\n        modelValue: {\n            type: Object as PropType<ReferenceField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            props.entry.category\n                .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                .filter((c) => c !== undefined)\n        );\n        const entryReferences = computed(() =>\n            Object.values($store.state.entries)\n                .filter(\n                    (e) =>\n                        intersection(e.category, props.modelValue.categories).length ||\n                        props.modelValue.entries.includes(e.id)\n                )\n                .map((e) => e.id)\n        );\n\n        // Functions\n        const updateCategories = (catg: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, categories: catg } as ReferenceField);\n        };\n        const updateEntries = (entr: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, entries: entr } as ReferenceField);\n        };\n\n        // Effects\n        watchEffect(() => {\n            if (!props.editView) {\n                props.modelValue.categories.forEach(\n                    async (c) =>\n                        await $store.dispatch(API_FETCH_ENTRIES, { category: c, flush: false })\n                );\n                props.modelValue.entries.forEach(\n                    async (e) => await $store.dispatch(API_FETCH_ENTRY, { id: e })\n                );\n            }\n        });\n\n        return {\n            FieldType,\n            categories,\n            updateCategories,\n            updateEntries,\n            entryReferences,\n        };\n    },\n});\n","import { render } from \"./ReferenceField.vue?vue&type=template&id=0e729061\"\nimport script from \"./ReferenceField.vue?vue&type=script&lang=ts\"\nexport * from \"./ReferenceField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QSelect,QItem,QItemSection,QList});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"Content\"\n            outlined\n            dense\n            :modelValue=\"modelValue.content\"\n            @update:modelValue=\"updateValue\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div class=\"text-body2\">{{ modelValue.content }}</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"TextField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"TextField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./TextField.vue?vue&type=template&id=6de76b9d\"\nimport script from \"./TextField.vue?vue&type=script&lang=ts\"\nexport * from \"./TextField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput});\n","<template>\n    <div v-if=\"editView\">\n        <q-checkbox\n            :modelValue=\"modelValue.value\"\n            @update:modelValue=\"updateValue\"\n            style=\"transform: translateX(-10px)\"\n        >\n            <slot v-if=\"modelValue.value\">\n                On<span class=\"text-italic text-grey q-ml-sm\">\"{{ modelValue.whenTrue }}\"</span>\n            </slot>\n            <slot v-else>\n                Off<span class=\"text-italic text-grey q-ml-sm\">\"{{ modelValue.whenFalse }}\"</span>\n            </slot>\n        </q-checkbox>\n        <q-input\n            label=\"When on\"\n            outlined\n            class=\"q-mt-md\"\n            dense\n            :modelValue=\"modelValue.whenTrue\"\n            @update:modelValue=\"updateWhenTrue\"\n        ></q-input>\n        <q-input\n            label=\"When off\"\n            outlined\n            dense\n            class=\"q-mt-sm\"\n            :modelValue=\"modelValue.whenFalse\"\n            @update:modelValue=\"updateWhenFalse\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div class=\"text-body2\">\n            {{ modelValue.value ? modelValue.whenTrue : modelValue.whenFalse }}\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, FieldType, ToggleField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ToggleField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ToggleField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, value });\n        };\n        const updateWhenTrue = (whenTrue: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenTrue });\n        };\n        const updateWhenFalse = (whenFalse: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenFalse });\n        };\n\n        return {\n            FieldType,\n            updateValue,\n            updateWhenTrue,\n            updateWhenFalse,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, FieldType, ToggleField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ToggleField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ToggleField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, value });\n        };\n        const updateWhenTrue = (whenTrue: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenTrue });\n        };\n        const updateWhenFalse = (whenFalse: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenFalse });\n        };\n\n        return {\n            FieldType,\n            updateValue,\n            updateWhenTrue,\n            updateWhenFalse,\n        };\n    },\n});\n","import { render } from \"./ToggleField.vue?vue&type=template&id=25feb328\"\nimport script from \"./ToggleField.vue?vue&type=script&lang=ts\"\nexport * from \"./ToggleField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCheckbox,QInput});\n","import AttachmentsFieldV from \"@/components/fields/AttachmentsField.vue\";\nimport DescriptionFieldV from \"@/components/fields/DescriptionField.vue\";\nimport EmbedFieldV from \"@/components/fields/EmbedField.vue\";\nimport MapFieldV from \"@/components/fields/MapField.vue\";\nimport NumberFieldV from \"@/components/fields/NumberField.vue\";\nimport ProgressFieldV from \"@/components/fields/ProgressField.vue\";\nimport ReferenceFieldV from \"@/components/fields/ReferenceField.vue\";\nimport TextFieldV from \"@/components/fields/TextField.vue\";\nimport ToggleFieldV from \"@/components/fields/ToggleField.vue\";\n\nimport {\n    AttachmentsField,\n    DescriptionField,\n    EmbedField,\n    FieldType,\n    MapField,\n    NumberField,\n    ProgressField,\n    ReferenceField,\n    TextField,\n    ToggleField,\n} from \"./store/types\";\n\nexport const DefaultTextField: Omit<TextField, \"type\" | \"id\"> = {\n    name: \"New Text\",\n    content: \"\",\n};\n\nexport const DefaultDescriptionField: Omit<DescriptionField, \"type\" | \"id\"> = {\n    name: \"New Description\",\n    content: \"\",\n};\n\nexport const DefaultNumberField: Omit<NumberField, \"type\" | \"id\"> = {\n    name: \"New Number\",\n    value: 0,\n};\n\nexport const DefaultToggleField: Omit<ToggleField, \"type\" | \"id\"> = {\n    name: \"New Toggle\",\n    value: true,\n    whenTrue: \"On\",\n    whenFalse: \"Off\",\n};\n\nexport const DefaultProgressField: Omit<ProgressField, \"type\" | \"id\"> = {\n    name: \"New Progress\",\n    maxValue: 100,\n    minValue: 0,\n    value: 100,\n    showBar: true,\n    barType: \"linear\",\n    barColor: \"#007bf5\",\n    label: \"%val / %max\",\n};\n\nexport const DefaultAttachmentsField: Omit<AttachmentsField, \"type\" | \"id\"> = {\n    name: \"New Attachments\",\n    attachments: [],\n};\n\nexport const DefaultEmbedField: Omit<EmbedField, \"type\" | \"id\"> = {\n    name: \"New Embed\",\n    url: \"\",\n};\n\nexport const DefaultMapField: Omit<MapField, \"type\" | \"id\"> = {\n    name: \"New Map\",\n    imageKey: undefined,\n    locations: [],\n};\n\nexport const DefaultReferenceField: Omit<ReferenceField, \"type\" | \"id\"> = {\n    name: \"New Reference\",\n    categories: [],\n    entries: [],\n};\n\nexport const FieldDefs = {\n    [FieldType.Text]: {\n        component: TextFieldV,\n        default: DefaultTextField,\n        label: \"Text\",\n        icon: \"short_text\",\n    },\n    [FieldType.Description]: {\n        component: DescriptionFieldV,\n        default: DefaultDescriptionField,\n        label: \"Description\",\n        icon: \"subject\",\n    },\n    [FieldType.Number]: {\n        component: NumberFieldV,\n        default: DefaultNumberField,\n        label: \"Number\",\n        icon: \"pin\",\n    },\n    [FieldType.Toggle]: {\n        component: ToggleFieldV,\n        default: DefaultToggleField,\n        label: \"Toggle\",\n        icon: \"toggle_on\",\n    },\n    [FieldType.Progress]: {\n        component: ProgressFieldV,\n        default: DefaultProgressField,\n        label: \"Progress\",\n        icon: \"horizontal_rule\",\n    },\n    [FieldType.Attachments]: {\n        component: AttachmentsFieldV,\n        default: DefaultAttachmentsField,\n        label: \"Attachments\",\n        icon: \"perm_media\",\n    },\n    [FieldType.Map]: {\n        component: MapFieldV,\n        default: DefaultMapField,\n        label: \"Map\",\n        icon: \"map\",\n    },\n    [FieldType.Reference]: {\n        component: ReferenceFieldV,\n        default: DefaultReferenceField,\n        label: \"Reference\",\n        icon: \"file_present\",\n    },\n    [FieldType.Embed]: {\n        component: EmbedFieldV,\n        default: DefaultEmbedField,\n        label: \"Embed\",\n        icon: \"link\",\n    },\n};\n\nexport const CreateFieldTree = [\n    {\n        label: \"General\",\n        icon: \"folder\",\n        selectable: false,\n        fieldType: \"_\",\n        children: Object.entries(FieldDefs).map((k) => ({\n            fieldType: k[0],\n            label: k[1].label,\n            icon: k[1].icon,\n        })),\n    },\n];\n\n//             { fieldType: FieldType.Reference, label: \"Reference\", icon: \"file_present\" },\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\" style=\"width: 800px\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">\"{{ entry.title }}\" - Attachments</div>\n                <q-space></q-space>\n                <q-btn\n                    icon=\"add\"\n                    color=\"primary\"\n                    flat\n                    round\n                    dense\n                    class=\"q-mr-sm\"\n                    @click=\"createAttachment\"\n                >\n                    <q-tooltip>Create a new attachment</q-tooltip>\n                </q-btn>\n                <q-btn icon=\"close\" flat round dense v-close-popup>\n                    <q-tooltip>Close dialog</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <q-card-section>\n                <q-splitter v-model=\"splitVal\" :limits=\"[40, 55]\">\n                    <template v-slot:before>\n                        <q-list\n                            separator\n                            dense\n                            v-if=\"!isEmpty(filteredAttachments)\"\n                            style=\"overflow: auto; height: 200px\"\n                        >\n                            <q-item\n                                clickable\n                                v-ripple\n                                v-for=\"(att, attName) in filteredAttachments\"\n                                :key=\"attName\"\n                                @click=\"setSelected(attName)\"\n                                :active=\"attName === selectedAttKey\"\n                            >\n                                <q-item-section\n                                    avatar\n                                    class=\"q-pr-none\"\n                                    style=\"min-width: 0; width: 28px\"\n                                >\n                                    <q-icon\n                                        :name=\"getAttachmentIcon(att.content_type)\"\n                                        size=\"20px\"\n                                    ></q-icon>\n                                </q-item-section>\n                                <q-item-section class=\"ellipsis\">\n                                    {{ attName }}\n                                </q-item-section>\n                                <q-item-section side>\n                                    <q-badge outline color=\"grey\">\n                                        {{ getExtension(att.content_type) || \"?\" }}\n                                    </q-badge>\n                                </q-item-section>\n                            </q-item>\n                        </q-list>\n                        <div v-else class=\"text-grey q-pa-md\">No attachments found.</div>\n                    </template>\n                    <template v-slot:after>\n                        <template v-if=\"selectedAttKey && selectedAtt\">\n                            <q-splitter\n                                horizontal\n                                v-model=\"selectedAttSplitter\"\n                                :limits=\"[40, 60]\"\n                                style=\"height: 200px\"\n                            >\n                                <template v-slot:before>\n                                    <template v-if=\"selectedAtt.content_type === 'text/plain'\">\n                                        <div\n                                            v-if=\"renderText(selectedAtt.data)\"\n                                            class=\"q-px-sm text-caption\"\n                                            style=\"line-height: 1.3em\"\n                                        >\n                                            {{ renderText(selectedAtt.data) }}\n                                        </div>\n                                        <div v-else class=\"q-px-sm text-grey\">Empty content</div>\n                                    </template>\n                                    <div v-else-if=\"selectedAtt.content_type.startsWith('audio')\">\n                                        <audio controls :src=\"selectedAttData\"></audio>\n                                    </div>\n                                    <div v-else-if=\"selectedAtt.content_type.startsWith('image')\">\n                                        <q-img\n                                            @click=\"zoomImage = true\"\n                                            :src=\"selectedAttData\"\n                                            class=\"cursor-pointer\"\n                                        ></q-img>\n                                        <q-dialog v-model=\"zoomImage\">\n                                            <q-img :src=\"selectedAttData\"></q-img>\n                                        </q-dialog>\n                                    </div>\n                                    <div v-else-if=\"selectedAtt.content_type.startsWith('video')\">\n                                        <video controls :src=\"selectedAttData\"></video>\n                                    </div>\n                                    <div v-else class=\"text-body text-grey q-px-sm\">\n                                        Unable to load preview\n                                    </div>\n                                </template>\n                                <template v-slot:after>\n                                    <q-markup-table flat dense>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-left text-grey\">Name</td>\n                                                <td class=\"text-right\">\n                                                    {{ truncate(selectedAttKey, { length: 16 }) }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left text-grey\">Type</td>\n                                                <td class=\"text-right\">\n                                                    {{\n                                                        truncate(selectedAtt.content_type, {\n                                                            length: 16,\n                                                        })\n                                                    }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left text-grey\">Size</td>\n                                                <td class=\"text-right\">\n                                                    {{ humanStorageSize(selectedAtt.data.length) }}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </q-markup-table>\n                                    <div class=\"row justify-end\">\n                                        <q-btn\n                                            round\n                                            icon=\"mode_edit\"\n                                            class=\"q-mr-sm\"\n                                            size=\"12px\"\n                                            flat\n                                            @click=\"replaceAttachment\"\n                                        >\n                                            <q-tooltip>Replace \"{{ selectedAttKey }}\"</q-tooltip>\n                                        </q-btn>\n                                        <q-btn\n                                            @click=\"deleteAttachment\"\n                                            round\n                                            icon=\"delete_outline\"\n                                            color=\"negative\"\n                                            size=\"12px\"\n                                            flat\n                                        >\n                                            <q-tooltip>Delete \"{{ selectedAttKey }}\"</q-tooltip>\n                                        </q-btn>\n                                    </div>\n                                </template>\n                            </q-splitter>\n                        </template>\n                        <div v-else class=\"text-grey q-pa-md text-center\">\n                            No attachment selected.\n                        </div>\n                    </template>\n                </q-splitter>\n            </q-card-section>\n            <q-card-actions align=\"left\">\n                <div class=\"text-body q-pl-md text-grey\">\n                    {{ filteredAttachmentsLen }} attachment{{\n                        filteredAttachmentsLen == 1 ? \"\" : \"s\"\n                    }}\n                </div>\n                <q-space></q-space>\n                <q-btn flat color=\"primary\" label=\"OK\" @click=\"onOKClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { isEmpty, truncate } from \"lodash\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport { format, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_DELETE_ENTRY_ATTACHMENT,\n    API_FETCH_ENTRY,\n    CreateAttachment,\n} from \"@/store/types\";\nimport { b64, getAttachmentIcon, renderText } from \"@/utils\";\n\nimport CreateAttachmentDialog from \"./CreateAttachmentDialog.vue\";\nimport DeleteAttachmentDialog from \"./DeleteAttachmentDialog.vue\";\n\nexport default defineComponent({\n    name: \"ViewAttachmentsDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const splitVal = ref(55);\n        const selectedAttKey = ref(\"\");\n        const selectedAttSplitter = ref(30);\n        const zoomImage = ref(false);\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const filteredAttachments = computed(() => entry.value.attachments);\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n        const selectedAtt = computed(\n            () => entry.value.attachments[selectedAttKey.value] || undefined\n        );\n        const selectedAttData = computed(() =>\n            selectedAtt.value\n                ? b64(selectedAtt.value.content_type, selectedAtt.value.data as string)\n                : undefined\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (key in entry.value.attachments) {\n                selectedAttKey.value = key;\n            }\n        };\n        const createAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: entry.value.attachments,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    await $store.dispatch(API_FETCH_ENTRY, { id: props.entryId, force: true });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n        const replaceAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: entry.value.attachments,\n                    replace: selectedAttKey.value,\n                    replaceData:\n                        selectedAtt.value.content_type === \"text/plain\"\n                            ? renderText(selectedAtt.value.data as string)\n                            : undefined,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: selectedAttKey.value,\n                    });\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const deleteAttachment = () => {\n            if (!selectedAttKey.value || !selectedAtt.value) {\n                return;\n            }\n            $q.dialog({\n                component: DeleteAttachmentDialog,\n                componentProps: {\n                    name: selectedAttKey.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: selectedAttKey.value,\n                    });\n                    selectedAttKey.value = \"\";\n                    $q.notify({ message: \"Attachment deleted\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        // Effects\n        onMounted(() => {\n            // Fetch entry\n        });\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            splitVal,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            createAttachment,\n            getAttachmentIcon,\n            selectedAtt,\n            selectedAttKey,\n            setSelected,\n            entry,\n            renderText,\n            deleteAttachment,\n            isEmpty,\n            selectedAttSplitter,\n            truncate,\n            zoomImage,\n            selectedAttData,\n            getExtension: mime.extension,\n            replaceAttachment,\n            humanStorageSize: format.humanStorageSize,\n            b64,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section class=\"row align-items-center q-pb-sm\">\n                <div class=\"text-h6\" v-if=\"replace\">Replace attachment \"{{ replace }}\"</div>\n                <div class=\"text-h6\" v-else>Create attachment</div>\n            </q-card-section>\n            <q-tabs v-model=\"currentTab\" dense class=\"text-primary\">\n                <q-tab name=\"upload\" label=\"Upload\"></q-tab>\n                <q-tab name=\"raw\" label=\"Raw\"></q-tab>\n            </q-tabs>\n            <q-separator></q-separator>\n            <q-tab-panels v-model=\"currentTab\" animated>\n                <q-tab-panel name=\"upload\">\n                    <q-file\n                        outlined\n                        label=\"Upload a file...\"\n                        v-model=\"uploadData\"\n                        :hint=\"'Size: ' + uploadDataSize\"\n                        debounce=\"600\"\n                    >\n                        <template v-slot:prepend>\n                            <q-icon name=\"attach_file\" />\n                        </template>\n                    </q-file>\n                </q-tab-panel>\n                <q-tab-panel name=\"raw\">\n                    <q-input\n                        type=\"textarea\"\n                        outlined\n                        v-model=\"rawData\"\n                        :hint=\"'Size: ' + rawDataSize\"\n                        debounce=\"600\"\n                    ></q-input>\n                </q-tab-panel>\n            </q-tab-panels>\n            <q-separator></q-separator>\n            <q-input\n                label=\"Name\"\n                class=\"q-pt-md q-px-md q-pb-md\"\n                v-model=\"attachmentName\"\n                outlined\n                dense\n                :rules=\"[\n                    (v) => /^\\w+$/.test(v) || 'Please use only letters, numbers, and underscores',\n                ]\"\n            ></q-input>\n\n            <q-card-actions align=\"right\">\n                <q-btn\n                    flat\n                    color=\"primary\"\n                    :label=\"replace ? 'Replace' : 'Create'\"\n                    :disable=\"!attachmentName || !/^\\w+$/.test(attachmentName)\"\n                    @click=\"onOKClick\"\n                />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { format, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport { CreateAttachment, Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateAttachmentsDialog\",\n    props: {\n        attachments: {\n            type: Object as PropType<{ [key: string]: PouchDB.Core.FullAttachment }>,\n            required: true,\n        },\n        replace: {\n            type: String,\n        },\n        replaceData: {\n            type: String,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n\n        // Refs\n        const currentTab = ref(props.replaceData ? \"raw\" : \"upload\");\n        const uploadData = ref<File | undefined>(undefined);\n        const rawData = ref(props.replaceData ? props.replaceData : \"\");\n        const attachmentName = ref(props.replace ? props.replace : \"\");\n\n        // Computed\n        const rawDataSize = computed(() => format.humanStorageSize(new Blob([rawData.value]).size));\n        const uploadDataSize = computed(() =>\n            format.humanStorageSize(uploadData.value ? uploadData.value.size : 0)\n        );\n\n        // Functions\n        const submit = () => {\n            try {\n                switch (currentTab.value) {\n                    case \"upload\":\n                        if (!uploadData.value) {\n                            throw new Error(\"File never uploaded\");\n                        }\n                        onDialogOK({\n                            data: uploadData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                    case \"raw\":\n                        onDialogOK({\n                            data: rawData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n        const presubmit = () => {\n            try {\n                let cancel = false;\n                if (!attachmentName.value) {\n                    throw new Error(\"Attachment name empty\");\n                }\n                if (!/^\\w+$/.test(attachmentName.value)) {\n                    throw new Error(\"Invalid attachment name\");\n                }\n                // Check if attachment already exists\n                if (\n                    attachmentName.value in props.attachments &&\n                    !(props.replace === attachmentName.value)\n                ) {\n                    $q.dialog({\n                        title: \"Attachment already exists\",\n                        message: `Attachment \"${attachmentName.value}\" already exists in this entry. Would you like to replace it?`,\n                        cancel: true,\n                        ok: \"replace\",\n                        persistent: true,\n                    })\n                        .onOk(() => {\n                            submit();\n                        })\n                        .onCancel(() => {\n                            cancel = true;\n                        });\n                } else {\n                    submit();\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            currentTab,\n            rawData,\n            uploadData,\n            rawDataSize,\n            uploadDataSize,\n            attachmentName,\n\n            onOKClick() {\n                presubmit();\n                // onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport format from 'quasar/src/utils/format.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport { CreateAttachment, Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateAttachmentsDialog\",\n    props: {\n        attachments: {\n            type: Object as PropType<{ [key: string]: PouchDB.Core.FullAttachment }>,\n            required: true,\n        },\n        replace: {\n            type: String,\n        },\n        replaceData: {\n            type: String,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n\n        // Refs\n        const currentTab = ref(props.replaceData ? \"raw\" : \"upload\");\n        const uploadData = ref<File | undefined>(undefined);\n        const rawData = ref(props.replaceData ? props.replaceData : \"\");\n        const attachmentName = ref(props.replace ? props.replace : \"\");\n\n        // Computed\n        const rawDataSize = computed(() => format.humanStorageSize(new Blob([rawData.value]).size));\n        const uploadDataSize = computed(() =>\n            format.humanStorageSize(uploadData.value ? uploadData.value.size : 0)\n        );\n\n        // Functions\n        const submit = () => {\n            try {\n                switch (currentTab.value) {\n                    case \"upload\":\n                        if (!uploadData.value) {\n                            throw new Error(\"File never uploaded\");\n                        }\n                        onDialogOK({\n                            data: uploadData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                    case \"raw\":\n                        onDialogOK({\n                            data: rawData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n        const presubmit = () => {\n            try {\n                let cancel = false;\n                if (!attachmentName.value) {\n                    throw new Error(\"Attachment name empty\");\n                }\n                if (!/^\\w+$/.test(attachmentName.value)) {\n                    throw new Error(\"Invalid attachment name\");\n                }\n                // Check if attachment already exists\n                if (\n                    attachmentName.value in props.attachments &&\n                    !(props.replace === attachmentName.value)\n                ) {\n                    $q.dialog({\n                        title: \"Attachment already exists\",\n                        message: `Attachment \"${attachmentName.value}\" already exists in this entry. Would you like to replace it?`,\n                        cancel: true,\n                        ok: \"replace\",\n                        persistent: true,\n                    })\n                        .onOk(() => {\n                            submit();\n                        })\n                        .onCancel(() => {\n                            cancel = true;\n                        });\n                } else {\n                    submit();\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            currentTab,\n            rawData,\n            uploadData,\n            rawDataSize,\n            uploadDataSize,\n            attachmentName,\n\n            onOKClick() {\n                presubmit();\n                // onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CreateAttachmentDialog.vue?vue&type=template&id=a880fad6\"\nimport script from \"./CreateAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateAttachmentDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QTabs from 'quasar/src/components/tabs/QTabs.js';\nimport QTab from 'quasar/src/components/tabs/QTab.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QTabPanels from 'quasar/src/components/tab-panels/QTabPanels.js';\nimport QTabPanel from 'quasar/src/components/tab-panels/QTabPanel.js';\nimport QFile from 'quasar/src/components/file/QFile.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QTabs,QTab,QSeparator,QTabPanels,QTabPanel,QFile,QIcon,QInput,QCardActions,QBtn});\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section>\n                <div class=\"text-h6\">Delete attachment \"{{ name }}\"</div>\n            </q-card-section>\n            <q-card-section>\n                Are you sure you want to delete\n                <span class=\"text-weight-bold\">\"{{ name }}\"?</span> This action cannot be undone!\n                <br />\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" flat />\n                <q-btn color=\"red\" label=\"Delete\" @click=\"onOKClick\" flat />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteAttachmentDialog\",\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteAttachmentDialog\",\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./DeleteAttachmentDialog.vue?vue&type=template&id=51f373d6\"\nimport script from \"./DeleteAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./DeleteAttachmentDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QCardActions,QBtn});\n","\nimport { isEmpty, truncate } from \"lodash\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport format from 'quasar/src/utils/format.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onMounted, PropType, ref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_DELETE_ENTRY_ATTACHMENT,\n    API_FETCH_ENTRY,\n    CreateAttachment,\n} from \"@/store/types\";\nimport { b64, getAttachmentIcon, renderText } from \"@/utils\";\n\nimport CreateAttachmentDialog from \"./CreateAttachmentDialog.vue\";\nimport DeleteAttachmentDialog from \"./DeleteAttachmentDialog.vue\";\n\nexport default defineComponent({\n    name: \"ViewAttachmentsDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const splitVal = ref(55);\n        const selectedAttKey = ref(\"\");\n        const selectedAttSplitter = ref(30);\n        const zoomImage = ref(false);\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const filteredAttachments = computed(() => entry.value.attachments);\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n        const selectedAtt = computed(\n            () => entry.value.attachments[selectedAttKey.value] || undefined\n        );\n        const selectedAttData = computed(() =>\n            selectedAtt.value\n                ? b64(selectedAtt.value.content_type, selectedAtt.value.data as string)\n                : undefined\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (key in entry.value.attachments) {\n                selectedAttKey.value = key;\n            }\n        };\n        const createAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: entry.value.attachments,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    await $store.dispatch(API_FETCH_ENTRY, { id: props.entryId, force: true });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n        const replaceAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: entry.value.attachments,\n                    replace: selectedAttKey.value,\n                    replaceData:\n                        selectedAtt.value.content_type === \"text/plain\"\n                            ? renderText(selectedAtt.value.data as string)\n                            : undefined,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: selectedAttKey.value,\n                    });\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const deleteAttachment = () => {\n            if (!selectedAttKey.value || !selectedAtt.value) {\n                return;\n            }\n            $q.dialog({\n                component: DeleteAttachmentDialog,\n                componentProps: {\n                    name: selectedAttKey.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: selectedAttKey.value,\n                    });\n                    selectedAttKey.value = \"\";\n                    $q.notify({ message: \"Attachment deleted\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        // Effects\n        onMounted(() => {\n            // Fetch entry\n        });\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            splitVal,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            createAttachment,\n            getAttachmentIcon,\n            selectedAtt,\n            selectedAttKey,\n            setSelected,\n            entry,\n            renderText,\n            deleteAttachment,\n            isEmpty,\n            selectedAttSplitter,\n            truncate,\n            zoomImage,\n            selectedAttData,\n            getExtension: mime.extension,\n            replaceAttachment,\n            humanStorageSize: format.humanStorageSize,\n            b64,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./ViewAttachmentsDialog.vue?vue&type=template&id=a9c4ac2e\"\nimport script from \"./ViewAttachmentsDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./ViewAttachmentsDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QSplitter from 'quasar/src/components/splitter/QSplitter.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QMarkupTable from 'quasar/src/components/markup-table/QMarkupTable.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QSplitter,QList,QItem,QItemSection,QIcon,QBadge,QImg,QMarkupTable,QCardActions});qInstall(script, 'directives', {ClosePopup,Ripple});\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section>\n                <div class=\"text-h6\">Delete entry \"{{ entry.title }}\"</div>\n            </q-card-section>\n            <q-card-section>\n                Are you sure you want to delete\n                <span class=\"text-weight-bold\">\"{{ entry.title }}\"?</span> This action cannot be\n                undone!\n                <br />\n                <div class=\"text-red q-mt-sm\">\n                    All fields and relationships will be permanently deleted.\n                </div>\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" flat />\n                <q-btn color=\"red\" label=\"Delete\" @click=\"onOKClick\" flat />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./DeleteEntryDialog.vue?vue&type=template&id=7b12065e\"\nimport script from \"./DeleteEntryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./DeleteEntryDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QCardActions,QBtn});\n","<template>\n    <!-- notice dialogRef here -->\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\" style=\"width: 800px\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">Editing \"{{ entryModel.title }}\"</div>\n                <q-space></q-space>\n                <q-btn\n                    icon=\"add\"\n                    color=\"primary\"\n                    flat\n                    round\n                    dense\n                    class=\"q-mr-sm\"\n                    @click=\"createFieldTooltip = false\"\n                >\n                    <q-popup-proxy v-model=\"createFieldPopup\">\n                        <q-list>\n                            <q-item class=\"q-px-sm q-pb-none\">\n                                <q-input\n                                    label=\"Search fields...\"\n                                    outlined\n                                    dense\n                                    autofocus\n                                    v-model=\"createFieldTreeFilter\"\n                                    :ref=\"createFieldTreeFilterRef\"\n                                ></q-input>\n                            </q-item>\n                            <q-item class=\"q-px-sm\">\n                                <q-tree\n                                    class=\"full-width\"\n                                    :nodes=\"createFieldTree\"\n                                    node-key=\"fieldType\"\n                                    :filter=\"createFieldTreeFilter\"\n                                    v-model:expanded=\"createFieldTreeExpanded\"\n                                    v-model:selected=\"createFieldTreeSelected\"\n                                    @update:selected=\"onCreateFieldSubmit\"\n                                ></q-tree>\n                            </q-item>\n                        </q-list>\n                    </q-popup-proxy>\n                    <q-tooltip v-model=\"createFieldTooltip\">Create a new field</q-tooltip>\n                </q-btn>\n                <q-btn\n                    icon=\"delete_outline\"\n                    color=\"negative\"\n                    flat\n                    round\n                    dense\n                    class=\"q-mr-sm\"\n                    @click=\"deleteEntry\"\n                >\n                    <q-tooltip>Delete \"{{ entryModel.title }}\"</q-tooltip>\n                </q-btn>\n                <q-btn icon=\"close\" flat round dense v-close-popup>\n                    <q-tooltip>Cancel editing</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <div class=\"row\">\n                <div class=\"col col-md-6\">\n                    <q-card-section class=\"q-pt-none\">\n                        <q-tree\n                            :nodes=\"fieldTree\"\n                            node-key=\"key\"\n                            selected-color=\"primary\"\n                            v-model:selected=\"fieldTreeSelected\"\n                            v-model:expanded=\"fieldTreeExpanded\"\n                            ref=\"fieldTreeRef\"\n                            accordion\n                        >\n                            <template v-slot:default-header=\"prop\">\n                                <div class=\"row items-center\">\n                                    <q-icon\n                                        v-if=\"prop.node.icon\"\n                                        :name=\"prop.node.icon\"\n                                        size=\"20px\"\n                                        class=\"q-mr-sm\"\n                                        :class=\"{\n                                            'text-red':\n                                                !prop.node.label || prop.node.icon == 'warning',\n                                        }\"\n                                    />\n                                    <q-img\n                                        v-else\n                                        :src=\"prop.node.avatar\"\n                                        width=\"20px\"\n                                        class=\"rounded-borders q-mr-sm\"\n                                    ></q-img>\n                                    <div\n                                        v-if=\"prop.node.label\"\n                                        :class=\"{ 'text-red': prop.node.icon == 'warning' }\"\n                                    >\n                                        {{ prop.node.label }}\n                                    </div>\n                                    <div v-else class=\"text-italic text-red\">Untitled field</div>\n                                </div>\n                            </template>\n                        </q-tree>\n                    </q-card-section>\n                </div>\n                <div class=\"col col-md-6\" v-if=\"fieldTreeSelected === 'entry'\">\n                    <q-card-section class=\"q-pt-none\">\n                        <q-form>\n                            <div class=\"row items-center\">\n                                <q-avatar\n                                    :icon=\"entryModel.avatar.data\"\n                                    class=\"q-mr-sm cursor-pointer\"\n                                    rounded\n                                    color=\"grey-4\"\n                                    text-color=\"dark\"\n                                    size=\"56px\"\n                                    v-if=\"entryModel.avatar.type === 'icon'\"\n                                >\n                                    <q-tooltip>Change entry avatar</q-tooltip>\n                                    <q-popup-proxy\n                                        max-width=\"200px\"\n                                        v-model=\"showEntryAvatarDialog\"\n                                    >\n                                        <entry-icon-dialog\n                                            :entry=\"entry\"\n                                            useAttachments\n                                            @attach=\"updateEntryAvatar\"\n                                        ></entry-icon-dialog>\n                                    </q-popup-proxy>\n                                </q-avatar>\n                                <q-avatar\n                                    v-else\n                                    class=\"q-mr-sm cursor-pointer\"\n                                    rounded\n                                    color=\"grey-4\"\n                                    text-color=\"dark\"\n                                    size=\"56px\"\n                                >\n                                    <q-tooltip>Change entry avatar</q-tooltip>\n                                    <img :src=\"entryAvatar\" />\n                                    <q-popup-proxy\n                                        max-width=\"200px\"\n                                        v-model=\"showEntryAvatarDialog\"\n                                    >\n                                        <entry-icon-dialog\n                                            :entry=\"entry\"\n                                            useAttachments\n                                            @attach=\"updateEntryAvatar\"\n                                        ></entry-icon-dialog>\n                                    </q-popup-proxy>\n                                </q-avatar>\n                                <q-input\n                                    label=\"Title\"\n                                    outlined\n                                    class=\"col-grow\"\n                                    v-model=\"entryModel.title\"\n                                ></q-input>\n                            </div>\n                            <q-select\n                                label=\"In category...\"\n                                outlined\n                                class=\"q-mt-sm\"\n                                dense\n                                multiple\n                                v-model=\"entryModel.category\"\n                                :options=\"categories\"\n                                new-value-mode=\"add-unique\"\n                                option-label=\"name\"\n                                options-dense\n                                option-value=\"id\"\n                                emit-value\n                                map-options\n                                use-chips\n                            >\n                                <template v-slot:no-option>\n                                    <q-item dense>\n                                        <q-item-section class=\"text-italic text-grey\">\n                                            No categories\n                                        </q-item-section>\n                                    </q-item>\n                                </template>\n                            </q-select>\n                        </q-form>\n                    </q-card-section>\n                </div>\n                <div class=\"col col-md-6\" v-else-if=\"currentField\">\n                    <q-card-section class=\"q-pt-none\">\n                        <q-form>\n                            <q-input\n                                label=\"Name\"\n                                outlined\n                                dense\n                                v-model=\"currentField.name\"\n                                ref=\"currentFieldName\"\n                            >\n                            </q-input>\n                            <q-separator class=\"q-my-md\"></q-separator>\n                            <component\n                                :is=\"getComponentFromField(currentField.type)\"\n                                :editView=\"true\"\n                                :entry=\"entryModel\"\n                                v-model=\"currentField\"\n                            ></component>\n                            <div class=\"row q-mt-md\">\n                                <q-btn-group flat>\n                                    <q-btn\n                                        color=\"primary\"\n                                        flat\n                                        icon=\"north\"\n                                        @click=\"moveCurrentField(-1)\"\n                                        class=\"q-px-sm\"\n                                    ></q-btn>\n                                    <q-btn\n                                        color=\"primary\"\n                                        flat\n                                        icon=\"south\"\n                                        class=\"q-px-sm\"\n                                        @click=\"moveCurrentField(1)\"\n                                    ></q-btn>\n                                </q-btn-group>\n                                <q-btn\n                                    class=\"q-ml-auto\"\n                                    color=\"negative\"\n                                    flat\n                                    label=\"Delete field\"\n                                    @click=\"deleteField\"\n                                ></q-btn>\n                            </div>\n                        </q-form>\n                    </q-card-section>\n                </div>\n                <div\n                    class=\"col col-md-6 text-h6 align-items-center q-px-lg q-py-xl text-grey\"\n                    v-else\n                >\n                    <template v-if=\"entryModel.fields.length\">\n                        Select a field to view more information\n                    </template>\n                    <template v-else>Create a field to get started</template>\n                </div>\n            </div>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" flat label=\"Save changes\" @click=\"submit\" />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { nanoid } from \"nanoid\";\nimport { QInput, QTree, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, reactive, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { CreateFieldTree, FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_UPDATE_ENTRY, Entry, Field, FieldType } from \"@/store/types\";\n\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EntryIconDialog from \"./EntryIconDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EditEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n        entryID: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    components: { EntryIconDialog },\n\n    setup(props) {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const entryModel = reactive({ ...props.entry });\n        console.log(entryModel);\n        const currentFieldName = ref<QInput | null>(null);\n\n        const entryAvatar = computed(() =>\n            $store.getters.entryAttachment(props.entryID, entryModel.avatar.data)\n        );\n\n        const mapKeyToModel = (key: string): Field | undefined => {\n            if (!key) {\n                return undefined;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    return entryModel.fields[i];\n                }\n            }\n            return undefined;\n        };\n\n        const setModelFromKey = (key: string, v: Field) => {\n            if (!key) {\n                return;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    entryModel.fields[i] = v;\n                }\n            }\n            return;\n        };\n\n        const mapFieldToIcon = (t: FieldType): string => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].icon;\n            } else {\n                return \"help\";\n            }\n        };\n\n        const fieldTreeRef = ref<QTree | null>(null);\n        const fieldTreeSelected = ref<string | null>(null);\n        const fieldTreeExpanded = ref<string[]>([\"entry\"]);\n        const createFieldPopup = ref(false);\n        const createFieldTreeSelected = ref(null);\n        const currentField = computed({\n            get: () => mapKeyToModel(fieldTreeSelected.value as string),\n            set: (v) => {\n                if (!v) {\n                    return;\n                }\n                setModelFromKey(fieldTreeSelected.value as string, v);\n            },\n        });\n        const showEntryAvatarDialog = ref(false);\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        const moveCurrentField = (delta: number) => {\n            if (!currentField.value) return;\n            const index = entryModel.fields.indexOf(currentField.value);\n            if (index === -1) return;\n            const newIndex = index + delta;\n            if (newIndex < 0 || newIndex === entryModel.fields.length) return;\n            const indexes = [index, newIndex].sort();\n            entryModel.fields.splice(\n                indexes[0],\n                2,\n                entryModel.fields[indexes[1]],\n                entryModel.fields[indexes[0]]\n            );\n        };\n\n        const genFieldTree = (model: Entry) => {\n            const head = {\n                label: model.title,\n                avatar: model.avatar.type == \"attachment\" ? entryAvatar.value : undefined,\n                icon: model.avatar.type == \"icon\" ? model.avatar.data : undefined,\n                children: [] as object,\n                key: \"entry\",\n            };\n            head.children = model.fields.map((f) => {\n                if (!f) {\n                    return {\n                        label: \"Broken field\",\n                        key: nanoid(13),\n                        icon: \"warning\",\n                    };\n                }\n                switch (f.type) {\n                    default:\n                        return { label: f.name, key: f.id, icon: mapFieldToIcon(f.type) };\n                }\n            });\n            return [head];\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: entryModel,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, props.entryID);\n                    onDialogOK();\n                    $router.push(`/j/${currentJournal.value}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const updateEntryAvatar = (att: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            showEntryAvatarDialog.value = false;\n            if (att.type === \"image\") return;\n            entryModel.avatar = { type: att.type, data: att.data as string };\n        };\n\n        const deleteField = () => {\n            if (!currentField.value) {\n                return;\n            }\n            $q.dialog({\n                title: `Delete field \"${currentField.value.name}\"`,\n                message: `Are you sure you want to delete \"${currentField.value.name}\"? This action cannot be undone!`,\n                cancel: true,\n                persistent: true,\n                ok: {\n                    color: \"red\",\n                    label: \"Delete\",\n                    flat: true,\n                },\n            }).onOk(() => {\n                // Delete field from `entry` model\n                for (let i = 0; i < entryModel.fields.length; i++) {\n                    if (currentField.value?.id == entryModel.fields[i].id) {\n                        // delete entryModel.fields[i];\n                        entryModel.fields = entryModel.fields.filter(\n                            (f) => f.id != currentField.value?.id\n                        );\n                        break;\n                    }\n                }\n            });\n        };\n\n        const submitCreateField = (t: FieldType) => {\n            const id = nanoid(13);\n            const f = { ...FieldDefs[t].default, type: t, id } as Field;\n            entryModel.fields.push(f);\n            createFieldTreeSelected.value = null;\n            fieldTreeSelected.value = f.id;\n            createFieldPopup.value = false;\n\n            // Re-expand field tree if not already expanded\n            if (!fieldTreeExpanded.value.includes(\"entry\")) {\n                fieldTreeExpanded.value.push(\"entry\");\n            }\n\n            // Focus name field\n            if (currentFieldName.value) {\n                currentFieldName.value.focus();\n            }\n        };\n\n        const getComponentFromField = (t: FieldType) => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].component;\n            } else {\n                return ErrorField;\n            }\n        };\n\n        const state = {\n            entryModel,\n            currentField,\n            fieldTreeRef,\n            fieldTree: computed(() => genFieldTree(entryModel)),\n            fieldTreeSelected,\n            fieldTreeExpanded,\n            createFieldTree: CreateFieldTree,\n            createFieldTooltip: ref(false),\n            createFieldPopup,\n            createFieldTreeExpanded: ref([\"_\"]), // \"_\" fieldType special flag\n            createFieldTreeFilter: ref(\"\"),\n            createFieldTreeFilterRef: ref(null),\n            createFieldTreeSelected,\n            getComponentFromField,\n            submitCreateField,\n            onCreateFieldSubmit: (t: FieldType) => {\n                submitCreateField(t);\n            },\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n        };\n\n        const submit = async () => {\n            // Update entry\n            try {\n                await $store.dispatch(API_UPDATE_ENTRY, { id: props.entryID, data: entryModel });\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ message: e, type: \"negative\" });\n            }\n        };\n\n        return {\n            // This is REQUIRED;\n            // Need to inject these (from useDialogPluginComponent() call)\n            // into the vue scope for the vue html template\n            dialogRef,\n            onDialogHide,\n\n            ...state,\n            submit,\n            currentFieldName,\n            deleteField,\n            deleteEntry,\n            entryAvatar,\n            showEntryAvatarDialog,\n            moveCurrentField,\n            updateEntryAvatar,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.q-tree > .q-tree__node--child > .q-tree__node-header {\n    padding-left: 0;\n}\n</style>\n","<template>\n    <div class=\"text-subtitle2 q-mb-xs text-negative\">Error loading field!</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ErrorField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ErrorField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./ErrorField.vue?vue&type=template&id=55957e76\"\nimport script from \"./ErrorField.vue?vue&type=script&lang=ts\"\nexport * from \"./ErrorField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { nanoid } from \"nanoid\";\nimport QInput from 'quasar/src/components/input/QInput.js';import QTree from 'quasar/src/components/tree/QTree.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, reactive, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { CreateFieldTree, FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_UPDATE_ENTRY, Entry, Field, FieldType } from \"@/store/types\";\n\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EntryIconDialog from \"./EntryIconDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EditEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n        entryID: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    components: { EntryIconDialog },\n\n    setup(props) {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const entryModel = reactive({ ...props.entry });\n        console.log(entryModel);\n        const currentFieldName = ref<QInput | null>(null);\n\n        const entryAvatar = computed(() =>\n            $store.getters.entryAttachment(props.entryID, entryModel.avatar.data)\n        );\n\n        const mapKeyToModel = (key: string): Field | undefined => {\n            if (!key) {\n                return undefined;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    return entryModel.fields[i];\n                }\n            }\n            return undefined;\n        };\n\n        const setModelFromKey = (key: string, v: Field) => {\n            if (!key) {\n                return;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    entryModel.fields[i] = v;\n                }\n            }\n            return;\n        };\n\n        const mapFieldToIcon = (t: FieldType): string => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].icon;\n            } else {\n                return \"help\";\n            }\n        };\n\n        const fieldTreeRef = ref<QTree | null>(null);\n        const fieldTreeSelected = ref<string | null>(null);\n        const fieldTreeExpanded = ref<string[]>([\"entry\"]);\n        const createFieldPopup = ref(false);\n        const createFieldTreeSelected = ref(null);\n        const currentField = computed({\n            get: () => mapKeyToModel(fieldTreeSelected.value as string),\n            set: (v) => {\n                if (!v) {\n                    return;\n                }\n                setModelFromKey(fieldTreeSelected.value as string, v);\n            },\n        });\n        const showEntryAvatarDialog = ref(false);\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        const moveCurrentField = (delta: number) => {\n            if (!currentField.value) return;\n            const index = entryModel.fields.indexOf(currentField.value);\n            if (index === -1) return;\n            const newIndex = index + delta;\n            if (newIndex < 0 || newIndex === entryModel.fields.length) return;\n            const indexes = [index, newIndex].sort();\n            entryModel.fields.splice(\n                indexes[0],\n                2,\n                entryModel.fields[indexes[1]],\n                entryModel.fields[indexes[0]]\n            );\n        };\n\n        const genFieldTree = (model: Entry) => {\n            const head = {\n                label: model.title,\n                avatar: model.avatar.type == \"attachment\" ? entryAvatar.value : undefined,\n                icon: model.avatar.type == \"icon\" ? model.avatar.data : undefined,\n                children: [] as object,\n                key: \"entry\",\n            };\n            head.children = model.fields.map((f) => {\n                if (!f) {\n                    return {\n                        label: \"Broken field\",\n                        key: nanoid(13),\n                        icon: \"warning\",\n                    };\n                }\n                switch (f.type) {\n                    default:\n                        return { label: f.name, key: f.id, icon: mapFieldToIcon(f.type) };\n                }\n            });\n            return [head];\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: entryModel,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, props.entryID);\n                    onDialogOK();\n                    $router.push(`/j/${currentJournal.value}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const updateEntryAvatar = (att: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            showEntryAvatarDialog.value = false;\n            if (att.type === \"image\") return;\n            entryModel.avatar = { type: att.type, data: att.data as string };\n        };\n\n        const deleteField = () => {\n            if (!currentField.value) {\n                return;\n            }\n            $q.dialog({\n                title: `Delete field \"${currentField.value.name}\"`,\n                message: `Are you sure you want to delete \"${currentField.value.name}\"? This action cannot be undone!`,\n                cancel: true,\n                persistent: true,\n                ok: {\n                    color: \"red\",\n                    label: \"Delete\",\n                    flat: true,\n                },\n            }).onOk(() => {\n                // Delete field from `entry` model\n                for (let i = 0; i < entryModel.fields.length; i++) {\n                    if (currentField.value?.id == entryModel.fields[i].id) {\n                        // delete entryModel.fields[i];\n                        entryModel.fields = entryModel.fields.filter(\n                            (f) => f.id != currentField.value?.id\n                        );\n                        break;\n                    }\n                }\n            });\n        };\n\n        const submitCreateField = (t: FieldType) => {\n            const id = nanoid(13);\n            const f = { ...FieldDefs[t].default, type: t, id } as Field;\n            entryModel.fields.push(f);\n            createFieldTreeSelected.value = null;\n            fieldTreeSelected.value = f.id;\n            createFieldPopup.value = false;\n\n            // Re-expand field tree if not already expanded\n            if (!fieldTreeExpanded.value.includes(\"entry\")) {\n                fieldTreeExpanded.value.push(\"entry\");\n            }\n\n            // Focus name field\n            if (currentFieldName.value) {\n                currentFieldName.value.focus();\n            }\n        };\n\n        const getComponentFromField = (t: FieldType) => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].component;\n            } else {\n                return ErrorField;\n            }\n        };\n\n        const state = {\n            entryModel,\n            currentField,\n            fieldTreeRef,\n            fieldTree: computed(() => genFieldTree(entryModel)),\n            fieldTreeSelected,\n            fieldTreeExpanded,\n            createFieldTree: CreateFieldTree,\n            createFieldTooltip: ref(false),\n            createFieldPopup,\n            createFieldTreeExpanded: ref([\"_\"]), // \"_\" fieldType special flag\n            createFieldTreeFilter: ref(\"\"),\n            createFieldTreeFilterRef: ref(null),\n            createFieldTreeSelected,\n            getComponentFromField,\n            submitCreateField,\n            onCreateFieldSubmit: (t: FieldType) => {\n                submitCreateField(t);\n            },\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n        };\n\n        const submit = async () => {\n            // Update entry\n            try {\n                await $store.dispatch(API_UPDATE_ENTRY, { id: props.entryID, data: entryModel });\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ message: e, type: \"negative\" });\n            }\n        };\n\n        return {\n            // This is REQUIRED;\n            // Need to inject these (from useDialogPluginComponent() call)\n            // into the vue scope for the vue html template\n            dialogRef,\n            onDialogHide,\n\n            ...state,\n            submit,\n            currentFieldName,\n            deleteField,\n            deleteEntry,\n            entryAvatar,\n            showEntryAvatarDialog,\n            moveCurrentField,\n            updateEntryAvatar,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./EditEntryDialog.vue?vue&type=template&id=2a9150eb&scoped=true\"\nimport script from \"./EditEntryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./EditEntryDialog.vue?vue&type=script&lang=ts\"\n\nimport \"./EditEntryDialog.vue?vue&type=style&index=0&id=2a9150eb&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-2a9150eb\"\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QTree from 'quasar/src/components/tree/QTree.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QBtnGroup from 'quasar/src/components/btn-group/QBtnGroup.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QPopupProxy,QList,QItem,QInput,QTree,QTooltip,QIcon,QImg,QForm,QAvatar,QSelect,QItemSection,QSeparator,QBtnGroup,QCardActions});qInstall(script, 'directives', {ClosePopup});\n","\nimport * as _ from \"lodash\";\nimport colors from 'quasar/src/utils/colors.js';import QBadge from 'quasar/src/components/badge/QBadge.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, ref } from \"vue\";\nimport { onBeforeRouteLeave, onBeforeRouteUpdate, useRoute, useRouter } from \"vue-router\";\n\nimport { FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_SET_LAST_ENTRY, Field, SET_LAST_ENTRY } from \"@/store/types\";\nimport { b64 } from \"@/utils\";\n\nimport PreviewAttachmentDialog from \"./attachments/PreviewAttachmentDialog.vue\";\nimport ViewAttachmentsDialog from \"./attachments/ViewAttachmentsDialog.vue\";\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EditEntryDialog from \"./EditEntryDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EntryView\",\n    setup: () => {\n        const $store = useStore();\n        const $route = useRoute();\n        const $router = useRouter();\n        const $q = useQuasar();\n\n        const state = {\n            entry: computed(() => $store.state.entries[$route.params.eid as string]),\n        };\n\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            state.entry.value\n                ? state.entry.value.category\n                      .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                      .filter((c) => c !== undefined)\n                : []\n        );\n\n        const categoryBadgeRef = ref<typeof QBadge | null>(null);\n        const getCategoryTextColor = (color: string) => {\n            return colors.brightness(color) < 128 ? \"#fff\" : \"#1d1d1d\";\n        };\n\n        const getCategoryBorderColor = (color: string) => {\n            return colors.lighten(color, -25);\n        };\n\n        const getComponentFromField = (f: Field) => {\n            if (!f || !_.has(f, \"type\") || !(f.type in FieldDefs)) {\n                return ErrorField;\n            }\n            return FieldDefs[f.type].component;\n        };\n\n        const entryAvatar = computed(() => {\n            return $store.getters.entryAttachment(\n                state.entry.value.id,\n                state.entry.value.avatar.data\n            );\n        });\n        const previewAvatar = () => {\n            if (!state.entry.value.attachments[\"avatar\"]) {\n                return;\n            }\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: { ...state.entry.value.attachments[\"avatar\"], name: \"avatar\" },\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n        const editEntry = () => {\n            $q.dialog({\n                component: EditEntryDialog,\n                persistent: true,\n                componentProps: {\n                    entry: _.cloneDeep(state.entry.value),\n                    entryID: $route.params.eid as string,\n                },\n            });\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: state.entry.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, $route.params.eid);\n                    $store.state.lastEntry = \"\";\n                    $router.push(`/j/${$store.state.currentJournal}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const viewAttachments = () => {\n            $q.dialog({\n                component: ViewAttachmentsDialog,\n                componentProps: {\n                    // entry: state.entry.value,\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n\n        onBeforeRouteUpdate(() => {\n            $store.dispatch(API_SET_LAST_ENTRY, state.entry.value.id);\n        });\n\n        return {\n            ...state,\n            editEntry,\n            categories,\n            deleteEntry,\n            entryAvatar,\n            viewAttachments,\n            getComponentFromField,\n            getCategoryTextColor,\n            getCategoryBorderColor,\n            previewAvatar,\n            categoryBadgeRef,\n        };\n    },\n});\n","import { render } from \"./EntryView.vue?vue&type=template&id=0ecb68b3&scoped=true\"\nimport script from \"./EntryView.vue?vue&type=script&lang=ts\"\nexport * from \"./EntryView.vue?vue&type=script&lang=ts\"\n\nimport \"./EntryView.vue?vue&type=style&index=0&id=0ecb68b3&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-0ecb68b3\"\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QBtnDropdown from 'quasar/src/components/btn-dropdown/QBtnDropdown.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QItem,QItemSection,QAvatar,QIcon,QImg,QSeparator,QCardSection,QBtn,QTooltip,QBadge,QBtnDropdown,QList,QItemLabel});qInstall(script, 'directives', {ClosePopup});\n","<template>\n    <div class=\"q-ma-lg\">\n        <router-view name=\"view\"></router-view>\n    </div>\n</template>\n\n<script>\nimport PouchDB from \"pouchdb\";\nimport { Loading, useQuasar } from \"quasar\";\nimport { QSpinnerGrid } from \"quasar\";\nimport { computed, defineComponent, onMounted, onUnmounted } from \"vue\";\nimport { onBeforeRouteUpdate } from \"vue-router\";\n\nimport { useStore } from \"@/store\";\nimport { UI_VISIBILITY } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"Dashboard\",\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Display UI on mount\n        onMounted(() => {\n            $store.commit(UI_VISIBILITY, true);\n        });\n\n        // Hide UI on leave\n        onUnmounted(() => {\n            $store.commit(UI_VISIBILITY, false);\n        });\n\n        return {\n            currentJournal: computed(() => $store.getters.currentJournal),\n        };\n    },\n});\n</script>\n","import { render } from \"./Dashboard.vue?vue&type=template&id=303b0ff3\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <div class=\"row items-center q-pt-xl\">\n        <div class=\"col-none col-sm-1 col-md-3\"></div>\n        <div class=\"col justify-center text-center\">\n            <h2 class=\"q-mb-sm\">ajourn</h2>\n            <p class=\"text-subtitle-1 text-italic\">offline world planner.</p>\n            <q-btn\n                color=\"primary\"\n                label=\"New journal\"\n                icon=\"add\"\n                @click=\"openCreateJournal\"\n            ></q-btn>\n            <hr class=\"q-my-xl\" />\n            <h6 class=\"text-grey\" v-if=\"Object.keys(journals).length <= 0\">\n                No journals available.<br />\n                <q-btn flat no-caps size=\"lg\" class=\"text-primary\" @click=\"openCreateJournal\">\n                    Make one?\n                </q-btn>\n            </h6>\n            <q-list bordered separator v-else>\n                <q-item v-for=\"(j, id) in journals\" :key=\"id\" clickable :to=\"'/j/' + id\">\n                    <q-item-section v-if=\"j.title\">{{ j.title }}</q-item-section>\n                    <q-item-section v-else class=\"text-italic text-grey\"\n                        >Unknown journal, ID: {{ id }})</q-item-section\n                    >\n                </q-item>\n            </q-list>\n        </div>\n        <div class=\"col-none col-sm-1 col-md-3\"></div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, onBeforeMount } from \"vue\";\n\nimport CreateJournalDialog from \"@/components/CreateJournalDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { API_FETCH_JOURNALS } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"Landing\",\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n\n        onBeforeMount(async () => {\n            await $store.dispatch(API_FETCH_JOURNALS);\n        });\n\n        return {\n            journals: computed(() => $store.state.journals),\n            openCreateJournal: () => {\n                $q.dialog({\n                    component: CreateJournalDialog,\n                });\n            },\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <q-form @submit.prevent=\"submit\">\n                <q-card-section>\n                    <div class=\"text-h6\">Create a new journal</div>\n                </q-card-section>\n                <q-card-section class=\"q-py-none\">\n                    <q-input\n                        outlined\n                        autofocus\n                        placeholder=\"Title\"\n                        v-model=\"title\"\n                        :rules=\"[(val) => val.length >= 0 || 'Title is required']\"\n                    ></q-input>\n                    <div class=\"column\">\n                        <q-checkbox label=\"Sync online\" v-model=\"createOnline\" disable>\n                        </q-checkbox>\n                        <small class=\"text-grey\"> Log in to enable online sync. </small>\n                    </div>\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"text-primary\">\n                    <q-btn flat label=\"Cancel\" type=\"button\"></q-btn>\n                    <q-btn\n                        flat\n                        label=\"Create\"\n                        type=\"submit\"\n                        :loading=\"loading\"\n                        :disable=\"title.length <= 0\"\n                    ></q-btn>\n                </q-card-actions>\n            </q-form>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useStore } from \"@/store\";\nimport { API_CREATE_JOURNAL, API_OPEN_JOURNAL, CreateJournal } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateJournalDialog\",\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup() {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const title = ref(\"\");\n        const submit = async () => {\n            try {\n                const id = await $store.dispatch(API_CREATE_JOURNAL, {\n                    title: title.value,\n                } as CreateJournal);\n                await $store.dispatch(API_OPEN_JOURNAL, id);\n                await $router.push(`/j/${id}`);\n                onDialogOK();\n            } catch (e) {\n                $q.notify(e);\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            // stub: true only if user logged in\n            createOnline: ref(false),\n            title,\n            loading: ref(false),\n            submit,\n\n            // other methods that we used in our vue html template;\n            // these are part of our example (so not required)\n            onOKClick() {\n                submit();\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useStore } from \"@/store\";\nimport { API_CREATE_JOURNAL, API_OPEN_JOURNAL, CreateJournal } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateJournalDialog\",\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup() {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const title = ref(\"\");\n        const submit = async () => {\n            try {\n                const id = await $store.dispatch(API_CREATE_JOURNAL, {\n                    title: title.value,\n                } as CreateJournal);\n                await $store.dispatch(API_OPEN_JOURNAL, id);\n                await $router.push(`/j/${id}`);\n                onDialogOK();\n            } catch (e) {\n                $q.notify(e);\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            // stub: true only if user logged in\n            createOnline: ref(false),\n            title,\n            loading: ref(false),\n            submit,\n\n            // other methods that we used in our vue html template;\n            // these are part of our example (so not required)\n            onOKClick() {\n                submit();\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CreateJournalDialog.vue?vue&type=template&id=2eb25c70\"\nimport script from \"./CreateJournalDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateJournalDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QForm,QCardSection,QInput,QCheckbox,QCardActions,QBtn});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onBeforeMount } from \"vue\";\n\nimport CreateJournalDialog from \"@/components/CreateJournalDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { API_FETCH_JOURNALS } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"Landing\",\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n\n        onBeforeMount(async () => {\n            await $store.dispatch(API_FETCH_JOURNALS);\n        });\n\n        return {\n            journals: computed(() => $store.state.journals),\n            openCreateJournal: () => {\n                $q.dialog({\n                    component: CreateJournalDialog,\n                });\n            },\n        };\n    },\n});\n","import { render } from \"./Landing.vue?vue&type=template&id=79f6048b\"\nimport script from \"./Landing.vue?vue&type=script&lang=ts\"\nexport * from \"./Landing.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn,QList,QItem,QItemSection});\n","import Loading from 'quasar/src/plugins/Loading.js';import Notify from 'quasar/src/plugins/Notify.js';import QSpinnerGrid from 'quasar/src/components/spinner/QSpinnerGrid.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\n\nimport EntryView from \"@/components/EntryView.vue\";\nimport { store, useStore } from \"@/store\";\nimport {\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    API_FETCH_JOURNALS,\n    API_OPEN_JOURNAL,\n    UI_VISIBILITY,\n} from \"@/store/types\";\n\nimport Dashboard from \"../views/Dashboard.vue\";\nimport Landing from \"../views/Landing.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n    {\n        path: \"/\",\n        name: \"Landing\",\n        component: Landing,\n    },\n    {\n        path: \"/j/:jid\",\n        name: \"Dashboard\",\n        component: Dashboard,\n        children: [\n            {\n                path: \"e/:eid\",\n                name: \"Entry\",\n                components: {\n                    default: Dashboard,\n                    view: EntryView,\n                },\n                beforeEnter: async (to, from, next) => {\n                    // Fetch entry from database\n                    try {\n                        await store.dispatch(API_FETCH_ENTRY, { id: to.params.eid });\n                        next();\n                    } catch (e) {\n                        Notify.create({ message: e.message, type: \"negative\" });\n                        next(`/j/${to.params.jid}`);\n                    }\n                },\n            },\n        ],\n        beforeEnter: async (to, from, next) => {\n            // Show loading screen\n            Loading.show({\n                message: \"Loading journal...\",\n                spinner: QSpinnerGrid,\n            });\n\n            // Fetch journal from database\n            try {\n                await store.dispatch(API_FETCH_JOURNALS);\n                await store.dispatch(API_OPEN_JOURNAL, to.params.jid);\n                next();\n            } catch (e) {\n                Notify.create({ message: e.message, type: \"negative\" });\n                next(\"/\");\n            } finally {\n                Loading.hide();\n            }\n        },\n    },\n];\n\nconst router = createRouter({\n    history: createWebHistory(\n        process.env.NODE_ENV === \"production\" ? \"/ajourn\" : process.env.BASE_URL\n    ),\n    routes,\n});\n\nexport default router;\n","import \"./registerServiceWorker\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.fullscreen/Control.FullScreen.css\";\nimport \"leaflet\";\nimport \"leaflet.fullscreen\";\n\nimport screenfull from \"screenfull\";\nwindow.screenfull = screenfull;\n\nimport Quasar from 'quasar/src/vue-plugin.js';;\nimport { createApp } from \"vue\";\nimport vueDebounce from \"vue-debounce\";\n\nimport App from \"./App.vue\";\nimport { devtools } from \"./devtools\";\nimport quasarUserOptions from \"./quasar-user-options\";\nimport router from \"./router\";\nimport { key, store } from \"./store\";\n\nconst app = createApp(App)\n    .use(devtools)\n    .use(Quasar, quasarUserOptions)\n    .use(store, key)\n    .use(router)\n    .use(vueDebounce, { listenTo: \"input\" })\n    .mount(\"#app\");\n\napp.$options.devt;\n"],"sourceRoot":""}