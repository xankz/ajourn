{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/maps/MapView.vue?7438","webpack:///./src/components/ChangeLog.vue?6f4e","webpack:///./src/components/EditEntryDialog.vue?b6bc","webpack:///./src/components/fields/AttachmentsField.vue?ff61","webpack:///./src/components/fields/EmbedField.vue?873b","webpack:///./src/registerServiceWorker.ts","webpack:///./src/App.vue","webpack:///./src/db.ts","webpack:///./src/store/types.ts","webpack:///./src/utils.ts","webpack:///./src/store/index.ts","webpack:///./src/App.vue?0d89","webpack:///./src/App.vue?0d5a","webpack:///./src/devtools.ts","webpack:///./src/quasar-user-options.js","webpack:///./src/components/EntryView.vue","webpack:///./src/components/fields/AttachmentsField.vue","webpack:///./src/components/attachments/SelectAttachmentsDialog.vue","webpack:///./src/components/attachments/CreateAttachmentDialog.vue","webpack:///./src/components/attachments/CropAttachmentDialog.vue","webpack:///./src/components/attachments/CropAttachmentDialog.vue?96d8","webpack:///./src/components/attachments/CropAttachmentDialog.vue?5480","webpack:///./src/components/attachments/CreateAttachmentDialog.vue?114f","webpack:///./src/components/attachments/CreateAttachmentDialog.vue?8448","webpack:///./src/components/attachments/SelectAttachmentsDialog.vue?606f","webpack:///./src/components/attachments/SelectAttachmentsDialog.vue?90b5","webpack:///./src/components/attachments/PreviewAttachmentDialog.vue","webpack:///./src/components/attachments/PreviewAttachmentDialog.vue?8da1","webpack:///./src/components/attachments/PreviewAttachmentDialog.vue?5966","webpack:///./src/components/fields/AttachmentsFieldIcon.vue","webpack:///./src/components/fields/AttachmentsFieldIcon.vue?377e","webpack:///./src/components/fields/AttachmentsFieldIcon.vue?6b26","webpack:///./src/components/fields/AttachmentsField.vue?391f","webpack:///./src/components/fields/AttachmentsField.vue?fac2","webpack:///./src/components/fields/DescriptionField.vue","webpack:///./src/components/fields/DescriptionField.vue?f6c9","webpack:///./src/components/fields/DescriptionField.vue?d729","webpack:///./src/components/fields/EmbedField.vue","webpack:///./src/components/fields/EmbedField.vue?3439","webpack:///./src/components/fields/EmbedField.vue?c3fb","webpack:///./src/components/fields/MapField.vue","webpack:///./src/components/maps/EditMapDialog.vue","webpack:///./src/components/form/SelectEntry.vue","webpack:///./src/components/form/SelectEntry.vue?6838","webpack:///./src/components/form/SelectEntry.vue?c607","webpack:///./src/components/maps/MapView.vue","webpack:///./src/components/EntryLink.vue","webpack:///./src/components/EntryLink.vue?7611","webpack:///./src/components/EntryLink.vue?3d8b","webpack:///./src/components/maps/MapView.vue?a98a","webpack:///./src/components/maps/MapView.vue?d5d3","webpack:///./src/components/maps/EditMapDialog.vue?2b17","webpack:///./src/components/maps/EditMapDialog.vue?0d8d","webpack:///./src/components/fields/MapField.vue?cddc","webpack:///./src/components/fields/MapField.vue?1f99","webpack:///./src/components/fields/NumberField.vue","webpack:///./src/components/fields/NumberField.vue?33fc","webpack:///./src/components/fields/NumberField.vue?4b38","webpack:///./src/components/fields/ProgressField.vue","webpack:///./src/components/fields/ProgressField.vue?0f74","webpack:///./src/components/fields/ProgressField.vue?0c9e","webpack:///./src/components/fields/ReferenceField.vue","webpack:///./src/components/fields/ReferenceField.vue?e7c6","webpack:///./src/components/fields/ReferenceField.vue?547c","webpack:///./src/components/fields/TextField.vue","webpack:///./src/components/fields/TextField.vue?a366","webpack:///./src/components/fields/TextField.vue?b0be","webpack:///./src/components/fields/ToggleField.vue","webpack:///./src/components/fields/ToggleField.vue?00cb","webpack:///./src/components/fields/ToggleField.vue?0e2b","webpack:///./src/constants.ts","webpack:///./src/components/attachments/ViewAttachmentsDialog.vue","webpack:///./src/components/attachments/DeleteAttachmentDialog.vue","webpack:///./src/components/attachments/DeleteAttachmentDialog.vue?15f6","webpack:///./src/components/attachments/DeleteAttachmentDialog.vue?71c4","webpack:///./src/components/attachments/ViewAttachmentsDialog.vue?403a","webpack:///./src/components/attachments/ViewAttachmentsDialog.vue?4ee0","webpack:///./src/components/DeleteEntryDialog.vue","webpack:///./src/components/DeleteEntryDialog.vue?c945","webpack:///./src/components/DeleteEntryDialog.vue?f30a","webpack:///./src/components/EditEntryDialog.vue","webpack:///./src/components/EntryIconDialog.vue","webpack:///./src/components/EntryIconDialog.vue?6f59","webpack:///./src/components/EntryIconDialog.vue?0d23","webpack:///./src/components/fields/ErrorField.vue","webpack:///./src/components/fields/ErrorField.vue?76e1","webpack:///./src/components/fields/ErrorField.vue?eccc","webpack:///./src/components/EditEntryDialog.vue?dffe","webpack:///./src/components/EditEntryDialog.vue?481e","webpack:///./src/components/EntryView.vue?6293","webpack:///./src/components/EntryView.vue?f949","webpack:///./src/views/Dashboard.vue","webpack:///./src/components/JournalDrawer.vue","webpack:///./src/components/CreateEntryDialog.vue","webpack:///./src/components/ManageCategoriesDialog.vue","webpack:///./src/components/DeleteCategoryDialog.vue","webpack:///./src/components/DeleteCategoryDialog.vue?1e31","webpack:///./src/components/DeleteCategoryDialog.vue?1074","webpack:///./src/components/ManageCategoriesDialog.vue?d319","webpack:///./src/components/ManageCategoriesDialog.vue?6f91","webpack:///./src/components/CreateEntryDialog.vue?9438","webpack:///./src/components/CreateEntryDialog.vue?5eb9","webpack:///./src/components/CategoryChips.vue","webpack:///./src/components/CategoryChips.vue?6ba4","webpack:///./src/components/CategoryChips.vue?4748","webpack:///./src/components/JournalDrawer.vue?cac0","webpack:///./src/components/JournalDrawer.vue?c8a8","webpack:///./src/views/Dashboard.vue?a516","webpack:///./src/views/Landing.vue","webpack:///./src/components/ChangeLog.vue","webpack:///./src/components/ChangeLog.vue?537c","webpack:///./src/components/ChangeLog.vue?9d6d","webpack:///./src/components/CreateJournalDialog.vue","webpack:///./src/components/CreateJournalDialog.vue?6f89","webpack:///./src/components/CreateJournalDialog.vue?b39e","webpack:///./src/views/Landing.vue?c93b","webpack:///./src/views/Landing.vue?a826","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/components/EntryView.vue?b00c","webpack:///./src/components/attachments/CropAttachmentDialog.vue?5a39"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","jsonpScriptSrc","p","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","ready","log","registered","cached","updatefound","updated","offline","useDB","mustExist","db","skip_setup","plugin","FieldType","DocumentType","EmbedFieldService","API_FETCH_JOURNALS","API_CREATE_JOURNAL","API_OPEN_JOURNAL","API_FETCH_JOURNAL","API_CLOSE_JOURNAL","API_CREATE_ENTRY","API_FETCH_ENTRIES","API_FETCH_ENTRY","API_UPDATE_ENTRY","API_DELETE_ENTRY","API_ADD_ENTRY_ATTACHMENT","API_DELETE_ENTRY_ATTACHMENT","API_SET_LAST_ENTRY","API_UPDATE_JOURNAL","SET_JOURNAL","SET_JOURNALS","SET_ENTRIES","SET_ENTRY","SET_CURRENT_JOURNAL","SET_LAST_ENTRY","SET_USER_PREFS","indexDocumentKey","validateYouTubeUrl","url","regExp","match","validateSoundcloudUrl","URL","Invalid","YouTube","Soundcloud","Unknown","b64","contentType","getAttachmentIcon","startsWith","renderText","atob","b64toBlob","b64Data","sliceSize","byteCharacters","byteArrays","offset","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","dbIndexes","useStore","store","state","fetchingJournals","fetchingEntries","currentJournal","entries","lastEntry","journals","userPrefs","darkMode","mutations","payload","prefs","assign","set","id","journal","entry","getters","entryAttachment","attachments","content_type","entryAttachmentFull","actions","commit","dispatch","removeAttachment","_rev","close","force","attachment","File","mType","putAttachment","remove","_id","put","allDbs","filter","inds","ind","replace","fetchingJournalsOpen","createIndex","index","fields","generate","Entry","_attachments","save","category","flush","find","selector","$elemMatch","$eq","data2","docs","map","title","avatar","reduce","acc","description","categories","plugins","setup","$store","$q","savedPrefs","JSON","parse","dark","render","devtools","install","app","config","notify","position","Dialog","Notify","class","style","size","rounded","color","entryAvatar","ratio","loading","previewAvatar","ref","darkActive","text-color","split","label","editEntry","dense","clickable","viewAttachments","deleteEntry","f","getComponentFromField","modelValue","editView","linkedAttachments","selectAttachments","icon","flat","bordered","separator","att","side","round","entryId","previewAttachment","onDialogHide","selected","createAttachment","filteredAttachments","attName","setSelected","active","includes","outline","getExtension","align","filteredAttachmentsLen","disable","onOKClick","onCancelClick","persistent","uploadData","currentTab","animated","outlined","updateUploadData","$event","hint","uploadDataSize","debounce","prepend","rawData","rawDataSize","attachmentName","rules","test","cropValue","image","cropResults","coordinates","width","height","imgUrl","stencil-props","cropStencilOpts","onCropChange","options","cropOptions","option-label","map-options","option-value","emit-value","anchor","cropHelp","submit","props","required","imageType","String","components","Cropper","Preview","emits","dialogRef","onDialogOK","onDialogCancel","help","cropperRef","previewRef","opts","movable","scalable","aspectRatio","changeEv","getResult","canvas","toBlob","b","createObjectURL","revokeObjectURL","__scopeId","QDialog","QCard","QCardActions","QSelect","QTooltip","QBtn","replaceData","emit","format","humanStorageSize","AttachmentNameLength","dialog","component","CropAttachmentDialog","componentProps","onOk","f2","presubmit","cancel","ok","onCancel","QCardSection","QTabs","QTab","QSeparator","QTabPanels","QTabPanel","QFile","QIcon","QInput","multiple","Boolean","default","keys","CreateAttachmentDialog","QSpace","QList","QItem","QItemSection","QBadge","Ripple","controls","QImg","self","transition-show","transition-hide","QAvatar","AttachmentsFieldIcon","currentSlide","liveAttachments","kv","updateAttachments","k2","SelectAttachmentsDialog","PreviewAttachmentDialog","content","updateValue","max-height","toolbar","QEditor","updateUrl","embedLoading","embedService","embedServiceC","href","ms","QVideo","imageKey","editLocations","attachmentOptions","updateImageKey","option","itemProps","itemEvents","scope","opt","no-option","customName","updateCustomName","mapBackground","locations","background","showLocations","addLocation","mapLocations","mapSelected","selectOpts","mapSelectedPtr","options-dense","saveChanges","currentOpt","ctx","val","attrs","mapReady","crs","CRS","Simple","center","mapCenter","zoom","mapZoom","minZoom","mapImage","bounds","mapBounds","location","idx","lat-lng","draggable","updateLocation","$emit","showLink","focusPrevLocation","focusNextLocation","QItemLabel","item","to","avatarSize","LMap","LImageOverlay","LMarker","LPopup","EntryLink","LControl","mapLocationRefs","mapRef","mapFocus","lng","lat","leafletObject","normalizeLocation","loc","ml","idx2","focusLocation","flyTo","moveLocation","setLatLng","updateBackground","mapBlob","img","Image","getMapCenter","fullscreen","addTo","SelectEntry","MapView","_","EditMapDialog","Number","parseInt","updateLabel","append","minValue","updateMinValue","maxValue","updateMaxValue","showBar","updateShowBar","barOptions","barType","updateBarType","barColor","updateBarColor","barValue","progressLabel","min","max","show-value","center-color","track-color","progress","value2","replaceAll","toFixed","$el","QCheckbox","QPopupProxy","QColor","QLinearProgress","QCircularProgress","updateCategories","new-value-mode","use-chips","updateEntries","entryReferences","journalCategories","c2","values","catg","entr","forEach","whenTrue","whenFalse","updateWhenTrue","updateWhenFalse","AppVersion","ChangelogUrl","DefaultTextField","DefaultDescriptionField","DefaultNumberField","DefaultToggleField","DefaultProgressField","DefaultAttachmentsField","DefaultEmbedField","DefaultMapField","DefaultReferenceField","FieldDefs","Text","TextField","Description","DescriptionField","NumberField","Toggle","ToggleField","Progress","ProgressField","Attachments","AttachmentsField","Map","MapField","Reference","ReferenceField","Embed","EmbedField","CreateFieldTree","selectable","fieldType","children","k","splitVal","limits","before","isEmpty","selectedAttKey","after","selectedAtt","horizontal","selectedAttSplitter","selectedAttData","zoomImage","truncate","replaceAttachment","deleteAttachment","oldAttName","a","DeleteAttachmentDialog","QSplitter","QMarkupTable","ClosePopup","entryModel","createFieldTooltip","createFieldPopup","autofocus","createFieldTreeFilter","createFieldTreeFilterRef","nodes","createFieldTree","node-key","expanded","createFieldTreeExpanded","createFieldTreeSelected","onCreateFieldSubmit","fieldTree","selected-color","fieldTreeSelected","fieldTreeExpanded","accordion","default-header","prop","node","max-width","showEntryAvatarDialog","useAttachments","updateEntryAvatar","currentField","moveCurrentField","deleteField","tab","iconGroups","g","caption","icons","attachIcon","bottom-slots","accept","placeholder","selectedImage","attachImage","selectAttachment","methods","this","entryID","EntryIconDialog","$router","currentFieldName","mapKeyToModel","setModelFromKey","v","mapFieldToIcon","fieldTreeRef","delta","indexOf","newIndex","indexes","sort","genFieldTree","model","DeleteEntryDialog","submitCreateField","focus","ErrorField","QTree","QForm","QBtnGroup","$route","params","eid","isActive","categoryBadgeRef","getCategoryTextColor","colors","brightness","getCategoryBorderColor","lighten","EditEntryDialog","ViewAttachmentsDialog","QBtnDropdown","view","elevated","exitJournal","toggleDarkMode","padding","show-if-above","currentJournalID","standout","entrySearch","clearable","header","filteredCategories","entryCategoryFilter","openCreateCategory","openCreateEntry","filteredEntries","getEntryAvatar","showIconDialog","updateAvatar","openManageCategories","template","addCategory","expand-separator","header-style","group","hide-bottom-space","deleteCategory","labelSingular","stack-label","pluralize","singular","labelPlural","namePluralized","unshift","luminosity","DeleteCategoryDialog","QExpansionItem","avatarFile","e2","jid","fr","FileReader","readAsDataURL","ManageCategoriesDialog","QSpinnerDots","QChip","CategoryChips","every","fc","CreateEntryDialog","JournalDrawer","QLayout","QHeader","QToolbar","QToolbarTitle","QDrawer","QPageContainer","numJournals","no-caps","openCreateJournal","latestVer","fetchErr","source","changes","VueMarkdownIt","fetchChangelog","headers","Headers","fetch","Math","random","method","cache","text","res","vers","v1idx","v2idx","QBanner","createOnline","ChangeLog","CreateJournalDialog","routes","path","Landing","Dashboard","EntryView","beforeEnter","from","next","Loading","show","spinner","QSpinnerGrid","hide","router","history","screenfull","App","use","listenTo","mount"],"mappings":"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","file":"js/app.df9d58b5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-2d0c9189\":\"4312ce11\",\"chunk-2d0cf391\":\"1c4b4848\",\"chunk-2d0da8f3\":\"f59eb4b6\",\"chunk-2d22523a\":\"c0744dc4\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/ajourn/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./MapView.vue?vue&type=style&index=0&id=9ae87e28&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./ChangeLog.vue?vue&type=style&index=0&id=2aa84456&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./EditEntryDialog.vue?vue&type=style&index=0&id=710af520&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./AttachmentsField.vue?vue&type=style&index=0&id=6f505ae6&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./EmbedField.vue?vue&type=style&index=0&id=23affd3c&lang=scss&scoped=true\"","/* eslint-disable no-console */\n\nimport { register } from \"register-service-worker\";\n\nif (process.env.NODE_ENV === \"production\") {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        \"App is being served from cache by a service worker.\\n\" +\n          \"For more details, visit https://goo.gl/AFskqB\"\n      );\n    },\n    registered() {\n      console.log(\"Service worker has been registered.\");\n    },\n    cached() {\n      console.log(\"Content has been cached for offline use.\");\n    },\n    updatefound() {\n      console.log(\"New content is downloading.\");\n    },\n    updated() {\n      console.log(\"New content is available; please refresh.\");\n    },\n    offline() {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    },\n    error(error) {\n      console.error(\"Error during service worker registration:\", error);\n    }\n  });\n}\n","<template>\n    <router-view></router-view>\n</template>\n\n<script lang=\"ts\">\nimport Cookies from \"js-cookie\";\nimport { useQuasar } from \"quasar\";\nimport { defineComponent, onMounted, watchEffect } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useStore } from \"./store\";\nimport { SET_LAST_ENTRY, SET_USER_PREFS } from \"./store/types\";\n\nexport default defineComponent({\n    name: \"App\",\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n        const $router = useRouter();\n\n        onMounted(async () => {\n            // Load user preferences from cookies\n            const savedPrefs = Cookies.get(\"userPrefs\");\n            if (savedPrefs) {\n                $store.commit(SET_USER_PREFS, JSON.parse(savedPrefs));\n            }\n\n            // Load last viewed entry from cookies\n            const lastEntry = Cookies.get(\"lastEntry\");\n            if (lastEntry) {\n                $store.commit(SET_LAST_ENTRY, lastEntry);\n            }\n        });\n\n        watchEffect(() => {\n            $q.dark.set($store.state.userPrefs.darkMode);\n        });\n\n        return {};\n    },\n});\n</script>\n","import PouchDB from \"pouchdb\";\nimport allDbs from \"pouchdb-all-dbs\";\nimport PouchDBFind from \"pouchdb-find\";\n\nallDbs(PouchDB);\nPouchDB.plugin(PouchDBFind);\n\nexport function openLocal(name: string) {\n    return new PouchDB(name);\n}\n\nexport function useDB(name: string, mustExist = true) {\n    if (mustExist) {\n        try {\n            const db = new PouchDB(name, { skip_setup: true });\n            return db;\n        } catch (e) {\n            console.log(e);\n            throw new Error(\"Database does not exist\");\n        }\n    } else {\n        return new PouchDB(name);\n    }\n}\n\nexport { PouchDB };\n","export const API_FETCH_JOURNALS = \"API_FETCH_JOURNALS\";\nexport const API_CREATE_JOURNAL = \"API_CREATE_JOURNAL\";\nexport const API_OPEN_JOURNAL = \"API_OPEN_JOURNAL\";\nexport const API_FETCH_JOURNAL = \"API_FETCH_JOURNAL\";\nexport const API_CLOSE_JOURNAL = \"API_CLOSE_JOURNAL\";\nexport const API_CREATE_ENTRY = \"API_CREATE_ENTRY\";\nexport const API_FETCH_ENTRIES = \"API_FETCH_ENTRIES\";\nexport const API_FETCH_ENTRY = \"API_FETCH_ENTRY\";\nexport const API_UPDATE_ENTRY = \"API_UPDATE_ENTRY\";\nexport const API_DELETE_ENTRY = \"API_DELETE_ENTRY\";\nexport const API_ADD_ENTRY_ATTACHMENT = \"API_ADD_ENTRY_ATTACHMENT\";\nexport const API_DELETE_ENTRY_ATTACHMENT = \"API_DELETE_ENTRY_ATTACHMENT\";\nexport const API_SET_LAST_ENTRY = \"API_SET_LAST_ENTRY\";\nexport const API_UPDATE_JOURNAL = \"API_UPDATE_JOURNAL\";\n\nexport const SET_JOURNAL = \"SET_JOURNAL\";\nexport const SET_JOURNALS = \"SET_JOURNALS\";\nexport const SET_ENTRIES = \"SET_ENTRIES\";\nexport const SET_ENTRY = \"SET_ENTRY\";\nexport const SET_CURRENT_JOURNAL = \"SET_CURRENT_JOURNAL\";\nexport const SET_DB = \"SET_DB\";\nexport const SET_LAST_ENTRY = \"SET_LAST_ENTRY\";\nexport const SET_USER_PREFS = \"SET_USER_PREFS\";\n\nexport const indexDocumentKey = \"0\";\n\nexport enum FieldType {\n    Text = 0,\n    Description = 1,\n    Number = 2,\n    Toggle = 3,\n    Progress = 4,\n    Attachments = 5,\n    Map = 6,\n    Reference = 7,\n    Embed = 8,\n}\n\nexport type UserPrefs = {\n    darkMode: boolean;\n};\n\nexport type Journal = {\n    id: string;\n    title: string;\n};\n\nexport enum DocumentType {\n    Entry = \"entry\",\n    Category = \"category\",\n}\n\nexport type JournalIndex = {\n    title: string;\n    description: string;\n    categories: Category[];\n};\n\nexport type FetchEntriesOpts = {\n    save: boolean;\n    category: string;\n    flush: boolean;\n};\n\nexport type Category = {\n    name: string;\n    color: string;\n    labelSingular: string;\n    labelPlural: string;\n    id: string;\n};\n\nexport type Entry = {\n    type: DocumentType.Entry;\n    title: string;\n    avatar: EntryAvatar;\n    category: string[];\n    fields: Field[];\n    id: string;\n    readonly attachments: { [key: string]: PouchDB.Core.FullAttachment };\n};\n\nexport type BaseField = {\n    name: string;\n    id: string;\n};\n\nexport type Field =\n    | TextField\n    | DescriptionField\n    | NumberField\n    | ToggleField\n    | ProgressField\n    | AttachmentsField\n    | EmbedField\n    | MapField\n    | ReferenceField;\n\nexport type TextField = BaseField & {\n    type: FieldType.Text;\n    content: string;\n};\n\nexport type DescriptionField = BaseField & {\n    type: FieldType.Description;\n    content: string;\n};\n\nexport type NumberField = BaseField & {\n    type: FieldType.Number;\n    value: number;\n};\n\nexport type ToggleField = BaseField & {\n    type: FieldType.Toggle;\n    value: boolean;\n    whenTrue: string;\n    whenFalse: string;\n};\n\nexport type ProgressField = BaseField & {\n    type: FieldType.Progress;\n    minValue: number;\n    value: number;\n    maxValue: number;\n    showBar: boolean;\n    barType: \"linear\" | \"circular\";\n    barColor: string;\n    label: string;\n};\n\nexport type AttachmentsField = BaseField & {\n    type: FieldType.Attachments;\n    attachments: string[];\n};\n\nexport type CreateAttachment = {\n    name: string;\n    data: File | string;\n};\n\nexport enum EmbedFieldService {\n    Invalid = -1,\n    Unknown = 0,\n    YouTube = 1,\n    Spotify = 2,\n    Soundcloud = 3,\n}\n\nexport type EmbedField = BaseField & {\n    type: FieldType.Embed;\n    url: string;\n};\n\nexport type MapField = BaseField & {\n    type: FieldType.Map;\n    customName?: string;\n    imageKey?: string;\n    locations: MapFieldLocation[];\n};\n\nexport type MapFieldLocation = {\n    entryId: string;\n    position: [number, number];\n};\n\nexport type ReferenceField = BaseField & {\n    type: FieldType.Reference;\n    entries: string[];\n    categories: string[];\n};\n\nexport type EntryAvatar = {\n    type: \"icon\" | \"attachment\";\n    data: string | ArrayBuffer;\n};\n\nexport type CurrentJournal = {\n    index: JournalIndex;\n    categories: string[];\n    entries: Entry[];\n};\n\nexport type CreateJournal = Pick<Journal, \"title\">;\n","import { EmbedFieldService } from \"./store/types\";\n\nconst validateYouTubeUrl = (url = \"\") => {\n    const regExp = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\n    if (url.match(regExp)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nconst validateSoundcloudUrl = (url = \"\") => {\n    if (url.match(/^(https?:\\/\\/)?(www\\.)?(soundcloud\\.com|snd\\.sc)\\/.*$/)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const getEmbedService = (url: string): EmbedFieldService => {\n    // Validate URL\n    try {\n        new URL(url);\n    } catch (e) {\n        return EmbedFieldService.Invalid;\n    }\n\n    // Match URL to service\n    if (validateYouTubeUrl(url)) {\n        return EmbedFieldService.YouTube;\n    } else if (validateSoundcloudUrl(url)) {\n        return EmbedFieldService.Soundcloud;\n    } else {\n        return EmbedFieldService.Unknown;\n    }\n};\n\nexport const b64 = (contentType: string, data: string) => {\n    return \"data:\" + contentType + \";base64,\" + data;\n};\n\nexport const getAttachmentIcon = (type: string) => {\n    if (type.startsWith(\"text/\")) {\n        return \"description\";\n    }\n    if (type.startsWith(\"image/\")) {\n        return \"insert_photo\";\n    }\n    if (type.startsWith(\"audio/\")) {\n        return \"headset\";\n    }\n    if (type.startsWith(\"video/\")) {\n        return \"movie\";\n    }\n    return \"insert_drive_file\";\n};\n\nexport const renderText = (data: string) => {\n    return atob(data);\n};\n\nexport const b64toBlob = (b64Data: string, contentType?: string, sliceSize?: number) => {\n    contentType = contentType || \"\";\n    sliceSize = sliceSize || 512;\n\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        const byteArray = new Uint8Array(byteNumbers);\n\n        byteArrays.push(byteArray);\n    }\n\n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n};\n","// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport Cookies from \"js-cookie\";\nimport * as mime from \"mime-types\";\nimport shortid from \"short-uuid\";\nimport { InjectionKey } from \"vue\";\nimport { createLogger, createStore, Store, useStore as baseUseStore } from \"vuex\";\n\nimport { PouchDB, useDB } from \"@/db\";\nimport { b64 } from \"@/utils\";\n\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_CLOSE_JOURNAL,\n    API_CREATE_ENTRY,\n    API_CREATE_JOURNAL,\n    API_DELETE_ENTRY,\n    API_DELETE_ENTRY_ATTACHMENT,\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    API_FETCH_JOURNAL,\n    API_FETCH_JOURNALS,\n    API_OPEN_JOURNAL,\n    API_SET_LAST_ENTRY,\n    API_UPDATE_ENTRY,\n    API_UPDATE_JOURNAL,\n    CreateAttachment,\n    CreateJournal,\n    DocumentType,\n    Entry,\n    FetchEntriesOpts,\n    indexDocumentKey,\n    JournalIndex,\n    SET_CURRENT_JOURNAL,\n    SET_ENTRIES,\n    SET_ENTRY,\n    SET_JOURNAL,\n    SET_JOURNALS,\n    SET_LAST_ENTRY,\n    SET_USER_PREFS,\n    UserPrefs,\n} from \"./types\";\n\nexport interface State {\n    fetchingJournals: boolean;\n    fetchingJournalsOpen?: string;\n    fetchingEntries: boolean;\n    currentJournal?: string;\n    entries: { [key: string]: Entry };\n    journals: { [key: string]: JournalIndex };\n    lastEntry: string;\n    userPrefs: UserPrefs;\n}\n\nexport const key: InjectionKey<Store<State>> = Symbol();\n\nconst dbIndexes = [[\"title\"], [\"type\"], [\"category\"]];\n\nexport function useStore() {\n    return baseUseStore(key);\n}\n\nexport const store = createStore<State>({\n    state: {\n        fetchingJournals: false,\n        fetchingEntries: false,\n        currentJournal: undefined,\n        entries: {},\n        lastEntry: \"\",\n        journals: {},\n        userPrefs: {\n            darkMode: false,\n        },\n    },\n    mutations: {\n        [SET_USER_PREFS](state, payload: Partial<UserPrefs>) {\n            const prefs = Object.assign({}, state.userPrefs, payload);\n            state.userPrefs = prefs;\n            Cookies.set(\"userPrefs\", prefs);\n        },\n        [SET_LAST_ENTRY](state, payload: string) {\n            state.lastEntry = payload;\n        },\n        [SET_JOURNALS](state, payload: { [key: string]: JournalIndex }) {\n            state.journals = payload;\n        },\n        [SET_JOURNAL](state, payload: { id: string; journal: JournalIndex }) {\n            state.journals[payload.id] = payload.journal;\n        },\n        [SET_CURRENT_JOURNAL](state, payload?: string) {\n            state.currentJournal = payload;\n        },\n        [SET_ENTRIES](state, payload: { [key: string]: Entry }) {\n            if (state.currentJournal) {\n                state.entries = payload;\n            }\n        },\n        [SET_ENTRY](state, payload: { id: string; entry: Entry }) {\n            state.entries[payload.id] = payload.entry;\n        },\n    },\n    getters: {\n        currentJournal(state) {\n            return state.currentJournal ? state.journals[state.currentJournal] : undefined;\n        },\n        entryAttachment: (state) => (id: string, name: string) => {\n            if (id in state.entries) {\n                if (name in state.entries[id].attachments) {\n                    return b64(\n                        state.entries[id].attachments[name].content_type,\n                        state.entries[id].attachments[name].data as string\n                    );\n                }\n            }\n            return undefined;\n        },\n        entryAttachmentFull: (state) => (id: string, name: string) => {\n            if (id in state.entries) {\n                if (name in state.entries[id].attachments) {\n                    return state.entries[id].attachments[name];\n                }\n            }\n            return undefined;\n        },\n    },\n    actions: {\n        async [API_SET_LAST_ENTRY]({ commit }, payload: string) {\n            Cookies.set(\"lastEntry\", payload);\n            commit(SET_LAST_ENTRY, payload);\n        },\n        async [API_DELETE_ENTRY_ATTACHMENT](\n            { state, dispatch },\n            payload: { id: string; name: string }\n        ) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened\");\n            }\n\n            // Delete attachment from database\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                const e = await db.get<Entry>(payload.id);\n                await db.removeAttachment(payload.id, payload.name, e._rev);\n                await db.close();\n                await dispatch(API_FETCH_ENTRY, { id: payload.id, force: true });\n            } catch (e) {\n                throw new Error(e.message);\n            }\n        },\n        async [API_ADD_ENTRY_ATTACHMENT](\n            { state, dispatch },\n            payload: { id: string; attachment: CreateAttachment }\n        ) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened\");\n            }\n\n            // Add attachment to database\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                const e = await db.get<Entry>(payload.id);\n\n                // Determine attachment content-type\n                let contentType = \"text/plain\";\n                if (payload.attachment.data instanceof File) {\n                    const mType = mime.extension(payload.attachment.data.name) || \"text/plain\";\n                    contentType = payload.attachment.data.type || mType;\n                }\n\n                // Save attachment\n                await db.putAttachment(\n                    payload.id,\n                    payload.attachment.name,\n                    e._rev,\n                    new Blob([payload.attachment.data], { type: contentType }),\n                    contentType\n                );\n                await db.close();\n                await dispatch(API_FETCH_ENTRY, { id: payload.id, force: true });\n            } catch (e) {\n                throw new Error(e.message);\n            }\n        },\n        async [API_DELETE_ENTRY]({ state, dispatch }, payload: string) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened\");\n            }\n\n            // Delete database entry\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                const e = await db.get<Entry>(payload);\n                await db.remove(e._id, e._rev);\n                await db.close();\n            } catch (e) {\n                throw new Error(e.message);\n            }\n\n            await dispatch(API_FETCH_ENTRIES);\n        },\n        async [API_UPDATE_ENTRY]({ state, dispatch }, payload: { id: string; data: Entry }) {\n            if (!this.state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n\n            // Update database entry\n            try {\n                const db = useDB(`aj_${state.currentJournal}`);\n                let e = await db.get<Entry>(payload.id);\n                e = { ...e, ...payload.data };\n\n                // Ensure attachments map isn't included in update\n                if (Object.prototype.hasOwnProperty.call(e, \"attachments\")) {\n                    delete (e as any)[\"attachments\"];\n                }\n\n                await db.put(e);\n                await db.close();\n            } catch (e) {\n                throw new Error(e.message);\n            }\n\n            await dispatch(API_FETCH_ENTRIES);\n        },\n        async [API_FETCH_JOURNALS]({ commit, state, dispatch }) {\n            state.fetchingJournals = true;\n\n            // Fetch and filter all databases native to ajourn\n            const all = (await PouchDB.allDbs()).filter((j) => j.startsWith(\"aj_\"));\n\n            // Fetch index document from each database to aggregate\n            const inds: { [key: string]: JournalIndex } = {};\n            for (let i = 0; i < all.length; i++) {\n                const db = useDB(all[i]);\n                try {\n                    const ind = await db.get<JournalIndex>(indexDocumentKey);\n                    const key = all[i].replace(\"aj_\", \"\");\n                    inds[key] = ind;\n                } catch (e) {\n                    continue;\n                } finally {\n                    await db.close();\n                    state.fetchingJournals = false;\n                }\n            }\n\n            // Update journals in local state\n            commit(SET_JOURNALS, inds);\n\n            // Open journal if cached\n            if (state.fetchingJournalsOpen) {\n                await dispatch(API_OPEN_JOURNAL, state.fetchingJournalsOpen);\n                state.fetchingJournalsOpen = \"\";\n            }\n        },\n        async [API_FETCH_JOURNAL]({ state, commit }, payload: string) {\n            // Check if journal exists in local state\n            if (state.journals[payload]) {\n                return state.journals[payload];\n            }\n\n            const db = new PouchDB(payload, { skip_setup: true });\n            // Load journal from database\n            try {\n                const i = await db.get<JournalIndex>(indexDocumentKey);\n\n                // Add journal to local state\n                // state.journals[payload] = i;\n                commit(SET_JOURNAL, { id: payload, journal: i });\n\n                return i;\n            } catch (e) {\n                throw new Error(\"Journal does not exist\");\n            } finally {\n                await db.close();\n            }\n        },\n        async [API_CLOSE_JOURNAL]({ state, commit }) {\n            commit(SET_CURRENT_JOURNAL, \"\");\n            commit(SET_ENTRIES, {});\n        },\n        async [API_UPDATE_JOURNAL]({ state, commit }, payload: Partial<JournalIndex>) {\n            if (!state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n            const db = useDB(`aj_${state.currentJournal}`);\n            try {\n                let j = await db.get<JournalIndex>(indexDocumentKey);\n                j = { ...j, ...payload };\n\n                await db.put(j);\n                commit(SET_JOURNAL, { id: state.currentJournal, journal: j });\n            } catch (e) {\n                throw new Error(e.message);\n            } finally {\n                await db.close();\n            }\n        },\n        async [API_OPEN_JOURNAL]({ dispatch, commit, state }, payload: string) {\n            if (state.fetchingJournals) {\n                state.fetchingJournalsOpen = payload;\n                return;\n            }\n\n            // Test open journal database - create database indexes\n            const db = useDB(`aj_${payload}`);\n            try {\n                for (let i = 0; i < dbIndexes.length; i++) {\n                    await db.createIndex({ index: { fields: dbIndexes[i] } });\n                }\n            } catch (e) {\n                throw new Error(e.message);\n            } finally {\n                await db.close();\n            }\n\n            // Set current journal\n            commit(SET_CURRENT_JOURNAL, payload);\n\n            // Load top-level state collections\n            await dispatch(API_FETCH_ENTRIES);\n        },\n        async [API_CREATE_ENTRY]({ state, dispatch }, payload: Entry) {\n            if (!state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n\n            // Create entry\n            const db = useDB(`aj_${state.currentJournal}`);\n            const id = shortid.generate();\n            await db.put<Entry>({\n                _id: id,\n                ...payload,\n                type: DocumentType.Entry,\n                fields: [],\n            });\n            await db.close();\n            await dispatch(API_FETCH_ENTRIES);\n            return await dispatch(API_FETCH_ENTRY, { id });\n        },\n        async [API_FETCH_ENTRY](\n            { state, dispatch, commit },\n            payload: { id: string; force: boolean }\n        ) {\n            if (!state.currentJournal && !state.fetchingEntries) {\n                throw new Error(\"Journal not opened.\");\n            }\n\n            // Check if entry exists in local state\n            if (\n                state.entries[payload.id] &&\n                Object.prototype.hasOwnProperty.call(state.entries[payload.id], \"attachments\") &&\n                !payload.force\n            ) {\n                return state.entries[payload.id];\n            }\n\n            // Load journal from database\n            const db = useDB(`aj_${state.currentJournal}`);\n            try {\n                let e = await db.get<Entry>(payload.id, { attachments: true });\n                e = {\n                    ...e,\n                    attachments: e._attachments\n                        ? (e._attachments as {\n                              [key: string]: PouchDB.Core.FullAttachment;\n                          })\n                        : {},\n                    id: e._id,\n                };\n                if (e._attachments) {\n                    delete e._attachments;\n                }\n                commit(SET_ENTRY, { id: e._id, entry: e });\n                return e;\n            } catch (e) {\n                throw new Error(\"Entry does not exist.\");\n            } finally {\n                await db.close();\n            }\n        },\n        async [API_FETCH_ENTRIES](\n            { state, commit },\n            payload: FetchEntriesOpts = { save: true, category: \"\", flush: true }\n        ) {\n            if (!state.currentJournal) {\n                throw new Error(\"Journal not opened.\");\n            }\n            const db = useDB(`aj_${state.currentJournal}`);\n            state.fetchingEntries = true;\n            let data;\n            try {\n                data = await db.find({\n                    selector: {\n                        type: DocumentType.Entry,\n                        category: payload.category\n                            ? { $elemMatch: { $eq: payload.category } }\n                            : undefined,\n                    },\n                    fields: [\n                        \"_id\",\n                        \"title\",\n                        \"avatar\",\n                        \"category\",\n                        \"type\",\n                        \"fields\",\n                        \"_attachments\",\n                    ],\n                });\n                // Map attachments to all entries\n                let data2 = data.docs.map((d: any) => {\n                    return {\n                        id: d._id,\n                        title: d.title,\n                        avatar: d.avatar,\n                        category: d.category,\n                        type: d.type,\n                        fields: d.fields,\n                        attachments: d._attachments ? d._attachments : {},\n                    };\n                });\n                if (payload.save) {\n                    data2 = payload.flush ? data2 : { ...state.entries, ...data2 };\n                    commit(\n                        SET_ENTRIES,\n                        data2.reduce((acc, e) => ({ [e.id]: e, ...acc }), {})\n                    );\n                }\n                return data2;\n            } catch (e) {\n                throw new Error(e.message);\n            } finally {\n                await db.close();\n                state.fetchingEntries = false;\n            }\n        },\n        async [API_CREATE_JOURNAL]({ state }, payload: CreateJournal) {\n            const id = shortid.generate();\n            const db = useDB(`aj_${id}`, false);\n            await db.put({\n                _id: indexDocumentKey,\n                title: payload.title,\n                description: `${payload.title}... What a strange place.`,\n                categories: [],\n            } as JournalIndex);\n            await db.close();\n            await this.dispatch(API_FETCH_JOURNALS);\n            return id;\n        },\n    },\n    modules: {},\n    plugins: [createLogger()],\n});\n","\nimport Cookies from \"js-cookie\";\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { defineComponent, onMounted, watchEffect } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useStore } from \"./store\";\nimport { SET_LAST_ENTRY, SET_USER_PREFS } from \"./store/types\";\n\nexport default defineComponent({\n    name: \"App\",\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n        const $router = useRouter();\n\n        onMounted(async () => {\n            // Load user preferences from cookies\n            const savedPrefs = Cookies.get(\"userPrefs\");\n            if (savedPrefs) {\n                $store.commit(SET_USER_PREFS, JSON.parse(savedPrefs));\n            }\n\n            // Load last viewed entry from cookies\n            const lastEntry = Cookies.get(\"lastEntry\");\n            if (lastEntry) {\n                $store.commit(SET_LAST_ENTRY, lastEntry);\n            }\n        });\n\n        watchEffect(() => {\n            $q.dark.set($store.state.userPrefs.darkMode);\n        });\n\n        return {};\n    },\n});\n","import { render } from \"./App.vue?vue&type=template&id=551a8768\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { App, Plugin } from \"vue\";\n\nconst devtools: Plugin = {\n    install(app: App) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        if (process.env.NODE_ENV === \"development\" && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            window.__VUE_DEVTOOLS_GLOBAL_HOOK__.Vue = app;\n        }\n    },\n};\n\nexport { devtools };\n","import \"./styles/quasar.scss\";\nimport \"@quasar/extras/material-icons/material-icons.css\";\nimport \"@quasar/extras/fontawesome-v5/fontawesome-v5.css\";\n\nimport Dialog from 'quasar/src/plugins/Dialog.js';import Notify from 'quasar/src/plugins/Notify.js';;\n\n// To be used on app.use(Quasar, { ... })\nexport default {\n    config: {\n        notify: {\n            position: \"bottom-right\",\n            timeout: 3000,\n        },\n    },\n    plugins: {\n        Dialog,\n        Notify,\n    },\n};\n","<template>\n    <div class=\"row\">\n        <q-card class=\"col col-md-5\">\n            <q-item class=\"q-my-sm\">\n                <q-item-section avatar v-if=\"entry\">\n                    <q-avatar size=\"64px\" rounded v-if=\"entry.avatar.type == 'icon'\">\n                        <q-icon :name=\"entry.avatar.data\" color=\"primary\"></q-icon>\n                    </q-avatar>\n                    <q-img\n                        v-else\n                        :src=\"entryAvatar\"\n                        :ratio=\"1\"\n                        :style=\"{ width: '64px', height: '64px' }\"\n                        class=\"rounded-borders cursor-pointer\"\n                        loading=\"lazy\"\n                        @click=\"previewAvatar\"\n                    />\n                </q-item-section>\n\n                <q-item-section v-if=\"entry\">\n                    <div class=\"text-h5\" :style=\"{ lineHeight: '1.25em' }\">{{ entry.title }}</div>\n                </q-item-section>\n            </q-item>\n            <q-separator :class=\"{ 'q-mt-md': categories.length }\"></q-separator>\n            <q-card-section class=\"q-pt-sm q-px-none q-pb-none\">\n                <div\n                    class=\"absolute row\"\n                    style=\"\n                        top: 0;\n                        left: 16px;\n                        transform: translateY(-50%);\n                        width: calc(100% - 32px);\n                    \"\n                >\n                    <div class=\"col q-mr-md\">\n                        <div class=\"ellipsis\" style=\"padding: 4px 0\" v-if=\"categories.length\">\n                            <q-badge\n                                ref=\"categoryBadgeRef\"\n                                class=\"text-weight-bold shadow-2 q-mr-sm\"\n                                :style=\"{\n                                    backgroundColor: c.color,\n                                    color: getCategoryTextColor(c.color),\n                                    borderColor: getCategoryBorderColor(c.color),\n                                }\"\n                                v-for=\"c in categories\"\n                                :key=\"c.id\"\n                                style=\"\n                                    padding: 6px 8px;\n                                    font-size: 12px;\n                                    border-width: 1px;\n                                    border-style: solid;\n                                    max-width: 200px;\n                                \"\n                            >\n                                <div class=\"ellipsis\">\n                                    {{ c.name }}\n                                </div>\n                            </q-badge>\n                        </div>\n                    </div>\n\n                    <div class=\"col-auto\">\n                        <q-btn-dropdown\n                            size=\"10px\"\n                            class=\"edit self-end\"\n                            :color=\"darkActive ? 'primary' : 'white'\"\n                            text-color=\"dark\"\n                            split\n                            label=\"Edit\"\n                            @click=\"editEntry\"\n                            style=\"margin: 4px 0\"\n                        >\n                            <q-list dense>\n                                <q-item clickable v-close-popup @click=\"viewAttachments\">\n                                    <q-item-section avatar style=\"min-width: 0\">\n                                        <q-icon name=\"perm_media\" size=\"16px\"></q-icon>\n                                    </q-item-section>\n                                    <q-item-section>\n                                        <q-item-label>Attachments</q-item-label>\n                                    </q-item-section>\n                                </q-item>\n                                <q-separator></q-separator>\n                                <q-item clickable v-close-popup>\n                                    <q-item-section avatar style=\"min-width: 0\">\n                                        <q-icon name=\"info_outline\" size=\"16px\"></q-icon>\n                                    </q-item-section>\n                                    <q-item-section>\n                                        <q-item-label>Info</q-item-label>\n                                    </q-item-section>\n                                </q-item>\n                                <q-item\n                                    clickable\n                                    v-close-popup\n                                    class=\"text-red\"\n                                    @click=\"deleteEntry\"\n                                >\n                                    <q-item-section avatar style=\"min-width: 0\">\n                                        <q-icon name=\"delete_outline\" size=\"16px\"></q-icon>\n                                    </q-item-section>\n                                    <q-item-section>\n                                        <q-item-label>Delete</q-item-label>\n                                    </q-item-section>\n                                </q-item>\n                            </q-list>\n                        </q-btn-dropdown>\n                    </div>\n                </div>\n            </q-card-section>\n            <q-card-section v-if=\"entry && entry.fields.length\">\n                <component\n                    v-for=\"(f, i) in entry.fields\"\n                    :is=\"getComponentFromField(f)\"\n                    :modelValue=\"f\"\n                    :key=\"f ? f.id : i\"\n                    :editView=\"false\"\n                    :entry=\"entry\"\n                    :class=\"{ 'q-mb-sm': i != entry.fields.length - 1 }\"\n                ></component>\n            </q-card-section>\n            <q-card-section v-else class=\"text-subtitle1 text-grey-8\">\n                No fields for this entry.\n            </q-card-section>\n        </q-card>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport * as _ from \"lodash\";\nimport { colors, QBadge, useQuasar } from \"quasar\";\nimport { computed, defineComponent, ref } from \"vue\";\nimport { onBeforeRouteUpdate, useRoute, useRouter } from \"vue-router\";\n\nimport { FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_SET_LAST_ENTRY, Field } from \"@/store/types\";\n\nimport PreviewAttachmentDialog from \"./attachments/PreviewAttachmentDialog.vue\";\nimport ViewAttachmentsDialog from \"./attachments/ViewAttachmentsDialog.vue\";\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EditEntryDialog from \"./EditEntryDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EntryView\",\n    setup: () => {\n        const $store = useStore();\n        const $route = useRoute();\n        const $router = useRouter();\n        const $q = useQuasar();\n\n        const state = {\n            entry: computed(() => $store.state.entries[$route.params.eid as string]),\n        };\n\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            state.entry.value\n                ? state.entry.value.category\n                      .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                      .filter((c) => c !== undefined)\n                : []\n        );\n        const darkActive = computed(() => $q.dark.isActive);\n\n        const categoryBadgeRef = ref<typeof QBadge | null>(null);\n        const getCategoryTextColor = (color: string) => {\n            return colors.brightness(color) < 128 ? \"#fff\" : \"#1d1d1d\";\n        };\n\n        const getCategoryBorderColor = (color: string) => {\n            return colors.lighten(color, -25);\n        };\n\n        const getComponentFromField = (f: Field) => {\n            if (!f || !_.has(f, \"type\") || !(f.type in FieldDefs)) {\n                return ErrorField;\n            }\n            return FieldDefs[f.type].component;\n        };\n\n        const entryAvatar = computed(() => {\n            return $store.getters.entryAttachment(\n                state.entry.value.id,\n                state.entry.value.avatar.data\n            );\n        });\n        const previewAvatar = () => {\n            if (!state.entry.value.attachments[\"avatar\"]) {\n                return;\n            }\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: { ...state.entry.value.attachments[\"avatar\"], name: \"avatar\" },\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n        const editEntry = () => {\n            $q.dialog({\n                component: EditEntryDialog,\n                persistent: true,\n                componentProps: {\n                    entry: _.cloneDeep(state.entry.value),\n                    entryID: $route.params.eid as string,\n                },\n            });\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: state.entry.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, $route.params.eid);\n                    $store.state.lastEntry = \"\";\n                    $router.push(`/j/${$store.state.currentJournal}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const viewAttachments = () => {\n            $q.dialog({\n                component: ViewAttachmentsDialog,\n                componentProps: {\n                    // entry: state.entry.value,\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n\n        onBeforeRouteUpdate(() => {\n            $store.dispatch(API_SET_LAST_ENTRY, state.entry.value.id);\n        });\n\n        return {\n            ...state,\n            editEntry,\n            categories,\n            deleteEntry,\n            entryAvatar,\n            viewAttachments,\n            getComponentFromField,\n            getCategoryTextColor,\n            getCategoryBorderColor,\n            previewAvatar,\n            categoryBadgeRef,\n            darkActive,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.edit ::v-deep(.q-btn-dropdown__arrow-container) {\n    border-left: 1px solid rgba(0, 0, 0, 0.2);\n}\n\n.edit ::v-deep(.q-btn) {\n    font-weight: bold;\n}\n</style>\n","<template>\n    <template v-if=\"editView\">\n        <div class=\"row items-center\">\n            <div class=\"text-body text-grey\">{{ linkedAttachments.length }} selected</div>\n            <q-space></q-space>\n            <q-btn\n                @click=\"selectAttachments\"\n                label=\"Select\"\n                icon=\"upload_file\"\n                class=\"select-att\"\n                flat\n                color=\"primary\"\n            ></q-btn>\n        </div>\n        <q-list bordered separator class=\"q-mt-sm\" dense>\n            <q-item v-for=\"att in linkedAttachments\" :key=\"att.name\">\n                <q-item-section avatar class=\"q-pr-none\" style=\"min-width: 36px\">\n                    <q-icon :name=\"getAttachmentIcon(att.content_type)\" color=\"grey-8\"></q-icon>\n                </q-item-section>\n                <q-item-section class=\"text-weight-bold ellipsis\" style=\"line-height: 1.3em\">\n                    {{ att.name }}\n                    <q-tooltip>{{ att.name }}</q-tooltip>\n                </q-item-section>\n                <q-item-section side>\n                    <q-btn flat dense round icon=\"close\" @click=\"removeAttachment(att.name)\">\n                    </q-btn>\n                </q-item-section>\n            </q-item>\n        </q-list>\n    </template>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div\n            class=\"shadow-1 rounded-borders row q-gutter-sm q-mb-md\"\n            style=\"margin-left: 0; margin-top: 0; padding-bottom: 8px\"\n            v-if=\"linkedAttachments.length\"\n        >\n            <attachments-field-icon\n                v-for=\"att in linkedAttachments\"\n                :key=\"att.name\"\n                :attachment=\"att\"\n                :entryId=\"entry.id\"\n                @click=\"previewAttachment(att)\"\n            ></attachments-field-icon>\n        </div>\n        <div class=\"text-subtitle2 text-grey\" v-else>No attachments for this field.</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport SelectAttachmentsDialog from \"@/components/attachments/SelectAttachmentsDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { AttachmentsField, Entry } from \"@/store/types\";\nimport { getAttachmentIcon, renderText } from \"@/utils\";\n\nimport PreviewAttachmentDialog from \"../attachments/PreviewAttachmentDialog.vue\";\nimport AttachmentsFieldIcon from \"./AttachmentsFieldIcon.vue\";\n\nexport default defineComponent({\n    components: { AttachmentsFieldIcon },\n    name: \"AttachmentsField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<AttachmentsField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const currentSlide = ref(\"\");\n\n        // Computed\n        const liveAttachments = computed(() =>\n            $store.state.entries[props.entry.id]\n                ? $store.state.entries[props.entry.id].attachments\n                : []\n        );\n        const linkedAttachments = computed(() =>\n            Object.entries(liveAttachments.value)\n                .filter((kv) => props.modelValue.attachments.includes(kv[0]))\n                .map((kv) => {\n                    return {\n                        name: kv[0],\n                        ...kv[1],\n                    };\n                })\n        );\n\n        // Functions\n        const updateAttachments = (attachments: string[]) => {\n            attachments = attachments.filter((att) => att in liveAttachments.value);\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                attachments,\n            } as AttachmentsField);\n        };\n\n        const removeAttachment = (key: string) => {\n            if (!props.modelValue.attachments.includes(key)) {\n                return;\n            }\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                attachments: props.modelValue.attachments.filter((k2) => k2 !== key),\n            } as AttachmentsField);\n        };\n\n        const selectAttachments = () => {\n            $q.dialog({\n                component: SelectAttachmentsDialog,\n                componentProps: {\n                    entryId: props.entry.id,\n                },\n            }).onOk((name: string) => {\n                if (!(name in liveAttachments.value)) return;\n                if (props.modelValue.attachments.includes(name)) return;\n                updateAttachments([...props.modelValue.attachments, name]);\n            });\n        };\n        const previewAttachment = (att: PouchDB.Core.FullAttachment & { name: string }) => {\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: att,\n                    entryId: props.entry.id,\n                },\n            });\n        };\n\n        return {\n            selectAttachments,\n            linkedAttachments,\n            getAttachmentIcon,\n            removeAttachment,\n            currentSlide,\n            liveAttachments,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n            previewAttachment,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.select-att ::v-deep .q-icon {\n    margin-right: 6px;\n}\n</style>\n","<template>\n    <!-- notice dialogRef here -->\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">\n                    Select attachment\n                    <span v-if=\"selected.length\">({{ selected.length }})</span>\n                </div>\n                <q-space></q-space>\n                <q-btn icon=\"add\" color=\"primary\" flat round dense @click=\"createAttachment\">\n                    <q-tooltip>Create a new attachment</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <q-list bordered separator dense style=\"max-height: 150px; overflow: auto\">\n                <q-item\n                    clickable\n                    v-ripple\n                    v-for=\"(att, attName) in filteredAttachments\"\n                    :key=\"attName\"\n                    @click=\"setSelected(attName)\"\n                    :active=\"selected.includes(attName)\"\n                >\n                    <q-item-section avatar class=\"q-pr-none\" style=\"min-width: 0; width: 28px\">\n                        <q-icon :name=\"getAttachmentIcon(att.content_type)\" size=\"20px\"></q-icon>\n                    </q-item-section>\n                    <q-item-section class=\"ellipsis\">\n                        {{ attName }}\n                    </q-item-section>\n                    <q-item-section side>\n                        <q-badge outline color=\"grey\">\n                            {{ getExtension(att.content_type) || \"?\" }}\n                        </q-badge>\n                    </q-item-section>\n                </q-item>\n            </q-list>\n            <q-card-actions align=\"right\">\n                <div class=\"text-body q-pl-md text-grey\">\n                    {{ filteredAttachmentsLen }} attachment{{\n                        filteredAttachmentsLen === 1 ? \"\" : \"s\"\n                    }}\n                </div>\n                <q-space></q-space>\n                <q-btn\n                    color=\"primary\"\n                    flat\n                    :disable=\"!selected.length\"\n                    label=\"Select\"\n                    @click=\"onOKClick\"\n                />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, ref } from \"vue\";\n\nimport CreateAttachmentDialog from \"@/components/attachments/CreateAttachmentDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { API_ADD_ENTRY_ATTACHMENT, CreateAttachment } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nexport default defineComponent({\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const selected = ref<string[]>([]);\n\n        // Computed\n        const filteredAttachments = computed(() =>\n            $store.state.entries[props.entryId]\n                ? $store.state.entries[props.entryId].attachments\n                : []\n        );\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (selected.value.includes(key)) {\n                selected.value = selected.value.filter((s) => s !== key);\n            } else {\n                if (props.multiple) {\n                    selected.value = [...selected.value, key];\n                } else {\n                    selected.value = [key];\n                }\n            }\n        };\n\n        const createAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: filteredAttachments,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            getAttachmentIcon,\n            getExtension: mime.extension,\n            selected,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            setSelected,\n            createAttachment,\n\n            onOKClick() {\n                if (selected.value) {\n                    onDialogOK(props.multiple ? selected.value : selected.value[0]);\n                }\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" :persistent=\"!!uploadData\">\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section class=\"row align-items-center q-pb-sm\">\n                <div class=\"text-h6 ellipsis\" v-if=\"replace\">\n                    Replace attachment \"{{ replace }}\"\n                </div>\n                <div class=\"text-h6 ellipsis\" v-else>Create attachment</div>\n            </q-card-section>\n            <q-tabs v-model=\"currentTab\" dense class=\"text-primary\">\n                <q-tab name=\"upload\" label=\"Upload\"></q-tab>\n                <q-tab name=\"raw\" label=\"Raw\"></q-tab>\n            </q-tabs>\n            <q-separator></q-separator>\n            <q-tab-panels v-model=\"currentTab\" animated>\n                <q-tab-panel name=\"upload\">\n                    <q-file\n                        outlined\n                        label=\"Upload a file...\"\n                        :modelValue=\"uploadData\"\n                        @update:modelValue=\"updateUploadData($event)\"\n                        :hint=\"'Size: ' + uploadDataSize\"\n                        debounce=\"600\"\n                    >\n                        <template v-slot:prepend>\n                            <q-icon name=\"attach_file\" />\n                        </template>\n                    </q-file>\n                </q-tab-panel>\n                <q-tab-panel name=\"raw\">\n                    <q-input\n                        type=\"textarea\"\n                        outlined\n                        v-model=\"rawData\"\n                        :hint=\"'Size: ' + rawDataSize\"\n                        debounce=\"600\"\n                    ></q-input>\n                </q-tab-panel>\n            </q-tab-panels>\n            <q-separator></q-separator>\n            <q-input\n                label=\"Name\"\n                class=\"q-pt-md q-px-md q-pb-md\"\n                v-model=\"attachmentName\"\n                outlined\n                dense\n                :rules=\"[\n                    (v) => /^\\w+$/.test(v) || 'Please use only letters, numbers, and underscores',\n                    (v) =>\n                        v.length <= AttachmentNameLength ||\n                        'Name will be capped to ' + AttachmentNameLength + ' characters',\n                ]\"\n            ></q-input>\n\n            <q-card-actions align=\"right\">\n                <q-btn\n                    flat\n                    color=\"primary\"\n                    :label=\"replace ? 'Replace' : 'Create'\"\n                    :disable=\"!attachmentName || !/^\\w+$/.test(attachmentName)\"\n                    @click=\"onOKClick\"\n                />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { format, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport CropAttachmentDialog from \"@/components/attachments/CropAttachmentDialog.vue\";\nimport { AttachmentNameLength } from \"@/constants\";\nimport { CreateAttachment } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateAttachmentsDialog\",\n    props: {\n        attachments: {\n            type: Object as PropType<{ [key: string]: PouchDB.Core.FullAttachment }>,\n            required: true,\n        },\n        replace: {\n            type: String,\n        },\n        replaceData: {\n            type: String,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props, { emit }) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n\n        // Refs\n        const currentTab = ref(props.replaceData ? \"raw\" : \"upload\");\n        const uploadData = ref<File | undefined>(undefined);\n        const rawData = ref(props.replaceData ? props.replaceData : \"\");\n        const attachmentName = ref(props.replace ? props.replace : \"\");\n\n        // Computed\n        const rawDataSize = computed(() => format.humanStorageSize(new Blob([rawData.value]).size));\n        const uploadDataSize = computed(() =>\n            format.humanStorageSize(uploadData.value ? uploadData.value.size : 0)\n        );\n\n        // Functions\n        const submit = () => {\n            if (attachmentName.value.length >= AttachmentNameLength) {\n                attachmentName.value = attachmentName.value.slice(0, AttachmentNameLength);\n            }\n            try {\n                switch (currentTab.value) {\n                    case \"upload\":\n                        if (!uploadData.value) {\n                            throw new Error(\"File never uploaded\");\n                        }\n                        onDialogOK({\n                            data: uploadData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                    case \"raw\":\n                        onDialogOK({\n                            data: rawData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n        const updateUploadData = (f: File | undefined) => {\n            if (f && f.type.startsWith(\"image\")) {\n                $q.dialog({\n                    component: CropAttachmentDialog,\n                    componentProps: {\n                        image: f,\n                        imageType: f.type,\n                    },\n                }).onOk((b: Blob) => {\n                    const f2 = new File([b], f.name, { type: f.type });\n                    uploadData.value = f2;\n                });\n            } else {\n                uploadData.value = f;\n            }\n        };\n        const presubmit = () => {\n            try {\n                let cancel = false;\n                if (!attachmentName.value) {\n                    throw new Error(\"Attachment name empty\");\n                }\n                if (!/^\\w+$/.test(attachmentName.value)) {\n                    throw new Error(\"Invalid attachment name\");\n                }\n                // Check if attachment already exists\n                if (\n                    attachmentName.value in props.attachments &&\n                    !(props.replace === attachmentName.value)\n                ) {\n                    $q.dialog({\n                        title: \"Attachment already exists\",\n                        message: `Attachment \"${attachmentName.value}\" already exists in this entry. Would you like to replace it?`,\n                        cancel: true,\n                        ok: \"replace\",\n                        persistent: true,\n                    })\n                        .onOk(() => {\n                            submit();\n                        })\n                        .onCancel(() => {\n                            cancel = true;\n                        });\n                } else {\n                    submit();\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            currentTab,\n            rawData,\n            uploadData,\n            rawDataSize,\n            uploadDataSize,\n            attachmentName,\n            AttachmentNameLength,\n            updateUploadData,\n\n            onOKClick() {\n                presubmit();\n                // onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <preview\n                :image=\"cropResults?.image\"\n                :coordinates=\"cropResults?.coordinates\"\n                v-if=\"cropValue === 'square'\"\n                ref=\"previewRef\"\n                :width=\"64\"\n                :height=\"64\"\n                class=\"preview\"\n                style=\"position: absolute; top: 12px; left: 12px; z-index: 300; border-radius: 4px;\"\n            ></preview>\n            <cropper\n                class=\"cropper\"\n                :debounce=\"false\"\n                ref=\"cropperRef\"\n                :src=\"imgUrl\"\n                :stencil-props=\"cropStencilOpts\"\n                @change=\"onCropChange\"\n            ></cropper>\n            <q-card-actions align=\"between\">\n                <div class=\"row items-center ellipsis\">\n                    <q-select\n                        label=\"Crop\"\n                        :options=\"cropOptions\"\n                        option-label=\"label\"\n                        class=\"q-mr-md\"\n                        map-options\n                        outlined\n                        dense\n                        option-value=\"value\"\n                        v-model=\"cropValue\"\n                        emit-value\n                    >\n                        <q-tooltip v-if=\"cropValue\" anchor=\"top middle\">{{ cropHelp }}</q-tooltip>\n                    </q-select>\n                </div>\n                <div>\n                    <q-btn color=\"primary\" flat label=\"Save changes\" @click=\"submit\" />\n                    <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n                </div>\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { computed, defineComponent, onMounted, onUnmounted, ref } from \"vue\";\nimport { Cropper, Preview } from \"vue-advanced-cropper\";\n\nexport default defineComponent({\n    name: \"CropAttachmentDialog\",\n    props: {\n        image: {\n            type: Blob,\n            required: true,\n        },\n        imageType: {\n            type: String,\n            required: true,\n        },\n    },\n    components: { Cropper, Preview },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const cropOptions = ref([\n            {\n                label: \"Free\",\n                value: \"free\",\n                help: \"Free is unconstrained, use any size.\",\n            },\n            {\n                label: \"Square\",\n                value: \"square\",\n                help: \"Square is best for avatars.\",\n            },\n        ]);\n\n        // Refs\n        const imgUrl = ref<string>(\"\");\n        const cropValue = ref<string | undefined>(\"free\");\n        const cropperRef = ref<typeof Cropper | undefined>(undefined);\n        const previewRef = ref<typeof Preview | undefined>(undefined);\n        const cropResults = ref<{ image: any; coordinates: any } | undefined>(undefined);\n\n        // Computed\n        const cropHelp = computed(\n            () => cropOptions.value.find((c) => c.value === cropValue.value)?.help\n        );\n        const cropStencilOpts = computed(() => {\n            const opts: Record<string, any> = {\n                movable: true,\n                scalable: true,\n            };\n            if (cropValue.value && cropValue.value == \"square\") {\n                opts.aspectRatio = 1;\n            }\n            return opts;\n        });\n\n        // Functions\n        const onCropChange = (changeEv: any) => {\n            cropResults.value = changeEv;\n        };\n        const submit = () => {\n            if (cropperRef.value) {\n                const { canvas } = cropperRef.value.getResult();\n                canvas.toBlob((b: Blob) => {\n                    onDialogOK(b);\n                }, props.imageType);\n            }\n        };\n\n        // Effects\n        onMounted(() => {\n            // Create image object URL\n            imgUrl.value = URL.createObjectURL(props.image);\n        });\n        onUnmounted(() => {\n            // Destroy image object URL\n            if (imgUrl.value) {\n                URL.revokeObjectURL(imgUrl.value);\n            }\n        });\n\n        return {\n            dialogRef,\n            onDialogHide,\n            imgUrl,\n            cropValue,\n            cropHelp,\n            cropOptions,\n            cropStencilOpts,\n            cropperRef,\n            cropResults,\n            previewRef,\n            onCropChange,\n            submit,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n\n<style scoped lang=\"scss\">\n.preview {\n    box-shadow: 0 1px 5px rgb(0 0 0 / 20%), 0 2px 2px rgb(0 0 0 / 14%),\n        0 3px 1px -2px rgb(0 0 0 / 12%) !important;\n}\n</style>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { computed, defineComponent, onMounted, onUnmounted, ref } from \"vue\";\nimport { Cropper, Preview } from \"vue-advanced-cropper\";\n\nexport default defineComponent({\n    name: \"CropAttachmentDialog\",\n    props: {\n        image: {\n            type: Blob,\n            required: true,\n        },\n        imageType: {\n            type: String,\n            required: true,\n        },\n    },\n    components: { Cropper, Preview },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const cropOptions = ref([\n            {\n                label: \"Free\",\n                value: \"free\",\n                help: \"Free is unconstrained, use any size.\",\n            },\n            {\n                label: \"Square\",\n                value: \"square\",\n                help: \"Square is best for avatars.\",\n            },\n        ]);\n\n        // Refs\n        const imgUrl = ref<string>(\"\");\n        const cropValue = ref<string | undefined>(\"free\");\n        const cropperRef = ref<typeof Cropper | undefined>(undefined);\n        const previewRef = ref<typeof Preview | undefined>(undefined);\n        const cropResults = ref<{ image: any; coordinates: any } | undefined>(undefined);\n\n        // Computed\n        const cropHelp = computed(\n            () => cropOptions.value.find((c) => c.value === cropValue.value)?.help\n        );\n        const cropStencilOpts = computed(() => {\n            const opts: Record<string, any> = {\n                movable: true,\n                scalable: true,\n            };\n            if (cropValue.value && cropValue.value == \"square\") {\n                opts.aspectRatio = 1;\n            }\n            return opts;\n        });\n\n        // Functions\n        const onCropChange = (changeEv: any) => {\n            cropResults.value = changeEv;\n        };\n        const submit = () => {\n            if (cropperRef.value) {\n                const { canvas } = cropperRef.value.getResult();\n                canvas.toBlob((b: Blob) => {\n                    onDialogOK(b);\n                }, props.imageType);\n            }\n        };\n\n        // Effects\n        onMounted(() => {\n            // Create image object URL\n            imgUrl.value = URL.createObjectURL(props.image);\n        });\n        onUnmounted(() => {\n            // Destroy image object URL\n            if (imgUrl.value) {\n                URL.revokeObjectURL(imgUrl.value);\n            }\n        });\n\n        return {\n            dialogRef,\n            onDialogHide,\n            imgUrl,\n            cropValue,\n            cropHelp,\n            cropOptions,\n            cropStencilOpts,\n            cropperRef,\n            cropResults,\n            previewRef,\n            onCropChange,\n            submit,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CropAttachmentDialog.vue?vue&type=template&id=3bf8cc3c&scoped=true\"\nimport script from \"./CropAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CropAttachmentDialog.vue?vue&type=script&lang=ts\"\n\nimport \"./CropAttachmentDialog.vue?vue&type=style&index=0&id=3bf8cc3c&scoped=true&lang=scss\"\nscript.render = render\nscript.__scopeId = \"data-v-3bf8cc3c\"\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardActions,QSelect,QTooltip,QBtn});\n","\nimport format from 'quasar/src/utils/format.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport CropAttachmentDialog from \"@/components/attachments/CropAttachmentDialog.vue\";\nimport { AttachmentNameLength } from \"@/constants\";\nimport { CreateAttachment } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateAttachmentsDialog\",\n    props: {\n        attachments: {\n            type: Object as PropType<{ [key: string]: PouchDB.Core.FullAttachment }>,\n            required: true,\n        },\n        replace: {\n            type: String,\n        },\n        replaceData: {\n            type: String,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props, { emit }) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n\n        // Refs\n        const currentTab = ref(props.replaceData ? \"raw\" : \"upload\");\n        const uploadData = ref<File | undefined>(undefined);\n        const rawData = ref(props.replaceData ? props.replaceData : \"\");\n        const attachmentName = ref(props.replace ? props.replace : \"\");\n\n        // Computed\n        const rawDataSize = computed(() => format.humanStorageSize(new Blob([rawData.value]).size));\n        const uploadDataSize = computed(() =>\n            format.humanStorageSize(uploadData.value ? uploadData.value.size : 0)\n        );\n\n        // Functions\n        const submit = () => {\n            if (attachmentName.value.length >= AttachmentNameLength) {\n                attachmentName.value = attachmentName.value.slice(0, AttachmentNameLength);\n            }\n            try {\n                switch (currentTab.value) {\n                    case \"upload\":\n                        if (!uploadData.value) {\n                            throw new Error(\"File never uploaded\");\n                        }\n                        onDialogOK({\n                            data: uploadData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                    case \"raw\":\n                        onDialogOK({\n                            data: rawData.value,\n                            name: attachmentName.value,\n                        } as CreateAttachment);\n                        break;\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n        const updateUploadData = (f: File | undefined) => {\n            if (f && f.type.startsWith(\"image\")) {\n                $q.dialog({\n                    component: CropAttachmentDialog,\n                    componentProps: {\n                        image: f,\n                        imageType: f.type,\n                    },\n                }).onOk((b: Blob) => {\n                    const f2 = new File([b], f.name, { type: f.type });\n                    uploadData.value = f2;\n                });\n            } else {\n                uploadData.value = f;\n            }\n        };\n        const presubmit = () => {\n            try {\n                let cancel = false;\n                if (!attachmentName.value) {\n                    throw new Error(\"Attachment name empty\");\n                }\n                if (!/^\\w+$/.test(attachmentName.value)) {\n                    throw new Error(\"Invalid attachment name\");\n                }\n                // Check if attachment already exists\n                if (\n                    attachmentName.value in props.attachments &&\n                    !(props.replace === attachmentName.value)\n                ) {\n                    $q.dialog({\n                        title: \"Attachment already exists\",\n                        message: `Attachment \"${attachmentName.value}\" already exists in this entry. Would you like to replace it?`,\n                        cancel: true,\n                        ok: \"replace\",\n                        persistent: true,\n                    })\n                        .onOk(() => {\n                            submit();\n                        })\n                        .onCancel(() => {\n                            cancel = true;\n                        });\n                } else {\n                    submit();\n                }\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            currentTab,\n            rawData,\n            uploadData,\n            rawDataSize,\n            uploadDataSize,\n            attachmentName,\n            AttachmentNameLength,\n            updateUploadData,\n\n            onOKClick() {\n                presubmit();\n                // onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CreateAttachmentDialog.vue?vue&type=template&id=7392be32\"\nimport script from \"./CreateAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateAttachmentDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QTabs from 'quasar/src/components/tabs/QTabs.js';\nimport QTab from 'quasar/src/components/tabs/QTab.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QTabPanels from 'quasar/src/components/tab-panels/QTabPanels.js';\nimport QTabPanel from 'quasar/src/components/tab-panels/QTabPanel.js';\nimport QFile from 'quasar/src/components/file/QFile.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QTabs,QTab,QSeparator,QTabPanels,QTabPanel,QFile,QIcon,QInput,QCardActions,QBtn});\n","\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, ref } from \"vue\";\n\nimport CreateAttachmentDialog from \"@/components/attachments/CreateAttachmentDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { API_ADD_ENTRY_ATTACHMENT, CreateAttachment } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nexport default defineComponent({\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const selected = ref<string[]>([]);\n\n        // Computed\n        const filteredAttachments = computed(() =>\n            $store.state.entries[props.entryId]\n                ? $store.state.entries[props.entryId].attachments\n                : []\n        );\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (selected.value.includes(key)) {\n                selected.value = selected.value.filter((s) => s !== key);\n            } else {\n                if (props.multiple) {\n                    selected.value = [...selected.value, key];\n                } else {\n                    selected.value = [key];\n                }\n            }\n        };\n\n        const createAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: filteredAttachments,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            getAttachmentIcon,\n            getExtension: mime.extension,\n            selected,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            setSelected,\n            createAttachment,\n\n            onOKClick() {\n                if (selected.value) {\n                    onDialogOK(props.multiple ? selected.value : selected.value[0]);\n                }\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./SelectAttachmentsDialog.vue?vue&type=template&id=0cd9202d\"\nimport script from \"./SelectAttachmentsDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectAttachmentsDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';import Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QList,QItem,QItemSection,QIcon,QBadge,QCardActions});qInstall(script, 'directives', {Ripple});\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <!-- TODO: refactor so title only hides when content type is image -->\n        <q-img\n            v-if=\"attachment.content_type.startsWith('image')\"\n            :src=\"entryAttachment(entryId, attachment.name)\"\n        >\n            <div class=\"absolute-bottom-right text-subtitle2 text-weight-bold\">\n                {{ attachment.name }}\n            </div>\n        </q-img>\n        <q-card v-else-if=\"attachment.content_type.startsWith('text')\">\n            <q-card-section class=\"text-h6 q-pb-none ellipsis\">\n                {{ attachment.name }}\n            </q-card-section>\n            <q-card-section>\n                {{ renderText(attachment.data) }}\n            </q-card-section>\n        </q-card>\n        <q-card class=\"q-dialog-plugin\" v-else-if=\"attachment.content_type.startsWith('audio')\">\n            <q-card-section class=\"text-h6 ellipsis\">\n                {{ attachment.name }}\n            </q-card-section>\n            <audio controls :src=\"entryAttachment(entryId, attachment.name)\"></audio>\n        </q-card>\n        <q-card class=\"q-dialog-plugin\" v-else-if=\"attachment.content_type.startsWith('video')\">\n            <q-card-section class=\"text-h6 ellipsis\">\n                {{ attachment.name }}\n            </q-card-section>\n            <video\n                controls\n                class=\"q-dialog-plugin\"\n                :src=\"entryAttachment(entryId, attachment.name)\"\n                style=\"max-width: 600px\"\n            ></video>\n        </q-card>\n        <q-card class=\"q-dialog-plugin\" v-else>\n            <q-card-section class=\"text-h6 ellipsis\">\n                {{ attachment.name }}\n                <div class=\"text-subtitle2\">{{ attachment.content_type }}</div>\n            </q-card-section>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"PreviewAttachmentDialog\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            onCancelClick: onDialogCancel,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"PreviewAttachmentDialog\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            onCancelClick: onDialogCancel,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n","import { render } from \"./PreviewAttachmentDialog.vue?vue&type=template&id=3c98c7c2\"\nimport script from \"./PreviewAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./PreviewAttachmentDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QImg,QCard,QCardSection});\n","<template>\n    <q-img\n        v-if=\"attachment.content_type.startsWith('image')\"\n        class=\"bg-grey-3 rounded-borders cursor-pointer\"\n        style=\"width: 64px; height: 64px\"\n        :src=\"entryAttachment(entryId, attachment.name)\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-img>\n    <div\n        v-else-if=\"attachment.content_type.startsWith('text')\"\n        class=\"bg-grey-3 rounded-borders text-caption q-pa-xs ellipsis-3-lines cursor-pointer\"\n        style=\"\n            width: 64px;\n            height: 64px;\n            line-height: 1.3em;\n            font-size: 10px;\n            word-wrap: break-word;\n        \"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n        {{ renderText(attachment.data) }}\n    </div>\n    <q-avatar\n        v-else-if=\"attachment.content_type.startsWith('audio')\"\n        rounded\n        color=\"blue-grey-3\"\n        class=\"cursor-pointer\"\n        icon=\"headset\"\n        text-color=\"dark\"\n        style=\"width: 64px; height: 64px\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-avatar>\n    <q-avatar\n        v-else-if=\"attachment.content_type.startsWith('video')\"\n        rounded\n        color=\"red-3\"\n        class=\"cursor-pointer\"\n        icon=\"play_circle_outline\"\n        text-color=\"dark\"\n        style=\"width: 64px; height: 64px\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-avatar>\n    <q-avatar\n        v-else\n        rounded\n        color=\"grey-3\"\n        class=\"cursor-pointer\"\n        icon=\"insert_drive_file\"\n        text-color=\"dark\"\n        style=\"width: 64px; height: 64px\"\n    >\n        <q-tooltip\n            :target=\"true\"\n            anchor=\"center middle\"\n            self=\"bottom middle\"\n            class=\"text-weight-bold bg-black\"\n            transition-show=\"scale\"\n            transition-hide=\"scale\"\n        >\n            {{ attachment.name }}\n        </q-tooltip>\n    </q-avatar>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"AttachmentsFieldIcon\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        return {\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { renderText } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"AttachmentsFieldIcon\",\n    props: {\n        attachment: {\n            type: Object as PropType<PouchDB.Core.FullAttachment & { name: string }>,\n            required: true,\n        },\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        return {\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n        };\n    },\n});\n","import { render } from \"./AttachmentsFieldIcon.vue?vue&type=template&id=2dae5618\"\nimport script from \"./AttachmentsFieldIcon.vue?vue&type=script&lang=ts\"\nexport * from \"./AttachmentsFieldIcon.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QImg,QTooltip,QAvatar});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport SelectAttachmentsDialog from \"@/components/attachments/SelectAttachmentsDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { AttachmentsField, Entry } from \"@/store/types\";\nimport { getAttachmentIcon, renderText } from \"@/utils\";\n\nimport PreviewAttachmentDialog from \"../attachments/PreviewAttachmentDialog.vue\";\nimport AttachmentsFieldIcon from \"./AttachmentsFieldIcon.vue\";\n\nexport default defineComponent({\n    components: { AttachmentsFieldIcon },\n    name: \"AttachmentsField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<AttachmentsField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const currentSlide = ref(\"\");\n\n        // Computed\n        const liveAttachments = computed(() =>\n            $store.state.entries[props.entry.id]\n                ? $store.state.entries[props.entry.id].attachments\n                : []\n        );\n        const linkedAttachments = computed(() =>\n            Object.entries(liveAttachments.value)\n                .filter((kv) => props.modelValue.attachments.includes(kv[0]))\n                .map((kv) => {\n                    return {\n                        name: kv[0],\n                        ...kv[1],\n                    };\n                })\n        );\n\n        // Functions\n        const updateAttachments = (attachments: string[]) => {\n            attachments = attachments.filter((att) => att in liveAttachments.value);\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                attachments,\n            } as AttachmentsField);\n        };\n\n        const removeAttachment = (key: string) => {\n            if (!props.modelValue.attachments.includes(key)) {\n                return;\n            }\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                attachments: props.modelValue.attachments.filter((k2) => k2 !== key),\n            } as AttachmentsField);\n        };\n\n        const selectAttachments = () => {\n            $q.dialog({\n                component: SelectAttachmentsDialog,\n                componentProps: {\n                    entryId: props.entry.id,\n                },\n            }).onOk((name: string) => {\n                if (!(name in liveAttachments.value)) return;\n                if (props.modelValue.attachments.includes(name)) return;\n                updateAttachments([...props.modelValue.attachments, name]);\n            });\n        };\n        const previewAttachment = (att: PouchDB.Core.FullAttachment & { name: string }) => {\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: att,\n                    entryId: props.entry.id,\n                },\n            });\n        };\n\n        return {\n            selectAttachments,\n            linkedAttachments,\n            getAttachmentIcon,\n            removeAttachment,\n            currentSlide,\n            liveAttachments,\n            entryAttachment: $store.getters.entryAttachment,\n            renderText,\n            previewAttachment,\n        };\n    },\n});\n","import { render } from \"./AttachmentsField.vue?vue&type=template&id=6f505ae6&scoped=true\"\nimport script from \"./AttachmentsField.vue?vue&type=script&lang=ts\"\nexport * from \"./AttachmentsField.vue?vue&type=script&lang=ts\"\n\nimport \"./AttachmentsField.vue?vue&type=style&index=0&id=6f505ae6&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-6f505ae6\"\n\nexport default script\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QSpace,QBtn,QList,QItem,QItemSection,QIcon,QTooltip});\n","<template>\n    <div v-if=\"editView\">\n        <q-editor\n            dense\n            :modelValue=\"modelValue.content\"\n            @update:modelValue=\"updateValue\"\n            class=\"q-mt-md\"\n            max-height=\"200px\"\n            :toolbar=\"[\n                ['bold', 'italic', 'underline', 'strike', 'subscript', 'superscript'],\n                ['undo', 'redo'],\n                ['removeFormat'],\n            ]\"\n        ></q-editor>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div\n            v-if=\"modelValue.content\"\n            class=\"text-body2\"\n            v-html=\"modelValue.content\"\n            style=\"word-wrap: break-word\"\n        ></div>\n        <div class=\"text-subtitle2 text-grey\" v-else>No content for this field.</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { DescriptionField, Entry, Field, FieldType } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DescriptionField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as DescriptionField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { DescriptionField, Entry, Field, FieldType } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DescriptionField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as DescriptionField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./DescriptionField.vue?vue&type=template&id=0699dcc6\"\nimport script from \"./DescriptionField.vue?vue&type=script&lang=ts\"\nexport * from \"./DescriptionField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QEditor from 'quasar/src/components/editor/QEditor.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QEditor});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"URL\"\n            :modelValue=\"modelValue.url\"\n            @update:modelValue=\"updateUrl\"\n            debounce=\"600\"\n            :loading=\"embedLoading\"\n            outlined\n            dense\n        ></q-input>\n        <div class=\"text-body text-grey-8 q-pt-md row items-center\">\n            <div class=\"text-red\" v-if=\"embedService == EmbedFieldService.Invalid\">\n                <q-icon name=\"clear\" class=\"q-pr-sm\"></q-icon>\n                Please enter a valid URL\n            </div>\n            <template v-else-if=\"embedService != EmbedFieldService.Unknown\">\n                <q-icon name=\"checkmark\" class=\"q-pr-sm\"></q-icon>\n                Will use {{ EmbedFieldService[embedService] }} style.\n            </template>\n            <template v-else>\n                <q-icon name=\"help_outline\" class=\"q-pr-sm\"></q-icon>\n                Unknown, will use generic style.\n            </template>\n        </div>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <q-video\n            v-if=\"embedServiceC == EmbedFieldService.YouTube\"\n            :src=\"modelValue.url.replace('watch?v=', 'embed/')\"\n        ></q-video>\n        <iframe\n            v-else-if=\"embedServiceC == EmbedFieldService.Soundcloud\"\n            :src=\"\n                'https://soundcloud.com/oembed?format=js&url=' +\n                    encodeURIComponent(modelValue.url) +\n                    '&iframe=true'\n            \"\n        ></iframe>\n        <q-card\n            v-else-if=\"embedServiceC == EmbedFieldService.Unknown\"\n            class=\"q-mt-sm\"\n            flat\n            bordered\n        >\n            <q-item>\n                <q-item-section avatar class=\"q-pr-none\" style=\"min-width: 48px\">\n                    <q-icon name=\"link\"></q-icon>\n                </q-item-section>\n                <q-item-section class=\"text-subtitle2\">\n                    <a :href=\"modelValue.url\">{{ modelValue.url }}</a>\n                </q-item-section>\n            </q-item>\n        </q-card>\n        <div class=\"text-subtitle2 text-grey\" v-else-if=\"!modelValue.url\">\n            No URL for this field.\n        </div>\n        <div v-else class=\"text-negative text-subtitle2\">Error parsing URL!</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { EmbedField, EmbedFieldService, Entry, FieldType } from \"@/store/types\";\nimport { getEmbedService } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"EmbedField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<EmbedField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n\n        // Refs\n        const embedLoading = ref(false);\n        const embedService = ref(EmbedFieldService.Unknown);\n\n        // Computed\n        const embedServiceC = computed(() => getEmbedService(props.modelValue.url));\n\n        // Functions\n        const timeout = async (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n        const updateUrl = (url: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, url } as EmbedField);\n        };\n\n        // Effects\n        watchEffect(async () => {\n            if (!props.modelValue.url) {\n                return;\n            }\n            embedLoading.value = true;\n            await timeout(200);\n            embedService.value = getEmbedService(props.modelValue.url);\n            embedLoading.value = false;\n        });\n\n        return {\n            FieldType,\n            updateUrl,\n            embedLoading,\n            embedService,\n            embedServiceC,\n            EmbedFieldService,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.no-i::v-deep i {\n    display: none !important;\n}\n</style>\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { EmbedField, EmbedFieldService, Entry, FieldType } from \"@/store/types\";\nimport { getEmbedService } from \"@/utils\";\n\nexport default defineComponent({\n    name: \"EmbedField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<EmbedField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $q = useQuasar();\n\n        // Refs\n        const embedLoading = ref(false);\n        const embedService = ref(EmbedFieldService.Unknown);\n\n        // Computed\n        const embedServiceC = computed(() => getEmbedService(props.modelValue.url));\n\n        // Functions\n        const timeout = async (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n        const updateUrl = (url: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, url } as EmbedField);\n        };\n\n        // Effects\n        watchEffect(async () => {\n            if (!props.modelValue.url) {\n                return;\n            }\n            embedLoading.value = true;\n            await timeout(200);\n            embedService.value = getEmbedService(props.modelValue.url);\n            embedLoading.value = false;\n        });\n\n        return {\n            FieldType,\n            updateUrl,\n            embedLoading,\n            embedService,\n            embedServiceC,\n            EmbedFieldService,\n        };\n    },\n});\n","import { render } from \"./EmbedField.vue?vue&type=template&id=23affd3c&scoped=true\"\nimport script from \"./EmbedField.vue?vue&type=script&lang=ts\"\nexport * from \"./EmbedField.vue?vue&type=script&lang=ts\"\n\nimport \"./EmbedField.vue?vue&type=style&index=0&id=23affd3c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-23affd3c\"\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QVideo from 'quasar/src/components/video/QVideo.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QIcon,QVideo,QCard,QItem,QItemSection});\n","<template>\n    <div v-if=\"editView\">\n        <q-btn\n            label=\"Edit locations\"\n            outline\n            color=\"primary\"\n            class=\"full-width\"\n            :disable=\"!modelValue.imageKey\"\n            @click=\"editLocations\"\n        ></q-btn>\n        <q-select\n            label=\"Image attachment\"\n            outlined\n            dense\n            class=\"q-mt-sm\"\n            :options=\"attachmentOptions\"\n            :modelValue=\"modelValue.imageKey\"\n            @update:modelValue=\"updateImageKey\"\n        >\n            <template v-slot:option=\"scope\">\n                <q-item v-bind=\"scope.itemProps\" v-on=\"scope.itemEvents\" dense>\n                    <q-item-section>\n                        <q-item-label v-html=\"scope.opt.label\"></q-item-label>\n                    </q-item-section>\n                    <q-item-section avatar>\n                        <q-icon size=\"16px\" :name=\"scope.opt.icon\"></q-icon>\n                    </q-item-section>\n                </q-item>\n            </template>\n            <template v-slot:no-option>\n                <q-item>\n                    <q-item-section class=\"text-italic text-grey\">\n                        No attachments saved\n                    </q-item-section>\n                </q-item>\n            </template>\n        </q-select>\n        <q-input\n            class=\"q-mt-sm\"\n            outlined\n            dense\n            label=\"Custom name\"\n            :modelValue=\"modelValue.customName\"\n            @update:modelValue=\"updateCustomName\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <map-view\n            :locations=\"modelValue.locations\"\n            :background=\"mapBackground\"\n            showLocations\n            style=\"height: 200px\"\n            v-if=\"mapBackground\"\n        ></map-view>\n        <div class=\"text-subtitle2 q-mb-xs text-negative\" v-else>\n            Set a background to load this map.\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { Entry, FieldType, MapField, MapFieldLocation } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nimport EditMapDialog from \"../maps/EditMapDialog.vue\";\nimport MapView from \"../maps/MapView.vue\";\n\nexport default defineComponent({\n    name: \"MapField\",\n    emits: [\"update:modelValue\"],\n    components: { MapView },\n    props: {\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        // const mapBackground = ref<string>(\n        //     $store.getters.entryAttachmentFull(props.entry.id, props.modelValue.imageKey)\n        // );\n\n        // Computed\n        const attachmentOptions = computed(() =>\n            $store.state.entries[props.entry.id]\n                ? Object.entries($store.state.entries[props.entry.id].attachments)\n                      .filter((kv) => kv[1].content_type.startsWith(\"image\"))\n                      .map((kv) => {\n                          return {\n                              label: kv[0],\n                              value: kv[0],\n                              icon: getAttachmentIcon(kv[1].content_type),\n                          };\n                      })\n                : []\n        );\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entry.id,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n\n        // Functions\n        const updateCustomName = (customName: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                customName,\n            } as MapField);\n        };\n        const updateImageKey = (imageKey: { label: string; value: string; icon: string }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                imageKey: imageKey.value,\n            } as MapField);\n        };\n        const editLocations = () => {\n            $q.dialog({\n                component: EditMapDialog,\n                componentProps: {\n                    modelValue: props.modelValue,\n                    entryId: props.entry.id,\n                },\n            }).onOk((data: { locations: MapFieldLocation[] }) => {\n                emit(\"update:modelValue\", {\n                    ...props.modelValue,\n                    locations: data.locations,\n                } as MapField);\n            });\n        };\n\n        return {\n            FieldType,\n            updateCustomName,\n            updateImageKey,\n            attachmentOptions,\n            editLocations,\n            mapBackground,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\" style=\"width: 100%\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">Editing \"{{ modelValue.name }}\"</div>\n                <q-space></q-space>\n                <q-btn\n                    icon=\"add_location_alt\"\n                    color=\"primary\"\n                    flat\n                    round\n                    dense\n                    @click=\"addLocation\"\n                >\n                    <q-tooltip>Create a new location</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <div>\n                <map-view\n                    :background=\"mapBackground\"\n                    :locations=\"mapLocations\"\n                    showLocations\n                    editLocations\n                    @update:locations=\"mapLocations = $event\"\n                    @selected=\"mapSelected = $event\"\n                    style=\"height: 300px\"\n                    ref=\"mapRef\"\n                ></map-view>\n            </div>\n            <q-card-section class=\"q-pb-sm\">\n                <div class=\"row\">\n                    <div class=\"col col-md-4\">\n                        <q-select\n                            :label=\"selectOpts.length ? 'Select a location' : '(no locations)'\"\n                            :disable=\"!selectOpts.length\"\n                            dense\n                            :options=\"selectOpts\"\n                            outlined\n                            class=\"q-mr-sm\"\n                            v-model=\"mapSelected\"\n                        ></q-select>\n                    </div>\n                    <div class=\"col\">\n                        <select-entry\n                            outlined\n                            dense\n                            class=\"q-mr-sm\"\n                            options-dense\n                            v-if=\"mapSelectedPtr\"\n                            v-model=\"mapSelectedPtr.entryId\"\n                        ></select-entry>\n                    </div>\n                    <div class=\"col-auto\">\n                        <q-btn\n                            icon=\"delete_outline\"\n                            class=\"full-height\"\n                            outline\n                            color=\"negative\"\n                            :disable=\"!mapSelectedPtr\"\n                        >\n                        </q-btn>\n                    </div>\n                </div>\n            </q-card-section>\n            <q-card-section>\n                <div class=\"row\">\n                    <div class=\"col col-md-2 q-pr-sm\">\n                        <q-input\n                            type=\"number\"\n                            label=\"X\"\n                            dense\n                            outlined\n                            :modelValue=\"mapSelectedPtr.position[0]\"\n                            @update:modelValue=\"\n                                mapRef.moveLocation(mapSelected, {\n                                    lat: mapSelectedPtr.position[1],\n                                    lng: $event,\n                                })\n                            \"\n                            v-if=\"mapSelectedPtr\"\n                        ></q-input>\n                    </div>\n                    <div class=\"col col-md-2 q-pr-sm\">\n                        <q-input\n                            type=\"number\"\n                            label=\"Y\"\n                            dense\n                            outlined\n                            :modelValue=\"mapSelectedPtr.position[1]\"\n                            @update:modelValue=\"\n                                mapRef.moveLocation(mapSelected, {\n                                    lat: $event,\n                                    lng: mapSelectedPtr.position[0],\n                                })\n                            \"\n                            v-if=\"mapSelectedPtr\"\n                        ></q-input>\n                    </div>\n                    <q-space></q-space>\n                    <q-btn label=\"Save changes\" color=\"primary\" flat @click=\"saveChanges\"></q-btn>\n                </div>\n            </q-card-section>\n            <!-- <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"OK\" @click=\"onOKClick\" />\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions> -->\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport {\n    computed,\n    defineComponent,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { MapField, MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport SelectEntry from \"../form/SelectEntry.vue\";\nimport MapView from \"./MapView.vue\";\n\nexport default defineComponent({\n    name: \"EditMapDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n    },\n    // components: { LMap, LImageOverlay, LMarker, LPopup, SelectEntry },\n    components: { SelectEntry, MapView },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entryId,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n        const mapLocations = ref<MapFieldLocation[]>(props.modelValue.locations);\n        const mapSelected = ref<number | undefined>(undefined);\n        const mapRef = ref<typeof MapView | undefined>(undefined);\n\n        // Computed\n        // const selectOpts = computed(() =>\n        //     mapLocations.value.map((l, idx) => ({ label: idx, data: l }))\n        // );\n        const selectOpts = computed(() => mapLocations.value.map((_, i) => i));\n        const mapSelectedPtr = computed(() =>\n            mapSelected.value !== undefined ? mapLocations.value[mapSelected.value] : undefined\n        );\n\n        // Functions\n        const addLocation = () => {\n            mapLocations.value = [\n                ...mapLocations.value,\n                {\n                    entryId: \"\",\n                    position: mapRef.value ? mapRef.value.getMapCenter() : [0, 0],\n                },\n            ];\n            mapSelected.value = mapLocations.value.length - 1;\n        };\n        const saveChanges = () => {\n            onDialogOK({\n                locations: mapLocations,\n            });\n        };\n\n        return {\n            mapBackground,\n            saveChanges,\n            dialogRef,\n            onDialogHide,\n            mapLocations,\n            selectOpts,\n            CRS: L.CRS,\n            addLocation,\n            mapSelected,\n            mapSelectedPtr,\n            mapRef,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-select\n        v-bind=\"attrs\"\n        label=\"Select an entry\"\n        :options=\"selectOpts\"\n        :modelValue=\"modelValue\"\n        @update:modelValue=\"updateValue\"\n        :option-value=\"(opt) => (opt !== undefined ? opt.id : '')\"\n        emit-value\n        :multiple=\"multiple\"\n        map-options\n    >\n        <template v-slot:option=\"scope\">\n            <q-item v-bind=\"scope.itemProps\">\n                <q-item-section avatar style=\"min-width: 0\">\n                    <q-avatar rounded v-if=\"scope.opt.avatar.type === 'attachment'\" size=\"24px\">\n                        <img :src=\"scope.opt.avatar.data\" />\n                    </q-avatar>\n                    <q-avatar\n                        v-else\n                        text-color=\"primary\"\n                        rounded\n                        :icon=\"scope.opt.avatar.data\"\n                        size=\"24px\"\n                    ></q-avatar>\n                </q-item-section>\n                <q-item-section>\n                    <q-item-label>{{ scope.opt.label }}</q-item-label>\n                </q-item-section>\n            </q-item>\n        </template>\n        <template v-slot:prepend v-if=\"!multiple\">\n            <q-avatar rounded v-if=\"currentOpt && currentOpt.avatar.type === 'attachment'\">\n                <img :src=\"currentOpt.avatar.data\" />\n            </q-avatar>\n            <q-avatar\n                v-else-if=\"currentOpt && currentOpt.avatar.type === 'icon'\"\n                text-color=\"primary\"\n                rounded\n                :icon=\"currentOpt.avatar.data\"\n            ></q-avatar>\n        </template>\n    </q-select>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n    name: \"SelectEntry\",\n    props: {\n        modelValue: {\n            type: Object as PropType<string | Array<string>>,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: [\"update:modelValue\"],\n    setup: (props, ctx) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const selectOpts = computed(() =>\n            Object.entries($store.state.entries).map((e) => {\n                const avatar =\n                    e[1].avatar.type === \"attachment\"\n                        ? $store.getters.entryAttachment(e[1].id, e[1].avatar.data as string)\n                        : e[1].avatar.data;\n                return {\n                    label: e[1].title,\n                    avatar: {\n                        type: e[1].avatar.type,\n                        data: avatar,\n                    },\n                    id: e[1].id,\n                };\n            })\n        );\n        const currentOpt = computed(() => selectOpts.value.find((o) => o.id === props.modelValue));\n\n        // Functions\n        const updateValue = (val: { id: string }) => {\n            ctx.emit(\"update:modelValue\", val);\n        };\n\n        return {\n            attrs: ctx.attrs,\n            updateValue,\n            selectOpts,\n            currentOpt,\n        };\n    },\n});\n</script>\n","\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\n\nexport default defineComponent({\n    name: \"SelectEntry\",\n    props: {\n        modelValue: {\n            type: Object as PropType<string | Array<string>>,\n            required: true,\n        },\n        multiple: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: [\"update:modelValue\"],\n    setup: (props, ctx) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const selectOpts = computed(() =>\n            Object.entries($store.state.entries).map((e) => {\n                const avatar =\n                    e[1].avatar.type === \"attachment\"\n                        ? $store.getters.entryAttachment(e[1].id, e[1].avatar.data as string)\n                        : e[1].avatar.data;\n                return {\n                    label: e[1].title,\n                    avatar: {\n                        type: e[1].avatar.type,\n                        data: avatar,\n                    },\n                    id: e[1].id,\n                };\n            })\n        );\n        const currentOpt = computed(() => selectOpts.value.find((o) => o.id === props.modelValue));\n\n        // Functions\n        const updateValue = (val: { id: string }) => {\n            ctx.emit(\"update:modelValue\", val);\n        };\n\n        return {\n            attrs: ctx.attrs,\n            updateValue,\n            selectOpts,\n            currentOpt,\n        };\n    },\n});\n","import { render } from \"./SelectEntry.vue?vue&type=template&id=251191ed\"\nimport script from \"./SelectEntry.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectEntry.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QSelect,QItem,QItemSection,QAvatar,QItemLabel});\n","<template>\n    <l-map\n        :crs=\"CRS.Simple\"\n        :center=\"mapCenter\"\n        v-model:zoom=\"mapZoom\"\n        :minZoom=\"-2\"\n        ref=\"mapRef\"\n        :options=\"{\n            fullscreenControl: true,\n            fullscreenControlOptions: {\n                position: 'topleft',\n            },\n        }\"\n        v-if=\"mapReady\"\n    >\n        <l-image-overlay :url=\"mapImage\" :bounds=\"mapBounds\"></l-image-overlay>\n        <template v-if=\"showLocations\">\n            <l-marker\n                v-for=\"(location, idx) in mapLocations\"\n                :key=\"idx\"\n                :lat-lng=\"location.coordinates\"\n                :draggable=\"editLocations\"\n                :ref=\"\n                    (el) => {\n                        if (el) mapLocationRefs[idx] = el;\n                    }\n                \"\n                @update:latLng=\"updateLocation(idx, $event)\"\n                @click=\"$emit('selected', idx)\"\n            >\n                <l-popup :options=\"{ minWidth: 200, closeButton: false }\">\n                    <entry-link :entryId=\"location.entryId\" :showLink=\"!editLocations\"></entry-link>\n                </l-popup>\n            </l-marker>\n        </template>\n        <l-control class=\"leaflet-control leaflet-demo-control\" v-if=\"locations.length\">\n            <q-btn icon=\"chevron_left\" dense flat size=\"10px\" @click=\"focusPrevLocation\"></q-btn>\n            <q-btn icon=\"chevron_right\" dense flat size=\"10px\" @click=\"focusNextLocation\"></q-btn>\n        </l-control>\n    </l-map>\n</template>\n\n<script lang=\"ts\">\nimport \"leaflet.fullscreen\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { LControl, LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as JD from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport { isEqual } from \"lodash\";\nimport {\n    computed,\n    defineComponent,\n    onBeforeUnmount,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport EntryLink from \"../EntryLink.vue\";\n\ntype MapViewLocation = {\n    entryId: string;\n    coordinates: { lat: number; lng: number };\n    ref?: L.Marker;\n};\n\nexport default defineComponent({\n    name: \"MapView\",\n    props: {\n        background: {\n            type: Object as PropType<{ data: string; contentType: string }>,\n            required: true,\n        },\n        locations: {\n            type: Array as PropType<Array<MapFieldLocation>>,\n            default: [],\n        },\n        showLocations: {\n            type: Boolean,\n            default: false,\n        },\n        editLocations: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    components: { LMap, LImageOverlay, LMarker, LPopup, EntryLink, LControl },\n    emits: [\"selected\", \"update:locations\"],\n    setup: (props, ctx) => {\n        // Refs\n        const mapImage = ref(\"\");\n        const mapBounds = ref<[[number, number], [number, number]]>([\n            [0, 0],\n            [0, 0],\n        ]);\n        const mapCenter = ref<[number, number]>([0, 0]);\n        const mapZoom = ref(0);\n        const mapLocationRefs = ref<Array<{ leafletObject: L.Marker }>>([]);\n        const mapRef = ref<typeof LMap | undefined>(undefined);\n        const mapReady = ref(false);\n        const mapFocus = ref(0);\n\n        // Computed\n        const mapLocations = computed<MapViewLocation[]>(() =>\n            props.locations.map((l, i) => {\n                return {\n                    entryId: l.entryId,\n                    coordinates: { lng: l.position[0], lat: l.position[1] },\n                    ref: mapLocationRefs.value[i]\n                        ? (mapLocationRefs.value[i].leafletObject as L.Marker)\n                        : undefined,\n                };\n            })\n        );\n\n        // Functions\n        const normalizeLocation = (loc: MapViewLocation): MapFieldLocation => {\n            return { entryId: loc.entryId, position: [loc.coordinates.lat, loc.coordinates.lng] };\n        };\n        const updateLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            ctx.emit(\n                \"update:locations\",\n                mapLocations.value.map(\n                    (ml, idx2): MapFieldLocation => {\n                        return {\n                            entryId: ml.entryId,\n                            position:\n                                idx === idx2\n                                    ? [coordinates.lng, coordinates.lat]\n                                    : [ml.coordinates.lng, ml.coordinates.lat],\n                        };\n                    }\n                )\n            );\n        };\n        const focusLocation = (idx: number) => {\n            if (!mapRef.value || !mapLocationRefs.value[idx]) {\n                return;\n            }\n            mapRef.value.leafletObject.flyTo({\n                lat: props.locations[idx].position[1],\n                lng: props.locations[idx].position[0],\n            });\n        };\n        const focusPrevLocation = () => {\n            mapFocus.value = mapFocus.value <= 0 ? props.locations.length - 1 : mapFocus.value - 1;\n            focusLocation(mapFocus.value);\n        };\n        const focusNextLocation = () => {\n            mapFocus.value = mapFocus.value >= props.locations.length - 1 ? 0 : mapFocus.value + 1;\n            focusLocation(mapFocus.value);\n        };\n        const moveLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            if (mapLocationRefs.value[idx]) {\n                mapLocationRefs.value[idx].leafletObject.setLatLng(coordinates);\n            }\n        };\n        const updateBackground = () => {\n            mapReady.value = false;\n\n            // Convert background b64 to blob\n            const mapBlob = b64toBlob(props.background.data, props.background.contentType);\n            mapImage.value = URL.createObjectURL(mapBlob);\n\n            // Calculate background bounds\n            const img = new Image();\n            img.onload = () => {\n                mapBounds.value = [\n                    [0, 0],\n                    [img.height, img.width],\n                ];\n                mapCenter.value = [img.width / 2, img.height / 2];\n                mapReady.value = true;\n            };\n            img.src = mapImage.value;\n        };\n\n        const getMapCenter = () => {\n            return mapCenter;\n        };\n\n        // Effects\n        onMounted(() => {\n            updateBackground();\n            setTimeout(() => {\n                if (!mapRef.value) {\n                    return;\n                }\n                L.control.fullscreen().addTo((mapRef.value.leafletObject as unknown) as L.Map);\n            }, 500);\n        });\n        watchEffect(() => {\n            if (props.background) {\n                updateBackground();\n            }\n        });\n        onBeforeUpdate(() => {\n            mapLocationRefs.value = [];\n        });\n        // onMounted(() => {});\n        onBeforeUnmount(() => {\n            // Release map object URL\n            if (mapImage.value) {\n                URL.revokeObjectURL(mapImage.value);\n            }\n        });\n\n        return {\n            mapImage,\n            mapBounds,\n            mapCenter,\n            mapLocations,\n            mapZoom,\n            normalizeLocation,\n            CRS: L.CRS,\n            updateLocation,\n            focusPrevLocation,\n            focusNextLocation,\n            focusLocation,\n            mapFocus,\n            mapLocationRefs,\n            mapRef,\n            getMapCenter,\n            moveLocation,\n            mapReady,\n        };\n    },\n});\n</script>\n\n<style>\n.leaflet-demo-control {\n    background: white;\n    border: 2px solid rgba(0, 0, 0, 0.2);\n    border-radius: 0.6em;\n    padding: 0.5em;\n    float: right;\n    margin: 10px;\n}\n</style>\n","<template>\n    <template v-if=\"item && entry && currentJournal\">\n        <q-item :to=\"'/j/' + currentJournal + '/e/' + entry.id\">\n            <q-item-section avatar>\n                <q-avatar rounded v-if=\"entryAvatar.type === 'attachment'\" :size=\"avatarSize\">\n                    <img :src=\"entryAvatar.data\" />\n                </q-avatar>\n                <q-avatar\n                    v-else\n                    text-color=\"primary\"\n                    rounded\n                    :icon=\"entryAvatar.data\"\n                    :size=\"avatarSize\"\n                ></q-avatar>\n            </q-item-section>\n            <q-item-section v-if=\"entry.title\">\n                {{ entry.title }}\n            </q-item-section>\n            <q-item-section v-else class=\"text-grey text-italic\"> Untitled entry </q-item-section>\n        </q-item>\n    </template>\n    <div v-else-if=\"entry && currentJournal\">\n        <div class=\"row\">\n            <div class=\"col-auto q-mr-md\">\n                <q-avatar rounded v-if=\"entryAvatar.type === 'attachment'\" :size=\"avatarSize\">\n                    <img :src=\"entryAvatar.data\" />\n                </q-avatar>\n                <q-avatar\n                    v-else\n                    text-color=\"primary\"\n                    rounded\n                    :icon=\"entryAvatar.data\"\n                    :size=\"avatarSize\"\n                ></q-avatar>\n            </div>\n            <div class=\"col\">\n                <div class=\"text-h6\" style=\"line-height: 1.2em\">{{ entry.title }}</div>\n                <router-link\n                    :to=\"'/j/' + currentJournal + '/e/' + entryId\"\n                    style=\"text-decoration: none\"\n                    class=\"text-subtitle2\"\n                    v-if=\"showLink\"\n                >\n                    View entry\n                </router-link>\n            </div>\n        </div>\n    </div>\n    <div class=\"text-subtitle2 q-mb-xs text-negative\" v-else>Error loading link!</div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onBeforeMount, ref, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_FETCH_ENTRY } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"EntryLink\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        showLink: {\n            type: Boolean,\n            default: true,\n        },\n        item: {\n            type: Boolean,\n            default: false,\n        },\n        avatarSize: {\n            type: String,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const entryAvatar = computed(() => {\n            if (entry.value) {\n                return {\n                    data:\n                        entry.value.avatar.type === \"attachment\"\n                            ? $store.getters.entryAttachment(\n                                  entry.value.id,\n                                  entry.value.avatar.data as string\n                              )\n                            : entry.value.avatar.data,\n                    type: entry.value.avatar.type,\n                };\n            }\n            return undefined;\n        });\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        return { entry, entryAvatar, currentJournal };\n    },\n});\n</script>\n","\nimport { computed, defineComponent, onBeforeMount, ref, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_FETCH_ENTRY } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"EntryLink\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        showLink: {\n            type: Boolean,\n            default: true,\n        },\n        item: {\n            type: Boolean,\n            default: false,\n        },\n        avatarSize: {\n            type: String,\n        },\n    },\n    setup: (props) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const entryAvatar = computed(() => {\n            if (entry.value) {\n                return {\n                    data:\n                        entry.value.avatar.type === \"attachment\"\n                            ? $store.getters.entryAttachment(\n                                  entry.value.id,\n                                  entry.value.avatar.data as string\n                              )\n                            : entry.value.avatar.data,\n                    type: entry.value.avatar.type,\n                };\n            }\n            return undefined;\n        });\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        return { entry, entryAvatar, currentJournal };\n    },\n});\n","import { render } from \"./EntryLink.vue?vue&type=template&id=109310a4\"\nimport script from \"./EntryLink.vue?vue&type=script&lang=ts\"\nexport * from \"./EntryLink.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QItem,QItemSection,QAvatar});\n","\nimport \"leaflet.fullscreen\";\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport { LControl, LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as JD from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport { isEqual } from \"lodash\";\nimport {\n    computed,\n    defineComponent,\n    onBeforeUnmount,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport EntryLink from \"../EntryLink.vue\";\n\ntype MapViewLocation = {\n    entryId: string;\n    coordinates: { lat: number; lng: number };\n    ref?: L.Marker;\n};\n\nexport default defineComponent({\n    name: \"MapView\",\n    props: {\n        background: {\n            type: Object as PropType<{ data: string; contentType: string }>,\n            required: true,\n        },\n        locations: {\n            type: Array as PropType<Array<MapFieldLocation>>,\n            default: [],\n        },\n        showLocations: {\n            type: Boolean,\n            default: false,\n        },\n        editLocations: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    components: { LMap, LImageOverlay, LMarker, LPopup, EntryLink, LControl },\n    emits: [\"selected\", \"update:locations\"],\n    setup: (props, ctx) => {\n        // Refs\n        const mapImage = ref(\"\");\n        const mapBounds = ref<[[number, number], [number, number]]>([\n            [0, 0],\n            [0, 0],\n        ]);\n        const mapCenter = ref<[number, number]>([0, 0]);\n        const mapZoom = ref(0);\n        const mapLocationRefs = ref<Array<{ leafletObject: L.Marker }>>([]);\n        const mapRef = ref<typeof LMap | undefined>(undefined);\n        const mapReady = ref(false);\n        const mapFocus = ref(0);\n\n        // Computed\n        const mapLocations = computed<MapViewLocation[]>(() =>\n            props.locations.map((l, i) => {\n                return {\n                    entryId: l.entryId,\n                    coordinates: { lng: l.position[0], lat: l.position[1] },\n                    ref: mapLocationRefs.value[i]\n                        ? (mapLocationRefs.value[i].leafletObject as L.Marker)\n                        : undefined,\n                };\n            })\n        );\n\n        // Functions\n        const normalizeLocation = (loc: MapViewLocation): MapFieldLocation => {\n            return { entryId: loc.entryId, position: [loc.coordinates.lat, loc.coordinates.lng] };\n        };\n        const updateLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            ctx.emit(\n                \"update:locations\",\n                mapLocations.value.map(\n                    (ml, idx2): MapFieldLocation => {\n                        return {\n                            entryId: ml.entryId,\n                            position:\n                                idx === idx2\n                                    ? [coordinates.lng, coordinates.lat]\n                                    : [ml.coordinates.lng, ml.coordinates.lat],\n                        };\n                    }\n                )\n            );\n        };\n        const focusLocation = (idx: number) => {\n            if (!mapRef.value || !mapLocationRefs.value[idx]) {\n                return;\n            }\n            mapRef.value.leafletObject.flyTo({\n                lat: props.locations[idx].position[1],\n                lng: props.locations[idx].position[0],\n            });\n        };\n        const focusPrevLocation = () => {\n            mapFocus.value = mapFocus.value <= 0 ? props.locations.length - 1 : mapFocus.value - 1;\n            focusLocation(mapFocus.value);\n        };\n        const focusNextLocation = () => {\n            mapFocus.value = mapFocus.value >= props.locations.length - 1 ? 0 : mapFocus.value + 1;\n            focusLocation(mapFocus.value);\n        };\n        const moveLocation = (idx: number, coordinates: { lat: number; lng: number }) => {\n            if (mapLocationRefs.value[idx]) {\n                mapLocationRefs.value[idx].leafletObject.setLatLng(coordinates);\n            }\n        };\n        const updateBackground = () => {\n            mapReady.value = false;\n\n            // Convert background b64 to blob\n            const mapBlob = b64toBlob(props.background.data, props.background.contentType);\n            mapImage.value = URL.createObjectURL(mapBlob);\n\n            // Calculate background bounds\n            const img = new Image();\n            img.onload = () => {\n                mapBounds.value = [\n                    [0, 0],\n                    [img.height, img.width],\n                ];\n                mapCenter.value = [img.width / 2, img.height / 2];\n                mapReady.value = true;\n            };\n            img.src = mapImage.value;\n        };\n\n        const getMapCenter = () => {\n            return mapCenter;\n        };\n\n        // Effects\n        onMounted(() => {\n            updateBackground();\n            setTimeout(() => {\n                if (!mapRef.value) {\n                    return;\n                }\n                L.control.fullscreen().addTo((mapRef.value.leafletObject as unknown) as L.Map);\n            }, 500);\n        });\n        watchEffect(() => {\n            if (props.background) {\n                updateBackground();\n            }\n        });\n        onBeforeUpdate(() => {\n            mapLocationRefs.value = [];\n        });\n        // onMounted(() => {});\n        onBeforeUnmount(() => {\n            // Release map object URL\n            if (mapImage.value) {\n                URL.revokeObjectURL(mapImage.value);\n            }\n        });\n\n        return {\n            mapImage,\n            mapBounds,\n            mapCenter,\n            mapLocations,\n            mapZoom,\n            normalizeLocation,\n            CRS: L.CRS,\n            updateLocation,\n            focusPrevLocation,\n            focusNextLocation,\n            focusLocation,\n            mapFocus,\n            mapLocationRefs,\n            mapRef,\n            getMapCenter,\n            moveLocation,\n            mapReady,\n        };\n    },\n});\n","import { render } from \"./MapView.vue?vue&type=template&id=9ae87e28\"\nimport script from \"./MapView.vue?vue&type=script&lang=ts\"\nexport * from \"./MapView.vue?vue&type=script&lang=ts\"\n\nimport \"./MapView.vue?vue&type=style&index=0&id=9ae87e28&lang=css\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn});\n","\nimport { LImageOverlay, LMap, LMarker, LPopup } from \"@vue-leaflet/vue-leaflet\";\nimport * as L from \"leaflet\";\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport {\n    computed,\n    defineComponent,\n    onBeforeUpdate,\n    onMounted,\n    onUnmounted,\n    PropType,\n    ref,\n    watch,\n    watchEffect,\n} from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { MapField, MapFieldLocation } from \"@/store/types\";\nimport { b64toBlob } from \"@/utils\";\n\nimport SelectEntry from \"../form/SelectEntry.vue\";\nimport MapView from \"./MapView.vue\";\n\nexport default defineComponent({\n    name: \"EditMapDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n    },\n    // components: { LMap, LImageOverlay, LMarker, LPopup, SelectEntry },\n    components: { SelectEntry, MapView },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entryId,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n        const mapLocations = ref<MapFieldLocation[]>(props.modelValue.locations);\n        const mapSelected = ref<number | undefined>(undefined);\n        const mapRef = ref<typeof MapView | undefined>(undefined);\n\n        // Computed\n        // const selectOpts = computed(() =>\n        //     mapLocations.value.map((l, idx) => ({ label: idx, data: l }))\n        // );\n        const selectOpts = computed(() => mapLocations.value.map((_, i) => i));\n        const mapSelectedPtr = computed(() =>\n            mapSelected.value !== undefined ? mapLocations.value[mapSelected.value] : undefined\n        );\n\n        // Functions\n        const addLocation = () => {\n            mapLocations.value = [\n                ...mapLocations.value,\n                {\n                    entryId: \"\",\n                    position: mapRef.value ? mapRef.value.getMapCenter() : [0, 0],\n                },\n            ];\n            mapSelected.value = mapLocations.value.length - 1;\n        };\n        const saveChanges = () => {\n            onDialogOK({\n                locations: mapLocations,\n            });\n        };\n\n        return {\n            mapBackground,\n            saveChanges,\n            dialogRef,\n            onDialogHide,\n            mapLocations,\n            selectOpts,\n            CRS: L.CRS,\n            addLocation,\n            mapSelected,\n            mapSelectedPtr,\n            mapRef,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./EditMapDialog.vue?vue&type=template&id=372f80cf\"\nimport script from \"./EditMapDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./EditMapDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QSelect,QInput,QCardActions});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { Entry, FieldType, MapField, MapFieldLocation } from \"@/store/types\";\nimport { getAttachmentIcon } from \"@/utils\";\n\nimport EditMapDialog from \"../maps/EditMapDialog.vue\";\nimport MapView from \"../maps/MapView.vue\";\n\nexport default defineComponent({\n    name: \"MapField\",\n    emits: [\"update:modelValue\"],\n    components: { MapView },\n    props: {\n        modelValue: {\n            type: Object as PropType<MapField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        // const mapBackground = ref<string>(\n        //     $store.getters.entryAttachmentFull(props.entry.id, props.modelValue.imageKey)\n        // );\n\n        // Computed\n        const attachmentOptions = computed(() =>\n            $store.state.entries[props.entry.id]\n                ? Object.entries($store.state.entries[props.entry.id].attachments)\n                      .filter((kv) => kv[1].content_type.startsWith(\"image\"))\n                      .map((kv) => {\n                          return {\n                              label: kv[0],\n                              value: kv[0],\n                              icon: getAttachmentIcon(kv[1].content_type),\n                          };\n                      })\n                : []\n        );\n        const mapBackground = computed(() => {\n            const att = $store.getters.entryAttachmentFull(\n                props.entry.id,\n                props.modelValue.imageKey\n            );\n            if (!att) {\n                return undefined;\n            }\n            return {\n                data: att.data,\n                contentType: att.content_type,\n            };\n        });\n\n        // Functions\n        const updateCustomName = (customName: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                customName,\n            } as MapField);\n        };\n        const updateImageKey = (imageKey: { label: string; value: string; icon: string }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                imageKey: imageKey.value,\n            } as MapField);\n        };\n        const editLocations = () => {\n            $q.dialog({\n                component: EditMapDialog,\n                componentProps: {\n                    modelValue: props.modelValue,\n                    entryId: props.entry.id,\n                },\n            }).onOk((data: { locations: MapFieldLocation[] }) => {\n                emit(\"update:modelValue\", {\n                    ...props.modelValue,\n                    locations: data.locations,\n                } as MapField);\n            });\n        };\n\n        return {\n            FieldType,\n            updateCustomName,\n            updateImageKey,\n            attachmentOptions,\n            editLocations,\n            mapBackground,\n        };\n    },\n});\n","import { render } from \"./MapField.vue?vue&type=template&id=76568109\"\nimport script from \"./MapField.vue?vue&type=script&lang=ts\"\nexport * from \"./MapField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn,QSelect,QItem,QItemSection,QItemLabel,QIcon,QInput});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"Value\"\n            type=\"number\"\n            outlined\n            dense\n            :modelValue=\"modelValue.value\"\n            @update:modelValue=\"updateValue\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div class=\"text-body1\">{{ modelValue.value }}</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, NumberField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"NumberField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                value: Number.parseInt(value),\n            } as NumberField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, NumberField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"NumberField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: string) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                value: Number.parseInt(value),\n            } as NumberField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./NumberField.vue?vue&type=template&id=3d117a36\"\nimport script from \"./NumberField.vue?vue&type=script&lang=ts\"\nexport * from \"./NumberField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"Label\"\n            :modelValue=\"modelValue.label\"\n            @update:modelValue=\"updateLabel\"\n            style=\"font-family: monospace\"\n            outlined\n            dense\n        >\n            <template v-slot:append>\n                <q-icon name=\"help\">\n                    <q-tooltip>\n                        Available variables:<br />\n                        %min = Minimum value<br />\n                        %max = Maximum value <br />\n                        %val = Current value<br />\n                        %val2 = Current value (%)<br />\n                        %rem = Remaining value<br />\n                        %rem2 = Remaining value (%)\n                    </q-tooltip>\n                    <q-dialog>hi</q-dialog>\n                </q-icon>\n            </template>\n        </q-input>\n        <div class=\"row q-gutter-md q-pt-sm\">\n            <div class=\"col-md\">\n                <q-input\n                    outlined\n                    dense\n                    label=\"Min\"\n                    type=\"number\"\n                    :modelValue=\"modelValue.minValue\"\n                    @update:modelValue=\"updateMinValue\"\n                ></q-input>\n            </div>\n            <div class=\"col-md\">\n                <q-input\n                    label=\"Max\"\n                    type=\"number\"\n                    outlined\n                    dense\n                    :modelValue=\"modelValue.maxValue\"\n                    @update:modelValue=\"updateMaxValue\"\n                ></q-input>\n            </div>\n            <div class=\"col-md\">\n                <q-input\n                    label=\"Value\"\n                    type=\"number\"\n                    outlined\n                    dense\n                    :modelValue=\"modelValue.value\"\n                    @update:modelValue=\"updateValue\"\n                ></q-input>\n            </div>\n        </div>\n        <q-separator class=\"q-my-md\"></q-separator>\n        <div class=\"row\">\n            <div class=\"col-md\">\n                <q-checkbox\n                    :modelValue=\"modelValue.showBar\"\n                    @update:modelValue=\"updateShowBar\"\n                    style=\"transform: translateX(-10px)\"\n                    label=\"Show bar\"\n                ></q-checkbox>\n            </div>\n            <div class=\"col-md\">\n                <q-select\n                    label=\"Bar type\"\n                    :disable=\"!modelValue.showBar\"\n                    :options=\"barOptions\"\n                    :modelValue=\"modelValue.barType\"\n                    @update:modelValue=\"updateBarType\"\n                    outlined\n                    dense\n                >\n                </q-select>\n            </div>\n        </div>\n        <q-input\n            class=\"q-mt-sm\"\n            label=\"Bar color\"\n            :disable=\"!modelValue.showBar\"\n            :modelValue=\"modelValue.barColor\"\n            @update:modelValue=\"updateBarColor\"\n            outlined\n            dense\n        >\n            <template v-slot:append>\n                <q-icon name=\"colorize\" class=\"cursor-pointer\">\n                    <q-popup-proxy transition-show=\"scale\" transition-hide=\"scale\">\n                        <q-color\n                            :modelValue=\"modelValue.barColor\"\n                            @update:modelValue=\"updateBarColor\"\n                        />\n                    </q-popup-proxy>\n                </q-icon>\n            </template>\n        </q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <template v-if=\"modelValue.showBar\">\n            <q-linear-progress\n                size=\"24px\"\n                rounded\n                v-if=\"modelValue.barType == 'linear'\"\n                :value=\"barValue\"\n                ref=\"progress\"\n            >\n                <div class=\"absolute-full flex flex-center\">\n                    <q-badge\n                        color=\"white\"\n                        text-color=\"accent\"\n                        class=\"text-weight-bold\"\n                        :label=\"progressLabel\"\n                    />\n                </div>\n            </q-linear-progress>\n            <div v-else style=\"display: inline-block\">\n                <q-circular-progress\n                    :value=\"modelValue.value\"\n                    size=\"xl\"\n                    :min=\"modelValue.minValue\"\n                    :max=\"modelValue.maxValue\"\n                    show-value\n                    :style=\"{ color: modelValue.barColor }\"\n                    center-color=\"grey-3\"\n                    track-color=\"grey-3\"\n                >\n                </q-circular-progress>\n                <q-tooltip>{{ progressLabel }}</q-tooltip>\n            </div>\n        </template>\n        <template v-else>\n            <div class=\"text-weight-bold text-h6\">{{ progressLabel }}</div>\n        </template>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { QCircularProgress, QLinearProgress, setCssVar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { Entry, Field, FieldType, ProgressField, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ProgressField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ProgressField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const progress = ref<QLinearProgress | QCircularProgress | null>(null);\n        const updateMinValue = (minValue: string) => {\n            const value = Number.parseInt(minValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, minValue: value } as ProgressField);\n        };\n        const updateMaxValue = (maxValue: string) => {\n            const value = Number.parseInt(maxValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, maxValue: value } as ProgressField);\n        };\n        const updateValue = (value: string) => {\n            const value2 = Number.parseInt(value) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, value: value2 } as ProgressField);\n        };\n        const updateShowBar = (showBar: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, showBar } as ProgressField);\n        };\n        const updateBarType = (barType: { value: \"linear\" | \"circular\" }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                barType: barType.value,\n            } as ProgressField);\n        };\n        const updateBarColor = (barColor: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, barColor } as ProgressField);\n        };\n        const updateLabel = (label: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, label } as ProgressField);\n        };\n        const barValue = computed(() => {\n            return (\n                (props.modelValue as ProgressField).value /\n                ((props.modelValue as ProgressField).maxValue -\n                    (props.modelValue as ProgressField).minValue)\n            );\n        });\n        const progressLabel = computed(() => {\n            let l = props.modelValue.label.replaceAll(\"%min\", String(props.modelValue.minValue));\n            l = l.replaceAll(\"%max\", String(props.modelValue.maxValue));\n            l = l.replaceAll(\"%rem2\", String(((1 - barValue.value) * 100).toFixed(2)));\n            l = l.replaceAll(\"%rem\", String(props.modelValue.maxValue - props.modelValue.value));\n            l = l.replaceAll(\"%val2\", String((barValue.value * 100).toFixed(2)));\n            l = l.replaceAll(\"%val\", String(props.modelValue.value));\n            return l;\n        });\n        watchEffect(() => {\n            if (progress.value) {\n                setCssVar(\n                    \"primary\",\n                    (props.modelValue as ProgressField).barColor,\n                    progress.value.$el\n                );\n            }\n        });\n        const barOptions = [\n            {\n                label: \"Linear\",\n                value: \"linear\",\n            },\n            {\n                label: \"Circular\",\n                value: \"circular\",\n            },\n        ];\n\n        return {\n            FieldType,\n            updateLabel,\n            updateMinValue,\n            updateMaxValue,\n            updateValue,\n            updateShowBar,\n            updateBarType,\n            updateBarColor,\n            barOptions,\n            barValue,\n            progress,\n            progressLabel,\n        };\n    },\n});\n</script>\n","\nimport QCircularProgress from 'quasar/src/components/circular-progress/QCircularProgress.js';import QLinearProgress from 'quasar/src/components/linear-progress/QLinearProgress.js';import setCssVar from 'quasar/src/utils/set-css-var.js';;\nimport { computed, defineComponent, PropType, ref, watchEffect } from \"vue\";\n\nimport { Entry, Field, FieldType, ProgressField, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ProgressField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ProgressField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const progress = ref<QLinearProgress | QCircularProgress | null>(null);\n        const updateMinValue = (minValue: string) => {\n            const value = Number.parseInt(minValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, minValue: value } as ProgressField);\n        };\n        const updateMaxValue = (maxValue: string) => {\n            const value = Number.parseInt(maxValue) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, maxValue: value } as ProgressField);\n        };\n        const updateValue = (value: string) => {\n            const value2 = Number.parseInt(value) || 0;\n            emit(\"update:modelValue\", { ...props.modelValue, value: value2 } as ProgressField);\n        };\n        const updateShowBar = (showBar: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, showBar } as ProgressField);\n        };\n        const updateBarType = (barType: { value: \"linear\" | \"circular\" }) => {\n            emit(\"update:modelValue\", {\n                ...props.modelValue,\n                barType: barType.value,\n            } as ProgressField);\n        };\n        const updateBarColor = (barColor: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, barColor } as ProgressField);\n        };\n        const updateLabel = (label: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, label } as ProgressField);\n        };\n        const barValue = computed(() => {\n            return (\n                (props.modelValue as ProgressField).value /\n                ((props.modelValue as ProgressField).maxValue -\n                    (props.modelValue as ProgressField).minValue)\n            );\n        });\n        const progressLabel = computed(() => {\n            let l = props.modelValue.label.replaceAll(\"%min\", String(props.modelValue.minValue));\n            l = l.replaceAll(\"%max\", String(props.modelValue.maxValue));\n            l = l.replaceAll(\"%rem2\", String(((1 - barValue.value) * 100).toFixed(2)));\n            l = l.replaceAll(\"%rem\", String(props.modelValue.maxValue - props.modelValue.value));\n            l = l.replaceAll(\"%val2\", String((barValue.value * 100).toFixed(2)));\n            l = l.replaceAll(\"%val\", String(props.modelValue.value));\n            return l;\n        });\n        watchEffect(() => {\n            if (progress.value) {\n                setCssVar(\n                    \"primary\",\n                    (props.modelValue as ProgressField).barColor,\n                    progress.value.$el\n                );\n            }\n        });\n        const barOptions = [\n            {\n                label: \"Linear\",\n                value: \"linear\",\n            },\n            {\n                label: \"Circular\",\n                value: \"circular\",\n            },\n        ];\n\n        return {\n            FieldType,\n            updateLabel,\n            updateMinValue,\n            updateMaxValue,\n            updateValue,\n            updateShowBar,\n            updateBarType,\n            updateBarColor,\n            barOptions,\n            barValue,\n            progress,\n            progressLabel,\n        };\n    },\n});\n","import { render } from \"./ProgressField.vue?vue&type=template&id=88f0bab4\"\nimport script from \"./ProgressField.vue?vue&type=script&lang=ts\"\nexport * from \"./ProgressField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QColor from 'quasar/src/components/color/QColor.js';\nimport QLinearProgress from 'quasar/src/components/linear-progress/QLinearProgress.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QCircularProgress from 'quasar/src/components/circular-progress/QCircularProgress.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QIcon,QTooltip,QDialog,QSeparator,QCheckbox,QSelect,QPopupProxy,QColor,QLinearProgress,QBadge,QCircularProgress});\n","<template>\n    <div v-if=\"editView\">\n        <q-select\n            label=\"Categories\"\n            outlined\n            dense\n            multiple\n            :modelValue=\"modelValue.categories\"\n            @update:modelValue=\"updateCategories\"\n            :options=\"categories\"\n            class=\"q-mt-md\"\n            new-value-mode=\"add-unique\"\n            option-label=\"name\"\n            options-dense\n            option-value=\"id\"\n            emit-value\n            map-options\n            use-chips\n        >\n            <template v-slot:no-option>\n                <q-item dense>\n                    <q-item-section class=\"text-italic text-grey\"> No categories</q-item-section>\n                </q-item>\n            </template>\n        </q-select>\n        <select-entry\n            multiple\n            :modelValue=\"modelValue.entries\"\n            @update:modelValue=\"updateEntries\"\n            outlined\n            dense\n            class=\"q-mt-sm\"\n            options-dense\n            label=\"Entries\"\n        ></select-entry>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <q-list bordered separator class=\"rounded-borders\" v-if=\"entryReferences.length\">\n            <entry-link v-for=\"e in entryReferences\" :entryId=\"e\" :key=\"e\" item></entry-link>\n        </q-list>\n        <div class=\"text-subtitle2 text-grey\" v-else>No references for this field.</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { intersection } from \"lodash\";\nimport { computed, defineComponent, PropType, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    Entry,\n    FieldType,\n    ReferenceField,\n} from \"@/store/types\";\n\nimport EntryLink from \"../EntryLink.vue\";\nimport SelectEntry from \"../form/SelectEntry.vue\";\n\nexport default defineComponent({\n    name: \"ReferenceField\",\n    emits: [\"update:modelValue\"],\n    components: { SelectEntry, EntryLink },\n    props: {\n        modelValue: {\n            type: Object as PropType<ReferenceField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            props.entry.category\n                .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                .filter((c) => c !== undefined)\n        );\n        const entryReferences = computed(() =>\n            Object.values($store.state.entries)\n                .filter(\n                    (e) =>\n                        intersection(e.category, props.modelValue.categories).length ||\n                        props.modelValue.entries.includes(e.id)\n                )\n                .map((e) => e.id)\n        );\n\n        // Functions\n        const updateCategories = (catg: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, categories: catg } as ReferenceField);\n        };\n        const updateEntries = (entr: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, entries: entr } as ReferenceField);\n        };\n\n        // Effects\n        watchEffect(() => {\n            if (!props.editView) {\n                props.modelValue.categories.forEach(\n                    async (c) =>\n                        await $store.dispatch(API_FETCH_ENTRIES, { category: c, flush: false })\n                );\n                props.modelValue.entries.forEach(\n                    async (e) => await $store.dispatch(API_FETCH_ENTRY, { id: e })\n                );\n            }\n        });\n\n        return {\n            FieldType,\n            categories,\n            updateCategories,\n            updateEntries,\n            entryReferences,\n        };\n    },\n});\n</script>\n","\nimport { intersection } from \"lodash\";\nimport { computed, defineComponent, PropType, watchEffect } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_FETCH_ENTRIES,\n    API_FETCH_ENTRY,\n    Entry,\n    FieldType,\n    ReferenceField,\n} from \"@/store/types\";\n\nimport EntryLink from \"../EntryLink.vue\";\nimport SelectEntry from \"../form/SelectEntry.vue\";\n\nexport default defineComponent({\n    name: \"ReferenceField\",\n    emits: [\"update:modelValue\"],\n    components: { SelectEntry, EntryLink },\n    props: {\n        modelValue: {\n            type: Object as PropType<ReferenceField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        // Providers\n        const $store = useStore();\n\n        // Computed\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            props.entry.category\n                .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                .filter((c) => c !== undefined)\n        );\n        const entryReferences = computed(() =>\n            Object.values($store.state.entries)\n                .filter(\n                    (e) =>\n                        intersection(e.category, props.modelValue.categories).length ||\n                        props.modelValue.entries.includes(e.id)\n                )\n                .map((e) => e.id)\n        );\n\n        // Functions\n        const updateCategories = (catg: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, categories: catg } as ReferenceField);\n        };\n        const updateEntries = (entr: string[]) => {\n            emit(\"update:modelValue\", { ...props.modelValue, entries: entr } as ReferenceField);\n        };\n\n        // Effects\n        watchEffect(() => {\n            if (!props.editView) {\n                props.modelValue.categories.forEach(\n                    async (c) =>\n                        await $store.dispatch(API_FETCH_ENTRIES, { category: c, flush: false })\n                );\n                props.modelValue.entries.forEach(\n                    async (e) => await $store.dispatch(API_FETCH_ENTRY, { id: e })\n                );\n            }\n        });\n\n        return {\n            FieldType,\n            categories,\n            updateCategories,\n            updateEntries,\n            entryReferences,\n        };\n    },\n});\n","import { render } from \"./ReferenceField.vue?vue&type=template&id=140e799b\"\nimport script from \"./ReferenceField.vue?vue&type=script&lang=ts\"\nexport * from \"./ReferenceField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QSelect,QItem,QItemSection,QList});\n","<template>\n    <div v-if=\"editView\">\n        <q-input\n            label=\"Content\"\n            outlined\n            dense\n            :modelValue=\"modelValue.content\"\n            @update:modelValue=\"updateValue\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div class=\"text-body2\" v-if=\"modelValue.content\">{{ modelValue.content }}</div>\n        <div class=\"text-subtitle2 text-grey\" v-else>No content for this field.</div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"TextField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"TextField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./TextField.vue?vue&type=template&id=5148819b\"\nimport script from \"./TextField.vue?vue&type=script&lang=ts\"\nexport * from \"./TextField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput});\n","<template>\n    <div v-if=\"editView\">\n        <q-checkbox\n            :modelValue=\"modelValue.value\"\n            @update:modelValue=\"updateValue\"\n            style=\"transform: translateX(-10px)\"\n        >\n            <slot v-if=\"modelValue.value\">\n                On<span class=\"text-italic text-grey q-ml-sm\">\"{{ modelValue.whenTrue }}\"</span>\n            </slot>\n            <slot v-else>\n                Off<span class=\"text-italic text-grey q-ml-sm\">\"{{ modelValue.whenFalse }}\"</span>\n            </slot>\n        </q-checkbox>\n        <q-input\n            label=\"When on\"\n            outlined\n            class=\"q-mt-md\"\n            dense\n            :modelValue=\"modelValue.whenTrue\"\n            @update:modelValue=\"updateWhenTrue\"\n        ></q-input>\n        <q-input\n            label=\"When off\"\n            outlined\n            dense\n            class=\"q-mt-sm\"\n            :modelValue=\"modelValue.whenFalse\"\n            @update:modelValue=\"updateWhenFalse\"\n        ></q-input>\n    </div>\n    <div v-else>\n        <div class=\"text-subtitle2 q-mb-xs\">{{ modelValue.name }}</div>\n        <div class=\"text-body2\">\n            {{ modelValue.value ? modelValue.whenTrue : modelValue.whenFalse }}\n        </div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, FieldType, ToggleField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ToggleField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ToggleField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, value });\n        };\n        const updateWhenTrue = (whenTrue: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenTrue });\n        };\n        const updateWhenFalse = (whenFalse: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenFalse });\n        };\n\n        return {\n            FieldType,\n            updateValue,\n            updateWhenTrue,\n            updateWhenFalse,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, FieldType, ToggleField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ToggleField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<ToggleField>,\n            required: true,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (value: boolean) => {\n            emit(\"update:modelValue\", { ...props.modelValue, value });\n        };\n        const updateWhenTrue = (whenTrue: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenTrue });\n        };\n        const updateWhenFalse = (whenFalse: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, whenFalse });\n        };\n\n        return {\n            FieldType,\n            updateValue,\n            updateWhenTrue,\n            updateWhenFalse,\n        };\n    },\n});\n","import { render } from \"./ToggleField.vue?vue&type=template&id=25feb328\"\nimport script from \"./ToggleField.vue?vue&type=script&lang=ts\"\nexport * from \"./ToggleField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCheckbox,QInput});\n","import AttachmentsFieldV from \"@/components/fields/AttachmentsField.vue\";\nimport DescriptionFieldV from \"@/components/fields/DescriptionField.vue\";\nimport EmbedFieldV from \"@/components/fields/EmbedField.vue\";\nimport MapFieldV from \"@/components/fields/MapField.vue\";\nimport NumberFieldV from \"@/components/fields/NumberField.vue\";\nimport ProgressFieldV from \"@/components/fields/ProgressField.vue\";\nimport ReferenceFieldV from \"@/components/fields/ReferenceField.vue\";\nimport TextFieldV from \"@/components/fields/TextField.vue\";\nimport ToggleFieldV from \"@/components/fields/ToggleField.vue\";\n\nimport {\n    AttachmentsField,\n    DescriptionField,\n    EmbedField,\n    FieldType,\n    MapField,\n    NumberField,\n    ProgressField,\n    ReferenceField,\n    TextField,\n    ToggleField,\n} from \"./store/types\";\n\nexport const AppVersion = \"1.1.0\";\n\nexport const ChangelogUrl =\n    \"https://gist.githubusercontent.com/xankz/6fe765d5be0349ef42ae44f5e07f0018/raw/6d49e71c3538e1b15c5d62f6aabbe7f77c657c17/aj-changelog.md\";\n\nexport const AttachmentNameLength = 64;\n\nexport const DefaultTextField: Omit<TextField, \"type\" | \"id\"> = {\n    name: \"New Text\",\n    content: \"\",\n};\n\nexport const DefaultDescriptionField: Omit<DescriptionField, \"type\" | \"id\"> = {\n    name: \"New Description\",\n    content: \"\",\n};\n\nexport const DefaultNumberField: Omit<NumberField, \"type\" | \"id\"> = {\n    name: \"New Number\",\n    value: 0,\n};\n\nexport const DefaultToggleField: Omit<ToggleField, \"type\" | \"id\"> = {\n    name: \"New Toggle\",\n    value: true,\n    whenTrue: \"On\",\n    whenFalse: \"Off\",\n};\n\nexport const DefaultProgressField: Omit<ProgressField, \"type\" | \"id\"> = {\n    name: \"New Progress\",\n    maxValue: 100,\n    minValue: 0,\n    value: 100,\n    showBar: true,\n    barType: \"linear\",\n    barColor: \"#007bf5\",\n    label: \"%val / %max\",\n};\n\nexport const DefaultAttachmentsField: Omit<AttachmentsField, \"type\" | \"id\"> = {\n    name: \"New Attachments\",\n    attachments: [],\n};\n\nexport const DefaultEmbedField: Omit<EmbedField, \"type\" | \"id\"> = {\n    name: \"New Embed\",\n    url: \"\",\n};\n\nexport const DefaultMapField: Omit<MapField, \"type\" | \"id\"> = {\n    name: \"New Map\",\n    imageKey: undefined,\n    locations: [],\n};\n\nexport const DefaultReferenceField: Omit<ReferenceField, \"type\" | \"id\"> = {\n    name: \"New Reference\",\n    categories: [],\n    entries: [],\n};\n\nexport const FieldDefs = {\n    [FieldType.Text]: {\n        component: TextFieldV,\n        default: DefaultTextField,\n        label: \"Text\",\n        icon: \"short_text\",\n    },\n    [FieldType.Description]: {\n        component: DescriptionFieldV,\n        default: DefaultDescriptionField,\n        label: \"Description\",\n        icon: \"subject\",\n    },\n    [FieldType.Number]: {\n        component: NumberFieldV,\n        default: DefaultNumberField,\n        label: \"Number\",\n        icon: \"pin\",\n    },\n    [FieldType.Toggle]: {\n        component: ToggleFieldV,\n        default: DefaultToggleField,\n        label: \"Toggle\",\n        icon: \"toggle_on\",\n    },\n    [FieldType.Progress]: {\n        component: ProgressFieldV,\n        default: DefaultProgressField,\n        label: \"Progress\",\n        icon: \"horizontal_rule\",\n    },\n    [FieldType.Attachments]: {\n        component: AttachmentsFieldV,\n        default: DefaultAttachmentsField,\n        label: \"Attachments\",\n        icon: \"perm_media\",\n    },\n    [FieldType.Map]: {\n        component: MapFieldV,\n        default: DefaultMapField,\n        label: \"Map\",\n        icon: \"map\",\n    },\n    [FieldType.Reference]: {\n        component: ReferenceFieldV,\n        default: DefaultReferenceField,\n        label: \"Reference\",\n        icon: \"file_present\",\n    },\n    [FieldType.Embed]: {\n        component: EmbedFieldV,\n        default: DefaultEmbedField,\n        label: \"Embed\",\n        icon: \"link\",\n    },\n};\n\nexport const CreateFieldTree = [\n    {\n        label: \"General\",\n        icon: \"folder\",\n        selectable: false,\n        fieldType: \"_\",\n        children: Object.entries(FieldDefs).map((k) => ({\n            fieldType: k[0],\n            label: k[1].label,\n            icon: k[1].icon,\n        })),\n    },\n];\n\n//             { fieldType: FieldType.Reference, label: \"Reference\", icon: \"file_present\" },\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\" style=\"width: 800px\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">\"{{ entry.title }}\" - Attachments</div>\n                <q-space></q-space>\n                <q-btn\n                    icon=\"add\"\n                    color=\"primary\"\n                    flat\n                    round\n                    dense\n                    class=\"q-mr-sm\"\n                    @click=\"createAttachment\"\n                >\n                    <q-tooltip>Create a new attachment</q-tooltip>\n                </q-btn>\n                <q-btn icon=\"close\" flat round dense v-close-popup>\n                    <q-tooltip>Close dialog</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <q-card-section>\n                <q-splitter v-model=\"splitVal\" :limits=\"[40, 55]\">\n                    <template v-slot:before>\n                        <q-list\n                            separator\n                            dense\n                            v-if=\"!isEmpty(filteredAttachments)\"\n                            style=\"overflow: auto; height: 200px\"\n                        >\n                            <q-item\n                                clickable\n                                v-ripple\n                                v-for=\"(att, attName) in filteredAttachments\"\n                                :key=\"attName\"\n                                @click=\"setSelected(attName)\"\n                                :active=\"attName === selectedAttKey\"\n                            >\n                                <q-item-section\n                                    avatar\n                                    class=\"q-pr-none\"\n                                    style=\"min-width: 0; width: 28px\"\n                                >\n                                    <q-icon\n                                        :name=\"getAttachmentIcon(att.content_type)\"\n                                        size=\"20px\"\n                                    ></q-icon>\n                                </q-item-section>\n                                <q-item-section class=\"ellipsis\">\n                                    {{ attName }}\n                                </q-item-section>\n                                <q-item-section side>\n                                    <q-badge outline color=\"grey\">\n                                        {{ getExtension(att.content_type) || \"?\" }}\n                                    </q-badge>\n                                </q-item-section>\n                            </q-item>\n                        </q-list>\n                        <div v-else class=\"text-grey q-pa-md\">No attachments found.</div>\n                    </template>\n                    <template v-slot:after>\n                        <template v-if=\"selectedAttKey && selectedAtt\">\n                            <q-splitter\n                                horizontal\n                                v-model=\"selectedAttSplitter\"\n                                :limits=\"[40, 60]\"\n                                style=\"height: 200px\"\n                            >\n                                <template v-slot:before>\n                                    <template v-if=\"selectedAtt.content_type === 'text/plain'\">\n                                        <div\n                                            v-if=\"renderText(selectedAtt.data)\"\n                                            class=\"q-px-sm text-caption\"\n                                            style=\"line-height: 1.3em\"\n                                        >\n                                            {{ renderText(selectedAtt.data) }}\n                                        </div>\n                                        <div v-else class=\"q-px-sm text-grey\">Empty content</div>\n                                    </template>\n                                    <div v-else-if=\"selectedAtt.content_type.startsWith('audio')\">\n                                        <audio controls :src=\"selectedAttData\"></audio>\n                                    </div>\n                                    <div v-else-if=\"selectedAtt.content_type.startsWith('image')\">\n                                        <q-img\n                                            @click=\"zoomImage = true\"\n                                            :src=\"selectedAttData\"\n                                            class=\"cursor-pointer\"\n                                        ></q-img>\n                                        <q-dialog v-model=\"zoomImage\">\n                                            <q-img :src=\"selectedAttData\"></q-img>\n                                        </q-dialog>\n                                    </div>\n                                    <div v-else-if=\"selectedAtt.content_type.startsWith('video')\">\n                                        <video controls :src=\"selectedAttData\"></video>\n                                    </div>\n                                    <div v-else class=\"text-body text-grey q-px-sm\">\n                                        Unable to load preview\n                                    </div>\n                                </template>\n                                <template v-slot:after>\n                                    <q-markup-table flat dense>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-left text-grey\">Name</td>\n                                                <td class=\"text-right\">\n                                                    {{ truncate(selectedAttKey, { length: 16 }) }}\n                                                    <q-tooltip>{{ selectedAttKey }}</q-tooltip>\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left text-grey\">Type</td>\n                                                <td class=\"text-right\">\n                                                    {{\n                                                        truncate(selectedAtt.content_type, {\n                                                            length: 16,\n                                                        })\n                                                    }}\n                                                </td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left text-grey\">Size</td>\n                                                <td class=\"text-right\">\n                                                    {{ humanStorageSize(selectedAtt.data.length) }}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </q-markup-table>\n                                    <div class=\"row justify-end\">\n                                        <q-btn\n                                            round\n                                            icon=\"mode_edit\"\n                                            class=\"q-mr-sm\"\n                                            size=\"12px\"\n                                            flat\n                                            @click=\"replaceAttachment\"\n                                        >\n                                            <q-tooltip>Replace \"{{ selectedAttKey }}\"</q-tooltip>\n                                        </q-btn>\n                                        <q-btn\n                                            @click=\"deleteAttachment\"\n                                            round\n                                            icon=\"delete_outline\"\n                                            color=\"red\"\n                                            size=\"12px\"\n                                            flat\n                                        >\n                                            <q-tooltip>Delete \"{{ selectedAttKey }}\"</q-tooltip>\n                                        </q-btn>\n                                    </div>\n                                </template>\n                            </q-splitter>\n                        </template>\n                        <div v-else class=\"text-grey q-pa-md text-center\">\n                            No attachment selected.\n                        </div>\n                    </template>\n                </q-splitter>\n            </q-card-section>\n            <q-card-actions align=\"left\">\n                <div class=\"text-body q-pl-md text-grey\">\n                    {{ filteredAttachmentsLen }} attachment{{\n                        filteredAttachmentsLen === 1 ? \"\" : \"s\"\n                    }}\n                </div>\n                <q-space></q-space>\n                <q-btn flat color=\"primary\" label=\"OK\" @click=\"onOKClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { isEmpty, truncate } from \"lodash\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport { format, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_DELETE_ENTRY_ATTACHMENT,\n    API_FETCH_ENTRY,\n    API_UPDATE_ENTRY,\n    CreateAttachment,\n    FieldType,\n} from \"@/store/types\";\nimport { b64, getAttachmentIcon, renderText } from \"@/utils\";\n\nimport CreateAttachmentDialog from \"./CreateAttachmentDialog.vue\";\nimport DeleteAttachmentDialog from \"./DeleteAttachmentDialog.vue\";\n\nexport default defineComponent({\n    name: \"ViewAttachmentsDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const splitVal = ref(55);\n        const selectedAttKey = ref(\"\");\n        const selectedAttSplitter = ref(30);\n        const zoomImage = ref(false);\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const filteredAttachments = computed(() => entry.value.attachments);\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n        const selectedAtt = computed(\n            () => entry.value.attachments[selectedAttKey.value] || undefined\n        );\n        const selectedAttData = computed(() =>\n            selectedAtt.value\n                ? b64(selectedAtt.value.content_type, selectedAtt.value.data as string)\n                : undefined\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (key in entry.value.attachments) {\n                selectedAttKey.value = key;\n            }\n        };\n        const createAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: filteredAttachments,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    await $store.dispatch(API_FETCH_ENTRY, { id: props.entryId, force: true });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n        const replaceAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: entry.value.attachments,\n                    replace: selectedAttKey.value,\n                    replaceData:\n                        selectedAtt.value.content_type === \"text/plain\"\n                            ? renderText(selectedAtt.value.data as string)\n                            : undefined,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    const oldAttName = selectedAttKey.value;\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: oldAttName,\n                    });\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment updated\", type: \"positive\" });\n                    // Attempt to auto-fix references in fields\n                    if (entry.value) {\n                        const fields = entry.value.fields.map((f) => {\n                            // TODO: Where/why does f.type get saved as string?\n                            if (typeof f.type == \"string\") {\n                                f.type = Number.parseInt(f.type);\n                            }\n                            switch (f.type) {\n                                case FieldType.Attachments:\n                                    f.attachments = f.attachments.map((a) => {\n                                        return a == oldAttName ? attachment.name : a;\n                                    });\n                                    break;\n                                case FieldType.Map:\n                                    f.imageKey =\n                                        f.imageKey == oldAttName ? attachment.name : f.imageKey;\n                                    break;\n                            }\n                            return f;\n                        });\n\n                        // Update avatar attachment reference as well\n                        if (\n                            entry.value.avatar.type == \"attachment\" &&\n                            entry.value.avatar.data == oldAttName\n                        ) {\n                            entry.value.avatar.data = attachment.name;\n                        }\n                        await $store.dispatch(API_UPDATE_ENTRY, {\n                            id: props.entryId,\n                            data: { ...entry.value, fields },\n                        });\n                    }\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const deleteAttachment = () => {\n            if (!selectedAttKey.value || !selectedAtt.value) {\n                return;\n            }\n            $q.dialog({\n                component: DeleteAttachmentDialog,\n                componentProps: {\n                    name: selectedAttKey.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: selectedAttKey.value,\n                    });\n                    selectedAttKey.value = \"\";\n                    $q.notify({ message: \"Attachment deleted\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        // Effects\n        onMounted(() => {\n            // Fetch entry\n        });\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            splitVal,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            createAttachment,\n            getAttachmentIcon,\n            selectedAtt,\n            selectedAttKey,\n            setSelected,\n            entry,\n            renderText,\n            deleteAttachment,\n            isEmpty,\n            selectedAttSplitter,\n            truncate,\n            zoomImage,\n            selectedAttData,\n            getExtension: mime.extension,\n            replaceAttachment,\n            humanStorageSize: format.humanStorageSize,\n            b64,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section>\n                <div class=\"text-h6\">Delete attachment \"{{ name }}\"</div>\n            </q-card-section>\n            <q-card-section>\n                Are you sure you want to delete\n                <span class=\"text-weight-bold\">\"{{ name }}\"?</span> This action cannot be undone!\n                <br />\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" flat />\n                <q-btn color=\"red\" label=\"Delete\" @click=\"onOKClick\" flat />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteAttachmentDialog\",\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteAttachmentDialog\",\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./DeleteAttachmentDialog.vue?vue&type=template&id=51f373d6\"\nimport script from \"./DeleteAttachmentDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./DeleteAttachmentDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QCardActions,QBtn});\n","\nimport { isEmpty, truncate } from \"lodash\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport * as mime from \"mime-types\";\nimport format from 'quasar/src/utils/format.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onMounted, ref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_DELETE_ENTRY_ATTACHMENT,\n    API_FETCH_ENTRY,\n    API_UPDATE_ENTRY,\n    CreateAttachment,\n    FieldType,\n} from \"@/store/types\";\nimport { b64, getAttachmentIcon, renderText } from \"@/utils\";\n\nimport CreateAttachmentDialog from \"./CreateAttachmentDialog.vue\";\nimport DeleteAttachmentDialog from \"./DeleteAttachmentDialog.vue\";\n\nexport default defineComponent({\n    name: \"ViewAttachmentsDialog\",\n    props: {\n        entryId: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup(props) {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const splitVal = ref(55);\n        const selectedAttKey = ref(\"\");\n        const selectedAttSplitter = ref(30);\n        const zoomImage = ref(false);\n\n        // Computed\n        const entry = computed(() => $store.state.entries[props.entryId]);\n        const filteredAttachments = computed(() => entry.value.attachments);\n        const filteredAttachmentsLen = computed(\n            () => Object.keys(filteredAttachments.value).length\n        );\n        const selectedAtt = computed(\n            () => entry.value.attachments[selectedAttKey.value] || undefined\n        );\n        const selectedAttData = computed(() =>\n            selectedAtt.value\n                ? b64(selectedAtt.value.content_type, selectedAtt.value.data as string)\n                : undefined\n        );\n\n        // Functions\n        const setSelected = (key: string) => {\n            if (key in entry.value.attachments) {\n                selectedAttKey.value = key;\n            }\n        };\n        const createAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: filteredAttachments,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    await $store.dispatch(API_FETCH_ENTRY, { id: props.entryId, force: true });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment saved\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n        const replaceAttachment = () => {\n            $q.dialog({\n                component: CreateAttachmentDialog,\n                componentProps: {\n                    attachments: entry.value.attachments,\n                    replace: selectedAttKey.value,\n                    replaceData:\n                        selectedAtt.value.content_type === \"text/plain\"\n                            ? renderText(selectedAtt.value.data as string)\n                            : undefined,\n                },\n            }).onOk(async (attachment: CreateAttachment) => {\n                if (!attachment) {\n                    return;\n                }\n                try {\n                    const oldAttName = selectedAttKey.value;\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: oldAttName,\n                    });\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        attachment,\n                    });\n                    setSelected(attachment.name);\n                    $q.notify({ message: \"Attachment updated\", type: \"positive\" });\n                    // Attempt to auto-fix references in fields\n                    if (entry.value) {\n                        const fields = entry.value.fields.map((f) => {\n                            // TODO: Where/why does f.type get saved as string?\n                            if (typeof f.type == \"string\") {\n                                f.type = Number.parseInt(f.type);\n                            }\n                            switch (f.type) {\n                                case FieldType.Attachments:\n                                    f.attachments = f.attachments.map((a) => {\n                                        return a == oldAttName ? attachment.name : a;\n                                    });\n                                    break;\n                                case FieldType.Map:\n                                    f.imageKey =\n                                        f.imageKey == oldAttName ? attachment.name : f.imageKey;\n                                    break;\n                            }\n                            return f;\n                        });\n\n                        // Update avatar attachment reference as well\n                        if (\n                            entry.value.avatar.type == \"attachment\" &&\n                            entry.value.avatar.data == oldAttName\n                        ) {\n                            entry.value.avatar.data = attachment.name;\n                        }\n                        await $store.dispatch(API_UPDATE_ENTRY, {\n                            id: props.entryId,\n                            data: { ...entry.value, fields },\n                        });\n                    }\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const deleteAttachment = () => {\n            if (!selectedAttKey.value || !selectedAtt.value) {\n                return;\n            }\n            $q.dialog({\n                component: DeleteAttachmentDialog,\n                componentProps: {\n                    name: selectedAttKey.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY_ATTACHMENT, {\n                        id: props.entryId,\n                        name: selectedAttKey.value,\n                    });\n                    selectedAttKey.value = \"\";\n                    $q.notify({ message: \"Attachment deleted\", type: \"positive\" });\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        // Effects\n        onMounted(() => {\n            // Fetch entry\n        });\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            splitVal,\n            filteredAttachments,\n            filteredAttachmentsLen,\n            createAttachment,\n            getAttachmentIcon,\n            selectedAtt,\n            selectedAttKey,\n            setSelected,\n            entry,\n            renderText,\n            deleteAttachment,\n            isEmpty,\n            selectedAttSplitter,\n            truncate,\n            zoomImage,\n            selectedAttData,\n            getExtension: mime.extension,\n            replaceAttachment,\n            humanStorageSize: format.humanStorageSize,\n            b64,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./ViewAttachmentsDialog.vue?vue&type=template&id=1010728a\"\nimport script from \"./ViewAttachmentsDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./ViewAttachmentsDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QSplitter from 'quasar/src/components/splitter/QSplitter.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QMarkupTable from 'quasar/src/components/markup-table/QMarkupTable.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport Ripple from 'quasar/src/directives/Ripple.js';\nimport qInstall from \"../../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QSplitter,QList,QItem,QItemSection,QIcon,QBadge,QImg,QMarkupTable,QCardActions});qInstall(script, 'directives', {ClosePopup,Ripple});\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section>\n                <div class=\"text-h6\">Delete entry \"{{ entry.title }}\"</div>\n            </q-card-section>\n            <q-card-section>\n                Are you sure you want to delete\n                <span class=\"text-weight-bold\">\"{{ entry.title }}\"?</span> This action cannot be\n                undone!\n                <br />\n                <div class=\"text-red q-mt-sm\">\n                    All fields and relationships will be permanently deleted.\n                </div>\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" flat />\n                <q-btn color=\"red\" label=\"Delete\" @click=\"onOKClick\" flat />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"DeleteEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./DeleteEntryDialog.vue?vue&type=template&id=7b12065e\"\nimport script from \"./DeleteEntryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./DeleteEntryDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QCardActions,QBtn});\n","<template>\n    <!-- notice dialogRef here -->\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\" style=\"width: 800px\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">Editing \"{{ entryModel.title }}\"</div>\n                <q-space></q-space>\n                <q-btn\n                    icon=\"add\"\n                    color=\"primary\"\n                    flat\n                    round\n                    dense\n                    class=\"q-mr-sm\"\n                    @click=\"createFieldTooltip = false\"\n                >\n                    <q-popup-proxy v-model=\"createFieldPopup\">\n                        <q-list>\n                            <q-item class=\"q-px-sm q-pb-none\">\n                                <q-input\n                                    label=\"Search fields...\"\n                                    outlined\n                                    dense\n                                    autofocus\n                                    v-model=\"createFieldTreeFilter\"\n                                    :ref=\"createFieldTreeFilterRef\"\n                                ></q-input>\n                            </q-item>\n                            <q-item class=\"q-px-sm\">\n                                <q-tree\n                                    class=\"full-width\"\n                                    :nodes=\"createFieldTree\"\n                                    node-key=\"fieldType\"\n                                    :filter=\"createFieldTreeFilter\"\n                                    v-model:expanded=\"createFieldTreeExpanded\"\n                                    v-model:selected=\"createFieldTreeSelected\"\n                                    @update:selected=\"onCreateFieldSubmit\"\n                                ></q-tree>\n                            </q-item>\n                        </q-list>\n                    </q-popup-proxy>\n                    <q-tooltip v-model=\"createFieldTooltip\">Create a new field</q-tooltip>\n                </q-btn>\n                <q-btn\n                    icon=\"delete_outline\"\n                    color=\"red\"\n                    flat\n                    round\n                    dense\n                    class=\"q-mr-sm\"\n                    @click=\"deleteEntry\"\n                >\n                    <q-tooltip>Delete \"{{ entryModel.title }}\"</q-tooltip>\n                </q-btn>\n                <q-btn icon=\"close\" flat round dense v-close-popup>\n                    <q-tooltip>Cancel editing</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <div class=\"row\">\n                <div class=\"col col-md-6\">\n                    <q-card-section class=\"q-pt-none\">\n                        <q-tree\n                            :nodes=\"fieldTree\"\n                            node-key=\"key\"\n                            selected-color=\"primary\"\n                            v-model:selected=\"fieldTreeSelected\"\n                            v-model:expanded=\"fieldTreeExpanded\"\n                            ref=\"fieldTreeRef\"\n                            accordion\n                        >\n                            <template v-slot:default-header=\"prop\">\n                                <div class=\"row items-center\">\n                                    <q-icon\n                                        v-if=\"prop.node.icon\"\n                                        :name=\"prop.node.icon\"\n                                        size=\"20px\"\n                                        class=\"q-mr-sm\"\n                                        :class=\"{\n                                            'text-red':\n                                                !prop.node.label || prop.node.icon == 'warning',\n                                        }\"\n                                    />\n                                    <q-img\n                                        v-else\n                                        :src=\"prop.node.avatar\"\n                                        width=\"20px\"\n                                        class=\"rounded-borders q-mr-sm\"\n                                    ></q-img>\n                                    <div\n                                        v-if=\"prop.node.label\"\n                                        :class=\"{ 'text-red': prop.node.icon == 'warning' }\"\n                                    >\n                                        {{ prop.node.label }}\n                                    </div>\n                                    <div v-else class=\"text-italic text-red\">Untitled field</div>\n                                </div>\n                            </template>\n                        </q-tree>\n                    </q-card-section>\n                </div>\n                <div class=\"col col-md-6\" v-if=\"fieldTreeSelected === 'entry'\">\n                    <q-card-section class=\"q-pt-none\">\n                        <q-form>\n                            <div class=\"row items-center\">\n                                <q-avatar\n                                    :icon=\"entryModel.avatar.data\"\n                                    class=\"q-mr-sm cursor-pointer\"\n                                    rounded\n                                    color=\"grey-4\"\n                                    text-color=\"dark\"\n                                    size=\"56px\"\n                                    v-if=\"entryModel.avatar.type === 'icon'\"\n                                >\n                                    <q-tooltip>Change entry avatar</q-tooltip>\n                                    <q-popup-proxy\n                                        max-width=\"200px\"\n                                        v-model=\"showEntryAvatarDialog\"\n                                    >\n                                        <entry-icon-dialog\n                                            :entry=\"entry\"\n                                            useAttachments\n                                            @attach=\"updateEntryAvatar\"\n                                        ></entry-icon-dialog>\n                                    </q-popup-proxy>\n                                </q-avatar>\n                                <q-avatar\n                                    v-else\n                                    class=\"q-mr-sm cursor-pointer\"\n                                    rounded\n                                    color=\"grey-4\"\n                                    text-color=\"dark\"\n                                    size=\"56px\"\n                                >\n                                    <q-tooltip>Change entry avatar</q-tooltip>\n                                    <img :src=\"entryAvatar\" />\n                                    <q-popup-proxy\n                                        max-width=\"200px\"\n                                        v-model=\"showEntryAvatarDialog\"\n                                    >\n                                        <entry-icon-dialog\n                                            :entry=\"entry\"\n                                            useAttachments\n                                            @attach=\"updateEntryAvatar\"\n                                        ></entry-icon-dialog>\n                                    </q-popup-proxy>\n                                </q-avatar>\n                                <q-input\n                                    label=\"Title\"\n                                    outlined\n                                    class=\"col-grow\"\n                                    v-model=\"entryModel.title\"\n                                ></q-input>\n                            </div>\n                            <q-select\n                                label=\"In category...\"\n                                outlined\n                                class=\"q-mt-sm\"\n                                dense\n                                multiple\n                                v-model=\"entryModel.category\"\n                                :options=\"categories\"\n                                new-value-mode=\"add-unique\"\n                                option-label=\"name\"\n                                options-dense\n                                option-value=\"id\"\n                                emit-value\n                                map-options\n                                use-chips\n                            >\n                                <template v-slot:no-option>\n                                    <q-item dense>\n                                        <q-item-section class=\"text-italic text-grey\">\n                                            No categories\n                                        </q-item-section>\n                                    </q-item>\n                                </template>\n                            </q-select>\n                        </q-form>\n                    </q-card-section>\n                </div>\n                <div class=\"col col-md-6\" v-else-if=\"currentField\">\n                    <q-card-section class=\"q-pt-none\">\n                        <q-form>\n                            <q-input\n                                label=\"Name\"\n                                outlined\n                                dense\n                                v-model=\"currentField.name\"\n                                ref=\"currentFieldName\"\n                            >\n                            </q-input>\n                            <q-separator class=\"q-my-md\"></q-separator>\n                            <component\n                                :is=\"getComponentFromField(currentField.type)\"\n                                :editView=\"true\"\n                                :entry=\"entryModel\"\n                                v-model=\"currentField\"\n                            ></component>\n                            <div class=\"row q-mt-md\">\n                                <q-btn-group flat>\n                                    <q-btn\n                                        color=\"primary\"\n                                        flat\n                                        icon=\"north\"\n                                        @click=\"moveCurrentField(-1)\"\n                                        class=\"q-px-sm\"\n                                    >\n                                        <q-tooltip>\n                                            Move current field up\n                                        </q-tooltip>\n                                    </q-btn>\n                                    <q-btn\n                                        color=\"primary\"\n                                        flat\n                                        icon=\"south\"\n                                        class=\"q-px-sm\"\n                                        @click=\"moveCurrentField(1)\"\n                                    >\n                                        <q-tooltip>\n                                            Move current field down\n                                        </q-tooltip>\n                                    </q-btn>\n                                </q-btn-group>\n                                <q-btn\n                                    class=\"q-ml-auto\"\n                                    color=\"red\"\n                                    flat\n                                    label=\"Delete field\"\n                                    @click=\"deleteField\"\n                                ></q-btn>\n                            </div>\n                        </q-form>\n                    </q-card-section>\n                </div>\n                <div\n                    class=\"col col-md-6 text-h6 align-items-center q-px-lg q-py-xl text-grey\"\n                    v-else\n                >\n                    <template v-if=\"entryModel.fields.length\">\n                        Select a field to view more information\n                    </template>\n                    <template v-else>Create a field to get started</template>\n                </div>\n            </div>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" flat label=\"Save changes\" @click=\"submit\" />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { nanoid } from \"nanoid\";\nimport { QInput, QTree, useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, reactive, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { CreateFieldTree, FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_UPDATE_ENTRY, Entry, Field, FieldType } from \"@/store/types\";\n\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EntryIconDialog from \"./EntryIconDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EditEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n        entryID: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    components: { EntryIconDialog },\n\n    setup(props) {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const entryModel = reactive({ ...props.entry });\n        const currentFieldName = ref<QInput | null>(null);\n\n        const entryAvatar = computed(() =>\n            $store.getters.entryAttachment(props.entryID, entryModel.avatar.data)\n        );\n\n        const mapKeyToModel = (key: string): Field | undefined => {\n            if (!key) {\n                return undefined;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    return entryModel.fields[i];\n                }\n            }\n            return undefined;\n        };\n\n        const setModelFromKey = (key: string, v: Field) => {\n            if (!key) {\n                return;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    entryModel.fields[i] = v;\n                }\n            }\n            return;\n        };\n\n        const mapFieldToIcon = (t: FieldType): string => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].icon;\n            } else {\n                return \"help\";\n            }\n        };\n\n        const fieldTreeRef = ref<QTree | null>(null);\n        const fieldTreeSelected = ref<string | null>(null);\n        const fieldTreeExpanded = ref<string[]>([\"entry\"]);\n        const createFieldPopup = ref(false);\n        const createFieldTreeSelected = ref(null);\n        const currentField = computed({\n            get: () => mapKeyToModel(fieldTreeSelected.value as string),\n            set: (v) => {\n                if (!v) {\n                    return;\n                }\n                setModelFromKey(fieldTreeSelected.value as string, v);\n            },\n        });\n        const showEntryAvatarDialog = ref(false);\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        const moveCurrentField = (delta: number) => {\n            if (!currentField.value) return;\n            const index = entryModel.fields.indexOf(currentField.value);\n            if (index === -1) return;\n            const newIndex = index + delta;\n            if (newIndex < 0 || newIndex === entryModel.fields.length) return;\n            const indexes = [index, newIndex].sort();\n            entryModel.fields.splice(\n                indexes[0],\n                2,\n                entryModel.fields[indexes[1]],\n                entryModel.fields[indexes[0]]\n            );\n        };\n\n        const genFieldTree = (model: Entry) => {\n            const head = {\n                label: model.title,\n                avatar: model.avatar.type == \"attachment\" ? entryAvatar.value : undefined,\n                icon: model.avatar.type == \"icon\" ? model.avatar.data : undefined,\n                children: [] as object,\n                key: \"entry\",\n            };\n            head.children = model.fields.map((f) => {\n                if (!f) {\n                    return {\n                        label: \"Broken field\",\n                        key: nanoid(13),\n                        icon: \"warning\",\n                    };\n                }\n                switch (f.type) {\n                    default:\n                        return { label: f.name, key: f.id, icon: mapFieldToIcon(f.type) };\n                }\n            });\n            return [head];\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: entryModel,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, props.entryID);\n                    onDialogOK();\n                    $router.push(`/j/${currentJournal.value}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const updateEntryAvatar = (att: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            showEntryAvatarDialog.value = false;\n            if (att.type === \"image\") return;\n            entryModel.avatar = { type: att.type, data: att.data as string };\n        };\n\n        const deleteField = () => {\n            if (!currentField.value) {\n                return;\n            }\n            $q.dialog({\n                title: `Delete field \"${currentField.value.name}\"`,\n                message: `Are you sure you want to delete \"${currentField.value.name}\"? This action cannot be undone!`,\n                cancel: true,\n                persistent: true,\n                ok: {\n                    color: \"red\",\n                    label: \"Delete\",\n                    flat: true,\n                },\n            }).onOk(() => {\n                // Delete field from `entry` model\n                for (let i = 0; i < entryModel.fields.length; i++) {\n                    if (currentField.value?.id == entryModel.fields[i].id) {\n                        // delete entryModel.fields[i];\n                        entryModel.fields = entryModel.fields.filter(\n                            (f) => f.id != currentField.value?.id\n                        );\n                        break;\n                    }\n                }\n            });\n        };\n\n        const submitCreateField = (t: FieldType) => {\n            const id = nanoid(13);\n            const f = { ...FieldDefs[t].default, type: t, id } as Field;\n            entryModel.fields.push(f);\n            createFieldTreeSelected.value = null;\n            fieldTreeSelected.value = f.id;\n            createFieldPopup.value = false;\n\n            // Re-expand field tree if not already expanded\n            if (!fieldTreeExpanded.value.includes(\"entry\")) {\n                fieldTreeExpanded.value.push(\"entry\");\n            }\n\n            // Focus name field\n            if (currentFieldName.value) {\n                currentFieldName.value.focus();\n            }\n        };\n\n        const getComponentFromField = (t: FieldType) => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].component;\n            } else {\n                return ErrorField;\n            }\n        };\n\n        const state = {\n            entryModel,\n            currentField,\n            fieldTreeRef,\n            fieldTree: computed(() => genFieldTree(entryModel)),\n            fieldTreeSelected,\n            fieldTreeExpanded,\n            createFieldTree: CreateFieldTree,\n            createFieldTooltip: ref(false),\n            createFieldPopup,\n            createFieldTreeExpanded: ref([\"_\"]), // \"_\" fieldType special flag\n            createFieldTreeFilter: ref(\"\"),\n            createFieldTreeFilterRef: ref(null),\n            createFieldTreeSelected,\n            getComponentFromField,\n            submitCreateField,\n            onCreateFieldSubmit: (t: FieldType) => {\n                submitCreateField(t);\n            },\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n        };\n\n        const submit = async () => {\n            // Update entry\n            try {\n                await $store.dispatch(API_UPDATE_ENTRY, { id: props.entryID, data: entryModel });\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ message: e, type: \"negative\" });\n            }\n        };\n\n        return {\n            // This is REQUIRED;\n            // Need to inject these (from useDialogPluginComponent() call)\n            // into the vue scope for the vue html template\n            dialogRef,\n            onDialogHide,\n\n            ...state,\n            submit,\n            currentFieldName,\n            deleteField,\n            deleteEntry,\n            entryAvatar,\n            showEntryAvatarDialog,\n            moveCurrentField,\n            updateEntryAvatar,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.q-tree > .q-tree__node--child > .q-tree__node-header {\n    padding-left: 0;\n}\n</style>\n","<template>\n    <q-tabs class=\"text-primary\" v-model=\"tab\" dense>\n        <q-tab label=\"Icon\" name=\"icon\"></q-tab>\n        <q-tab label=\"Image\" name=\"image\" v-if=\"!useAttachments\"></q-tab>\n        <q-tab label=\"Attachment\" name=\"attachment\" v-if=\"useAttachments\"></q-tab>\n    </q-tabs>\n    <q-separator></q-separator>\n    <q-tab-panels v-model=\"tab\" animated>\n        <q-tab-panel name=\"icon\" class=\"text-dark\">\n            <q-list :style=\"{ maxHeight: '150px' }\">\n                <q-item class=\"column q-pa-none\" v-for=\"g in iconGroups\" :key=\"g\">\n                    <q-item-label caption>{{ g.category }}</q-item-label>\n                    <q-item-label class=\"full-width row q-my-xs\">\n                        <q-icon\n                            v-for=\"i in g.icons\"\n                            :name=\"i\"\n                            :key=\"i\"\n                            class=\"q-pa-xs cursor-pointer\"\n                            size=\"16px\"\n                            @click=\"attachIcon(i)\"\n                        ></q-icon>\n                    </q-item-label>\n                </q-item>\n            </q-list>\n        </q-tab-panel>\n        <q-tab-panel name=\"image\" v-if=\"!useAttachments\">\n            <q-file\n                bottom-slots\n                accept=\"image/*\"\n                class=\"full-width\"\n                placeholder=\"Choose one image...\"\n                v-model=\"selectedImage\"\n            >\n                <template v-slot:hint>Images only. 512x512 recommended.</template>\n            </q-file>\n            <q-btn\n                color=\"primary\"\n                label=\"Attach\"\n                class=\"full-width q-mt-lg\"\n                size=\"sm\"\n                @click=\"attachImage\"\n            ></q-btn>\n        </q-tab-panel>\n        <q-tab-panel name=\"attachment\" class=\"text-dark\" v-if=\"useAttachments\">\n            <q-btn\n                outline\n                dense\n                label=\"Select an attachment\"\n                color=\"primary\"\n                @click=\"selectAttachment\"\n            ></q-btn>\n        </q-tab-panel>\n    </q-tab-panels>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nimport SelectAttachmentsDialog from \"./attachments/SelectAttachmentsDialog.vue\";\n\ninterface EntryIconDialogData {\n    selectedImage?: File;\n    tab: \"icon\" | \"image\";\n    iconGroups: {\n        category: string;\n        icons: string[];\n    }[];\n}\n\nexport default defineComponent({\n    name: \"EntryIconDialog\",\n    props: {\n        useAttachments: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n        },\n    },\n    emits: [\"attach\"],\n    methods: {\n        attachImage() {\n            if (this.selectedImage) {\n                this.$emit(\"attach\", { type: \"image\", data: this.selectedImage });\n            }\n        },\n        attachIcon(icon: string) {\n            this.$emit(\"attach\", { type: \"icon\", data: icon });\n        },\n        selectAttachment() {\n            if (!this.entry) {\n                return;\n            }\n            this.$q\n                .dialog({\n                    component: SelectAttachmentsDialog,\n                    componentProps: {\n                        entryId: this.entry.id,\n                    },\n                })\n                .onOk((val: string) => {\n                    this.$emit(\"attach\", { type: \"attachment\", data: val });\n                });\n        },\n    },\n    data() {\n        return {\n            selectedImage: undefined,\n            tab: \"icon\",\n            iconGroups: [\n                {\n                    category: \"Standard\",\n                    icons: [\"subject\", \"person\", \"map\"],\n                },\n                {\n                    category: \"Figures\",\n                    icons: [\n                        \"person\",\n                        \"group\",\n                        \"groups\",\n                        \"directions_run\",\n                        \"elderly\",\n                        \"emoji_people\",\n                        \"self_improvement\",\n                        \"record_voice_over\",\n                        \"manage_accounts\",\n                        \"accessible\",\n                        \"sentiment_very_satisfied\",\n                        \"sentiment_satisfied\",\n                        \"sentiment_neutral\",\n                        \"sentiment_dissatisfied\",\n                        \"sentiment_very_dissatisfied\",\n                        \"mood_bad\",\n                    ],\n                },\n                {\n                    category: \"Locations\",\n                    icons: [\n                        \"home\",\n                        \"apartment\",\n                        \"corporate_fare\",\n                        \"fence\",\n                        \"holiday_village\",\n                        \"foundation\",\n                        \"festival\",\n                        \"store_mall_directory\",\n                        \"storefront\",\n                        \"terrain\",\n                        \"map\",\n                        \"park\",\n                        \"place\",\n                        \"attractions\",\n                        \"home_work\",\n                        \"public\",\n                    ],\n                },\n                {\n                    category: \"Miscellaneous\",\n                    icons: [\n                        \"radio_button_checked\",\n                        \"radio_button_unchecked\",\n                        \"trip_origin\",\n                        \"lens\",\n                        \"adjust\",\n                        \"device_hub\",\n                        \"bubble_chart\",\n                        \"error\",\n                        \"stars\",\n                        \"build_circle\",\n                    ],\n                },\n            ],\n        } as EntryIconDialogData;\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry } from \"@/store/types\";\n\nimport SelectAttachmentsDialog from \"./attachments/SelectAttachmentsDialog.vue\";\n\ninterface EntryIconDialogData {\n    selectedImage?: File;\n    tab: \"icon\" | \"image\";\n    iconGroups: {\n        category: string;\n        icons: string[];\n    }[];\n}\n\nexport default defineComponent({\n    name: \"EntryIconDialog\",\n    props: {\n        useAttachments: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n        },\n    },\n    emits: [\"attach\"],\n    methods: {\n        attachImage() {\n            if (this.selectedImage) {\n                this.$emit(\"attach\", { type: \"image\", data: this.selectedImage });\n            }\n        },\n        attachIcon(icon: string) {\n            this.$emit(\"attach\", { type: \"icon\", data: icon });\n        },\n        selectAttachment() {\n            if (!this.entry) {\n                return;\n            }\n            this.$q\n                .dialog({\n                    component: SelectAttachmentsDialog,\n                    componentProps: {\n                        entryId: this.entry.id,\n                    },\n                })\n                .onOk((val: string) => {\n                    this.$emit(\"attach\", { type: \"attachment\", data: val });\n                });\n        },\n    },\n    data() {\n        return {\n            selectedImage: undefined,\n            tab: \"icon\",\n            iconGroups: [\n                {\n                    category: \"Standard\",\n                    icons: [\"subject\", \"person\", \"map\"],\n                },\n                {\n                    category: \"Figures\",\n                    icons: [\n                        \"person\",\n                        \"group\",\n                        \"groups\",\n                        \"directions_run\",\n                        \"elderly\",\n                        \"emoji_people\",\n                        \"self_improvement\",\n                        \"record_voice_over\",\n                        \"manage_accounts\",\n                        \"accessible\",\n                        \"sentiment_very_satisfied\",\n                        \"sentiment_satisfied\",\n                        \"sentiment_neutral\",\n                        \"sentiment_dissatisfied\",\n                        \"sentiment_very_dissatisfied\",\n                        \"mood_bad\",\n                    ],\n                },\n                {\n                    category: \"Locations\",\n                    icons: [\n                        \"home\",\n                        \"apartment\",\n                        \"corporate_fare\",\n                        \"fence\",\n                        \"holiday_village\",\n                        \"foundation\",\n                        \"festival\",\n                        \"store_mall_directory\",\n                        \"storefront\",\n                        \"terrain\",\n                        \"map\",\n                        \"park\",\n                        \"place\",\n                        \"attractions\",\n                        \"home_work\",\n                        \"public\",\n                    ],\n                },\n                {\n                    category: \"Miscellaneous\",\n                    icons: [\n                        \"radio_button_checked\",\n                        \"radio_button_unchecked\",\n                        \"trip_origin\",\n                        \"lens\",\n                        \"adjust\",\n                        \"device_hub\",\n                        \"bubble_chart\",\n                        \"error\",\n                        \"stars\",\n                        \"build_circle\",\n                    ],\n                },\n            ],\n        } as EntryIconDialogData;\n    },\n});\n","import { render } from \"./EntryIconDialog.vue?vue&type=template&id=1e4c7db4\"\nimport script from \"./EntryIconDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./EntryIconDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QTabs from 'quasar/src/components/tabs/QTabs.js';\nimport QTab from 'quasar/src/components/tabs/QTab.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QTabPanels from 'quasar/src/components/tab-panels/QTabPanels.js';\nimport QTabPanel from 'quasar/src/components/tab-panels/QTabPanel.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QFile from 'quasar/src/components/file/QFile.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QTabs,QTab,QSeparator,QTabPanels,QTabPanel,QList,QItem,QItemLabel,QIcon,QFile,QBtn});\n","<template>\n    <div class=\"text-subtitle2 q-mb-xs text-negative\">Error loading field!</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ErrorField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n</script>\n","\nimport { defineComponent, PropType } from \"vue\";\n\nimport { Entry, Field, FieldType, TextField } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"ErrorField\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<Field>,\n        },\n        editView: {\n            type: Boolean,\n            default: false,\n        },\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n    },\n    setup: (props, { emit }) => {\n        const updateValue = (content: string) => {\n            emit(\"update:modelValue\", { ...props.modelValue, content } as TextField);\n        };\n\n        return {\n            FieldType,\n            updateValue,\n        };\n    },\n});\n","import { render } from \"./ErrorField.vue?vue&type=template&id=55957e76\"\nimport script from \"./ErrorField.vue?vue&type=script&lang=ts\"\nexport * from \"./ErrorField.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { nanoid } from \"nanoid\";\nimport QInput from 'quasar/src/components/input/QInput.js';import QTree from 'quasar/src/components/tree/QTree.js';import useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, reactive, ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { CreateFieldTree, FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_UPDATE_ENTRY, Entry, Field, FieldType } from \"@/store/types\";\n\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EntryIconDialog from \"./EntryIconDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EditEntryDialog\",\n    props: {\n        entry: {\n            type: Object as PropType<Entry>,\n            required: true,\n        },\n        entryID: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    components: { EntryIconDialog },\n\n    setup(props) {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const entryModel = reactive({ ...props.entry });\n        const currentFieldName = ref<QInput | null>(null);\n\n        const entryAvatar = computed(() =>\n            $store.getters.entryAttachment(props.entryID, entryModel.avatar.data)\n        );\n\n        const mapKeyToModel = (key: string): Field | undefined => {\n            if (!key) {\n                return undefined;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    return entryModel.fields[i];\n                }\n            }\n            return undefined;\n        };\n\n        const setModelFromKey = (key: string, v: Field) => {\n            if (!key) {\n                return;\n            }\n            for (let i = 0; i < entryModel.fields.length; i++) {\n                if (!entryModel.fields[i]) {\n                    continue;\n                }\n                if (key == entryModel.fields[i].id) {\n                    entryModel.fields[i] = v;\n                }\n            }\n            return;\n        };\n\n        const mapFieldToIcon = (t: FieldType): string => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].icon;\n            } else {\n                return \"help\";\n            }\n        };\n\n        const fieldTreeRef = ref<QTree | null>(null);\n        const fieldTreeSelected = ref<string | null>(null);\n        const fieldTreeExpanded = ref<string[]>([\"entry\"]);\n        const createFieldPopup = ref(false);\n        const createFieldTreeSelected = ref(null);\n        const currentField = computed({\n            get: () => mapKeyToModel(fieldTreeSelected.value as string),\n            set: (v) => {\n                if (!v) {\n                    return;\n                }\n                setModelFromKey(fieldTreeSelected.value as string, v);\n            },\n        });\n        const showEntryAvatarDialog = ref(false);\n        const currentJournal = computed(() => $store.state.currentJournal);\n\n        const moveCurrentField = (delta: number) => {\n            if (!currentField.value) return;\n            const index = entryModel.fields.indexOf(currentField.value);\n            if (index === -1) return;\n            const newIndex = index + delta;\n            if (newIndex < 0 || newIndex === entryModel.fields.length) return;\n            const indexes = [index, newIndex].sort();\n            entryModel.fields.splice(\n                indexes[0],\n                2,\n                entryModel.fields[indexes[1]],\n                entryModel.fields[indexes[0]]\n            );\n        };\n\n        const genFieldTree = (model: Entry) => {\n            const head = {\n                label: model.title,\n                avatar: model.avatar.type == \"attachment\" ? entryAvatar.value : undefined,\n                icon: model.avatar.type == \"icon\" ? model.avatar.data : undefined,\n                children: [] as object,\n                key: \"entry\",\n            };\n            head.children = model.fields.map((f) => {\n                if (!f) {\n                    return {\n                        label: \"Broken field\",\n                        key: nanoid(13),\n                        icon: \"warning\",\n                    };\n                }\n                switch (f.type) {\n                    default:\n                        return { label: f.name, key: f.id, icon: mapFieldToIcon(f.type) };\n                }\n            });\n            return [head];\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: entryModel,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, props.entryID);\n                    onDialogOK();\n                    $router.push(`/j/${currentJournal.value}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const updateEntryAvatar = (att: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            showEntryAvatarDialog.value = false;\n            if (att.type === \"image\") return;\n            entryModel.avatar = { type: att.type, data: att.data as string };\n        };\n\n        const deleteField = () => {\n            if (!currentField.value) {\n                return;\n            }\n            $q.dialog({\n                title: `Delete field \"${currentField.value.name}\"`,\n                message: `Are you sure you want to delete \"${currentField.value.name}\"? This action cannot be undone!`,\n                cancel: true,\n                persistent: true,\n                ok: {\n                    color: \"red\",\n                    label: \"Delete\",\n                    flat: true,\n                },\n            }).onOk(() => {\n                // Delete field from `entry` model\n                for (let i = 0; i < entryModel.fields.length; i++) {\n                    if (currentField.value?.id == entryModel.fields[i].id) {\n                        // delete entryModel.fields[i];\n                        entryModel.fields = entryModel.fields.filter(\n                            (f) => f.id != currentField.value?.id\n                        );\n                        break;\n                    }\n                }\n            });\n        };\n\n        const submitCreateField = (t: FieldType) => {\n            const id = nanoid(13);\n            const f = { ...FieldDefs[t].default, type: t, id } as Field;\n            entryModel.fields.push(f);\n            createFieldTreeSelected.value = null;\n            fieldTreeSelected.value = f.id;\n            createFieldPopup.value = false;\n\n            // Re-expand field tree if not already expanded\n            if (!fieldTreeExpanded.value.includes(\"entry\")) {\n                fieldTreeExpanded.value.push(\"entry\");\n            }\n\n            // Focus name field\n            if (currentFieldName.value) {\n                currentFieldName.value.focus();\n            }\n        };\n\n        const getComponentFromField = (t: FieldType) => {\n            if (t in FieldDefs) {\n                return FieldDefs[t].component;\n            } else {\n                return ErrorField;\n            }\n        };\n\n        const state = {\n            entryModel,\n            currentField,\n            fieldTreeRef,\n            fieldTree: computed(() => genFieldTree(entryModel)),\n            fieldTreeSelected,\n            fieldTreeExpanded,\n            createFieldTree: CreateFieldTree,\n            createFieldTooltip: ref(false),\n            createFieldPopup,\n            createFieldTreeExpanded: ref([\"_\"]), // \"_\" fieldType special flag\n            createFieldTreeFilter: ref(\"\"),\n            createFieldTreeFilterRef: ref(null),\n            createFieldTreeSelected,\n            getComponentFromField,\n            submitCreateField,\n            onCreateFieldSubmit: (t: FieldType) => {\n                submitCreateField(t);\n            },\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n        };\n\n        const submit = async () => {\n            // Update entry\n            try {\n                await $store.dispatch(API_UPDATE_ENTRY, { id: props.entryID, data: entryModel });\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ message: e, type: \"negative\" });\n            }\n        };\n\n        return {\n            // This is REQUIRED;\n            // Need to inject these (from useDialogPluginComponent() call)\n            // into the vue scope for the vue html template\n            dialogRef,\n            onDialogHide,\n\n            ...state,\n            submit,\n            currentFieldName,\n            deleteField,\n            deleteEntry,\n            entryAvatar,\n            showEntryAvatarDialog,\n            moveCurrentField,\n            updateEntryAvatar,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./EditEntryDialog.vue?vue&type=template&id=710af520&scoped=true\"\nimport script from \"./EditEntryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./EditEntryDialog.vue?vue&type=script&lang=ts\"\n\nimport \"./EditEntryDialog.vue?vue&type=style&index=0&id=710af520&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-710af520\"\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QTree from 'quasar/src/components/tree/QTree.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QBtnGroup from 'quasar/src/components/btn-group/QBtnGroup.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QPopupProxy,QList,QItem,QInput,QTree,QTooltip,QIcon,QImg,QForm,QAvatar,QSelect,QItemSection,QSeparator,QBtnGroup,QCardActions});qInstall(script, 'directives', {ClosePopup});\n","\nimport * as _ from \"lodash\";\nimport colors from 'quasar/src/utils/colors.js';import QBadge from 'quasar/src/components/badge/QBadge.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, ref } from \"vue\";\nimport { onBeforeRouteUpdate, useRoute, useRouter } from \"vue-router\";\n\nimport { FieldDefs } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_DELETE_ENTRY, API_SET_LAST_ENTRY, Field } from \"@/store/types\";\n\nimport PreviewAttachmentDialog from \"./attachments/PreviewAttachmentDialog.vue\";\nimport ViewAttachmentsDialog from \"./attachments/ViewAttachmentsDialog.vue\";\nimport DeleteEntryDialog from \"./DeleteEntryDialog.vue\";\nimport EditEntryDialog from \"./EditEntryDialog.vue\";\nimport ErrorField from \"./fields/ErrorField.vue\";\n\nexport default defineComponent({\n    name: \"EntryView\",\n    setup: () => {\n        const $store = useStore();\n        const $route = useRoute();\n        const $router = useRouter();\n        const $q = useQuasar();\n\n        const state = {\n            entry: computed(() => $store.state.entries[$route.params.eid as string]),\n        };\n\n        const journalCategories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const categories = computed(() =>\n            state.entry.value\n                ? state.entry.value.category\n                      .map((c) => journalCategories.value.find((c2) => c2.id === c))\n                      .filter((c) => c !== undefined)\n                : []\n        );\n        const darkActive = computed(() => $q.dark.isActive);\n\n        const categoryBadgeRef = ref<typeof QBadge | null>(null);\n        const getCategoryTextColor = (color: string) => {\n            return colors.brightness(color) < 128 ? \"#fff\" : \"#1d1d1d\";\n        };\n\n        const getCategoryBorderColor = (color: string) => {\n            return colors.lighten(color, -25);\n        };\n\n        const getComponentFromField = (f: Field) => {\n            if (!f || !_.has(f, \"type\") || !(f.type in FieldDefs)) {\n                return ErrorField;\n            }\n            return FieldDefs[f.type].component;\n        };\n\n        const entryAvatar = computed(() => {\n            return $store.getters.entryAttachment(\n                state.entry.value.id,\n                state.entry.value.avatar.data\n            );\n        });\n        const previewAvatar = () => {\n            if (!state.entry.value.attachments[\"avatar\"]) {\n                return;\n            }\n            $q.dialog({\n                component: PreviewAttachmentDialog,\n                componentProps: {\n                    attachment: { ...state.entry.value.attachments[\"avatar\"], name: \"avatar\" },\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n        const editEntry = () => {\n            $q.dialog({\n                component: EditEntryDialog,\n                persistent: true,\n                componentProps: {\n                    entry: _.cloneDeep(state.entry.value),\n                    entryID: $route.params.eid as string,\n                },\n            });\n        };\n\n        const deleteEntry = () => {\n            $q.dialog({\n                component: DeleteEntryDialog,\n                componentProps: {\n                    entry: state.entry.value,\n                },\n            }).onOk(async () => {\n                try {\n                    await $store.dispatch(API_DELETE_ENTRY, $route.params.eid);\n                    $store.state.lastEntry = \"\";\n                    $router.push(`/j/${$store.state.currentJournal}`);\n                } catch (e) {\n                    $q.notify({ message: e.message, type: \"negative\" });\n                }\n            });\n        };\n\n        const viewAttachments = () => {\n            $q.dialog({\n                component: ViewAttachmentsDialog,\n                componentProps: {\n                    // entry: state.entry.value,\n                    entryId: $route.params.eid,\n                },\n            });\n        };\n\n        onBeforeRouteUpdate(() => {\n            $store.dispatch(API_SET_LAST_ENTRY, state.entry.value.id);\n        });\n\n        return {\n            ...state,\n            editEntry,\n            categories,\n            deleteEntry,\n            entryAvatar,\n            viewAttachments,\n            getComponentFromField,\n            getCategoryTextColor,\n            getCategoryBorderColor,\n            previewAvatar,\n            categoryBadgeRef,\n            darkActive,\n        };\n    },\n});\n","import { render } from \"./EntryView.vue?vue&type=template&id=6d61f85b&scoped=true\"\nimport script from \"./EntryView.vue?vue&type=script&lang=ts\"\nexport * from \"./EntryView.vue?vue&type=script&lang=ts\"\n\nimport \"./EntryView.vue?vue&type=style&index=0&id=6d61f85b&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-6d61f85b\"\n\nexport default script\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QBadge from 'quasar/src/components/badge/QBadge.js';\nimport QBtnDropdown from 'quasar/src/components/btn-dropdown/QBtnDropdown.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QCard,QItem,QItemSection,QAvatar,QIcon,QImg,QSeparator,QCardSection,QBadge,QBtnDropdown,QList,QItemLabel,QBtn});qInstall(script, 'directives', {ClosePopup});\n","<template>\n    <q-layout view=\"hHh lpR fFf\">\n        <q-header elevated class=\"bg-primary text-white\" v-if=\"currentJournal\">\n            <q-toolbar v-if=\"currentJournal\">\n                <q-btn icon=\"home\" flat round @click=\"exitJournal\"></q-btn>\n                <q-toolbar-title>\n                    {{ currentJournal.title }}\n                </q-toolbar-title>\n                <q-space></q-space>\n                <div class=\"q-mr-md text-weight-medium\">v{{ AppVersion }}</div>\n                <q-btn icon=\"dark_mode\" round flat @click=\"toggleDarkMode\">\n                    <q-tooltip>Toggle dark mode</q-tooltip>\n                </q-btn>\n            </q-toolbar>\n        </q-header>\n\n        <q-drawer v-if=\"currentJournal\" side=\"left\" bordered padding show-if-above>\n            <journal-drawer :currentJournal=\"currentJournalID\" :entries=\"entries\"></journal-drawer>\n        </q-drawer>\n\n        <q-page-container>\n            <div class=\"q-ma-lg\">\n                <router-view name=\"view\"></router-view>\n            </div>\n        </q-page-container>\n    </q-layout>\n</template>\n\n<script>\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent } from \"vue\";\nimport { onBeforeRouteLeave, useRouter } from \"vue-router\";\n\nimport JournalDrawer from \"@/components/JournalDrawer\";\nimport { AppVersion } from \"@/constants\";\nimport { useStore } from \"@/store\";\nimport { API_CLOSE_JOURNAL, SET_USER_PREFS } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"Dashboard\",\n    components: { JournalDrawer },\n    setup() {\n        const $store = useStore();\n        const $q = useQuasar();\n        const $router = useRouter();\n\n        // Refs\n\n        // Computed\n        const currentJournal = computed(() => $store.getters.currentJournal);\n        const currentJournalID = computed(() => $store.state.currentJournal);\n        const entries = computed(() => $store.state.entries);\n\n        // Functions\n        const exitJournal = async () => {\n            if (!currentJournal.value) return;\n            await $store.dispatch(API_CLOSE_JOURNAL);\n            await $router.push(\"/\");\n        };\n        const toggleDarkMode = () => {\n            $store.commit(SET_USER_PREFS, {\n                darkMode: !$store.state.userPrefs.darkMode,\n            });\n        };\n\n        // Effects\n        onBeforeRouteLeave(async () => {\n            await $store.dispatch(API_CLOSE_JOURNAL);\n        });\n\n        return {\n            currentJournal,\n            exitJournal,\n            toggleDarkMode,\n            entries,\n            currentJournalID,\n            AppVersion,\n        };\n    },\n});\n</script>\n","<template>\n    <q-input\n        standout=\"bg-primary text-white\"\n        class=\"q-px-md q-mt-lg\"\n        label=\"Search\"\n        v-model=\"entrySearch\"\n        dense\n        clearable\n    ></q-input>\n    <q-separator class=\"q-mt-md\"></q-separator>\n    <q-list padding>\n        <template v-if=\"lastEntry\">\n            <q-item-label header>Last viewed entry</q-item-label>\n            <entry-link :entryId=\"lastEntry\" item></entry-link>\n            <q-separator class=\"q-mt-md q-mb-sm\"></q-separator>\n        </template>\n        <q-item-label header class=\"row justify-between items-center full-width q-pb-md\">\n            Categories\n            <div>\n                <q-btn\n                    round\n                    icon=\"clear\"\n                    text-color=\"red\"\n                    class=\"q-mr-sm\"\n                    size=\"sm\"\n                    v-if=\"filteredCategories.length\"\n                    @click=\"entryCategoryFilter = {}\"\n                >\n                    <q-tooltip>Clear category filter</q-tooltip>\n                </q-btn>\n                <q-btn\n                    round\n                    icon=\"settings\"\n                    class=\"self-end\"\n                    size=\"sm\"\n                    @click=\"openCreateCategory\"\n                    :text-color=\"darkActive ? 'dark' : 'grey-7'\"\n                    :color=\"darkActive ? 'primary' : ''\"\n                >\n                    <q-tooltip>Manage categories</q-tooltip>\n                </q-btn>\n            </div>\n        </q-item-label>\n        <q-item v-if=\"categories.length\" class=\"q-pt-none q-mb-sm\" style=\"flex-wrap: wrap\">\n            <category-chips :categories=\"categories\" v-model=\"entryCategoryFilter\"></category-chips>\n        </q-item>\n        <q-item v-else class=\"text-grey\">There are no categories in this journal.</q-item>\n        <q-separator></q-separator>\n        <q-item-label header class=\"row justify-between items-center full-width q-mt-sm\">\n            Entries\n            <q-btn\n                round\n                icon=\"add\"\n                :text-color=\"darkActive ? 'dark' : 'primary'\"\n                :color=\"darkActive ? 'primary' : ''\"\n                class=\"self-end\"\n                size=\"sm\"\n                @click=\"openCreateEntry\"\n            >\n                <q-tooltip>Create a new entry</q-tooltip>\n            </q-btn>\n        </q-item-label>\n        <template v-if=\"filteredEntries.length\">\n            <q-item\n                v-for=\"e in filteredEntries\"\n                :key=\"e.id\"\n                :to=\"'/j/' + currentJournal + '/e/' + e.id\"\n            >\n                <q-item-section avatar>\n                    <q-icon\n                        v-if=\"e.avatar.type == 'icon'\"\n                        :name=\"e.avatar.data\"\n                        color=\"primary\"\n                    ></q-icon>\n                    <q-img\n                        ratio=\"1\"\n                        v-else\n                        :src=\"getEntryAvatar(e.id, e.avatar.data)\"\n                        class=\"rounded-borders\"\n                    ></q-img>\n                </q-item-section>\n                <q-item-section v-if=\"e.title\" class=\"text-weight-medium\">\n                    {{ e.title }}\n                </q-item-section>\n                <q-item-section v-else class=\"text-grey text-italic\">\n                    Untitled entry\n                </q-item-section>\n            </q-item>\n        </template>\n        <q-item v-else-if=\"filteredEntries.length == 0 && entrySearch\">\n            <q-item-label caption>No results for \"{{ entrySearch }}\".</q-item-label>\n        </q-item>\n        <q-item v-if=\"entries.length <= 0\">\n            <q-item-label caption>There are no entries in this journal.</q-item-label>\n        </q-item>\n    </q-list>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport CreateEntryDialog from \"@/components/CreateEntryDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { Entry } from \"@/store/types\";\n\nimport CategoryChips from \"./CategoryChips.vue\";\nimport EntryLink from \"./EntryLink.vue\";\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\nexport default defineComponent({\n    name: \"JournalDrawer\",\n    components: { EntryLink, CategoryChips },\n    setup: (props) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const entrySearch = ref(\"\");\n        const entryCategoryFilter = ref<{ [key: string]: boolean }>({});\n\n        // Computed\n        const lastEntry = computed(() =>\n            $store.state.entries[$store.state.lastEntry] ? $store.state.lastEntry : undefined\n        );\n        const darkActive = computed(() => $q.dark.isActive);\n        const categories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const filteredCategories = computed(() =>\n            Object.entries(entryCategoryFilter.value)\n                .filter((kv) => kv[1])\n                .map((kv) => kv[0])\n        );\n        const filteredEntries = computed(() =>\n            Object.values(props.entries)\n                .filter((e) => (entrySearch.value ? e.title.includes(entrySearch.value) : true))\n                .filter((e) => {\n                    if (!filteredCategories.value.length) {\n                        return true;\n                    }\n                    // return xor(filteredCategories, e.category).length === 0;\n                    return filteredCategories.value.every((fc) => e.category.includes(fc));\n                })\n        );\n\n        // Functions\n        const openCreateEntry = () => {\n            $q.dialog({ component: CreateEntryDialog });\n        };\n        const openCreateCategory = () => {\n            $q.dialog({ component: ManageCategoriesDialog });\n        };\n        const getEntryAvatar = (id: string, name: string) => {\n            return $store.getters.entryAttachment(id, name);\n        };\n\n        return {\n            openCreateEntry,\n            getEntryAvatar,\n            lastEntry,\n            openCreateCategory,\n            entrySearch,\n            categories,\n            filteredEntries,\n            entryCategoryFilter,\n            filteredCategories,\n            darkActive,\n        };\n    },\n    props: {\n        currentJournal: {\n            type: String,\n        },\n        entries: {\n            type: Object as PropType<{ [key: string]: Entry }>,\n            default: {},\n        },\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <form @submit.prevent=\"submit\">\n                <q-card-section>\n                    <div class=\"text-h6\">Create a new entry</div>\n                </q-card-section>\n                <q-card-section class=\"q-pt-none q-pb-sm row items-center\">\n                    <q-avatar\n                        :icon=\"avatar.data\"\n                        class=\"q-mr-sm cursor-pointer\"\n                        rounded\n                        color=\"grey-4\"\n                        text-color=\"dark\"\n                        size=\"56px\"\n                        v-if=\"avatar.type == 'icon'\"\n                    >\n                        <q-tooltip>Change entry avatar</q-tooltip>\n                        <q-popup-proxy max-width=\"200px\" v-model=\"showIconDialog\">\n                            <entry-icon-dialog @attach=\"updateAvatar\"></entry-icon-dialog>\n                        </q-popup-proxy>\n                    </q-avatar>\n                    <q-avatar\n                        v-else\n                        class=\"q-mr-md cursor-pointer\"\n                        rounded\n                        color=\"grey-4\"\n                        text-color=\"dark\"\n                        size=\"56px\"\n                    >\n                        <q-tooltip>Change entry avatar</q-tooltip>\n                        <img :src=\"avatar.data\" />\n                        <q-popup-proxy max-width=\"200px\" v-model=\"showIconDialog\">\n                            <entry-icon-dialog @attach=\"updateAvatar\"></entry-icon-dialog>\n                        </q-popup-proxy>\n                    </q-avatar>\n                    <q-input\n                        placeholder=\"Untitled entry\"\n                        outlined\n                        autofocus\n                        class=\"col\"\n                        v-model=\"title\"\n                    ></q-input>\n                </q-card-section>\n                <q-card-section>\n                    <q-select\n                        label=\"In category...\"\n                        outlined\n                        dense\n                        multiple\n                        v-model=\"category\"\n                        :options=\"categories\"\n                        new-value-mode=\"add-unique\"\n                        option-label=\"name\"\n                        options-dense\n                        option-value=\"id\"\n                        emit-value\n                        map-options\n                        use-chips\n                    >\n                        <template v-slot:no-option>\n                            <q-item dense>\n                                <q-item-section class=\"text-italic text-grey\">\n                                    No categories\n                                </q-item-section>\n                            </q-item>\n                        </template>\n                        <template v-slot:after>\n                            <q-btn\n                                outline\n                                icon=\"add\"\n                                color=\"primary\"\n                                class=\"full-height\"\n                                @click=\"openManageCategories\"\n                            >\n                                <q-tooltip>Create a new category</q-tooltip>\n                            </q-btn>\n                        </template>\n                    </q-select>\n                </q-card-section>\n                <q-expansion-item label=\"Additional settings\" dense disable>\n                    <q-card-section>\n                        <q-select\n                            label=\"From template...\"\n                            v-model=\"template\"\n                            outlined\n                            dense\n                        ></q-select>\n                    </q-card-section>\n                </q-expansion-item>\n                <q-card-actions align=\"right\" class=\"text-primary\">\n                    <q-btn\n                        flat\n                        label=\"Create\"\n                        type=\"submit\"\n                        :disable=\"title.length <= 0\"\n                        :loading=\"loading\"\n                    >\n                        <template v-slot:loading>\n                            <q-spinner-dots class=\"on-left\" />\n                        </template>\n                    </q-btn>\n                    <q-btn flat label=\"Cancel\" @click=\"onCancelClick\" />\n                </q-card-actions>\n            </form>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\nimport EntryIconDialog from \"@/components/EntryIconDialog.vue\";\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_CREATE_ENTRY,\n    CreateAttachment,\n    Entry,\n    EntryAvatar,\n} from \"@/store/types\";\n\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\ninterface CreateEntryDialogData {\n    avatar: EntryAvatar;\n    title: string;\n    category: string[];\n    template: string;\n    showIconDialog: boolean;\n    loading: boolean;\n}\n\nexport default defineComponent({\n    name: \"CreateEntryDialog\",\n    components: {\n        EntryIconDialog,\n    },\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup: () => {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n        const $route = useRoute();\n\n        const avatarFile = ref<File | undefined>(undefined);\n        const state = {\n            avatar: ref<EntryAvatar>({ type: \"icon\", data: \"subject\" }),\n            title: ref(\"\"),\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n            category: ref([]),\n            template: ref(\"\"),\n            loading: ref(false),\n            showIconDialog: ref(false),\n        };\n\n        const submit = async () => {\n            state.loading.value = true;\n            try {\n                if (state.avatar.value.type == \"attachment\") {\n                    if (!avatarFile.value) {\n                        throw new Error(\"Avatar never uploaded\");\n                    }\n                    const e = {\n                        title: state.title.value,\n                        avatar: { type: \"attachment\", data: \"avatar\" },\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: e2.id,\n                        attachment: {\n                            name: \"avatar\",\n                            data: avatarFile.value,\n                        } as CreateAttachment,\n                    });\n                    console.log($route.params.jid, e2.id);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                } else {\n                    const e = {\n                        title: state.title.value,\n                        avatar: state.avatar.value,\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                }\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            } finally {\n                state.loading.value = false;\n            }\n        };\n\n        const updateAvatar = (data: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            // Hide icon dialog\n            state.showIconDialog.value = false;\n            if (data.type === \"image\") {\n                const fr = new FileReader();\n                fr.onload = () => {\n                    if (fr.result == null) {\n                        $q.notify({ type: \"negative\", message: \"Failed to load avatar\" });\n                        return;\n                    }\n                    state.avatar.value = { type: \"attachment\", data: fr.result };\n                };\n                avatarFile.value = data.data as File;\n                fr.readAsDataURL(data.data as File);\n            } else if (data.type === \"icon\") {\n                avatarFile.value = undefined;\n                state.avatar.value = { type: \"icon\", data: data.data as string };\n            }\n        };\n\n        const openManageCategories = () => {\n            $q.dialog({\n                component: ManageCategoriesDialog,\n            });\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            ...state,\n            submit,\n            updateAvatar,\n            onOKClick() {\n                submit();\n                onDialogOK();\n                // or with payload: onDialogOK({ ... })\n                // ...and it will also hide the dialog automatically\n            },\n            openManageCategories,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section class=\"row align-items-center\">\n                <div class=\"text-h6\">Manage categories</div>\n                <q-space></q-space>\n                <q-btn icon=\"add\" color=\"primary\" flat round dense @click=\"addCategory\">\n                    <q-tooltip>Create a new category</q-tooltip>\n                </q-btn>\n            </q-card-section>\n            <q-card-section>\n                <q-list\n                    bordered\n                    class=\"rounded-borders\"\n                    style=\"overflow: auto; max-height: 300px\"\n                    v-if=\"categories.length\"\n                >\n                    <template v-for=\"(c, idx) in categories\" :key=\"c.id\">\n                        <q-expansion-item\n                            expand-separator\n                            :label=\"c.name ? c.name : '[ Untitled category ]'\"\n                            icon=\"circle\"\n                            caption=\"0 entries\"\n                            :header-style=\"c.color ? { color: c.color } : {}\"\n                            group=\"categories\"\n                        >\n                            <q-card>\n                                <q-card-section>\n                                    <q-input\n                                        outlined\n                                        dense\n                                        label=\"Name\"\n                                        v-model=\"c.name\"\n                                        class=\"q-mb-sm\"\n                                        :rules=\"[(val) => !!val || 'Please input a valid name']\"\n                                        hide-bottom-space\n                                    >\n                                        <template v-slot:after>\n                                            <q-btn\n                                                style=\"height: 100%\"\n                                                icon=\"delete_outline\"\n                                                outline\n                                                color=\"red\"\n                                                @click=\"deleteCategory(idx)\"\n                                            ></q-btn>\n                                        </template>\n                                    </q-input>\n                                    <q-input\n                                        outlined\n                                        dense\n                                        v-model=\"c.color\"\n                                        label=\"Color\"\n                                        class=\"q-mb-sm\"\n                                    >\n                                        <template v-slot:append>\n                                            <q-icon name=\"colorize\" class=\"cursor-pointer\">\n                                                <q-popup-proxy\n                                                    transition-show=\"scale\"\n                                                    transition-hide=\"scale\"\n                                                >\n                                                    <q-color v-model=\"c.color\" />\n                                                </q-popup-proxy>\n                                            </q-icon>\n                                        </template>\n                                    </q-input>\n                                    <div class=\"row q-gutter-sm no-wrap\">\n                                        <q-input\n                                            outlined\n                                            dense\n                                            :disable=\"true\"\n                                            v-model=\"c.labelSingular\"\n                                            label=\"Singular label\"\n                                            stack-label\n                                            :placeholder=\"pluralize.singular(c.name)\"\n                                        >\n                                        </q-input>\n                                        <q-input\n                                            outlined\n                                            dense\n                                            :disable=\"true\"\n                                            v-model=\"c.labelPlural\"\n                                            label=\"Plural label\"\n                                            :placeholder=\"namePluralized\"\n                                            stack-label\n                                        >\n                                        </q-input>\n                                    </div>\n                                </q-card-section>\n                            </q-card>\n                        </q-expansion-item>\n                        <q-separator v-if=\"idx != categories.length - 1\"></q-separator>\n                    </template>\n                </q-list>\n                <div class=\"text-body1 text-grey\" v-else>\n                    No categories indexed for this journal.\n                </div>\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" flat label=\"Save changes\" @click=\"saveChanges\" />\n                <q-btn color=\"primary\" flat label=\"Cancel\" @click=\"onCancelClick\" />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { cloneDeep } from \"lodash\";\nimport pluralize from \"pluralize\";\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport randomColor from \"randomcolor\";\nimport shortid from \"short-uuid\";\nimport { computed, defineComponent, ref, unref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_UPDATE_JOURNAL, Category } from \"@/store/types\";\n\nimport DeleteCategoryDialog from \"./DeleteCategoryDialog.vue\";\n\nexport default defineComponent({\n    name: \"ManageCategoriesDialog\",\n    props: {},\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const categories = ref<Category[]>(\n            $store.getters.currentJournal ? cloneDeep($store.getters.currentJournal.categories) : []\n        );\n\n        // Computed\n        const namePluralized = computed((idx: number) =>\n            categories.value[idx] ? pluralize(categories.value[idx].name) : \"\"\n        );\n\n        // Functions\n        const addCategory = () => {\n            categories.value.unshift({\n                name: \"Untitled category\",\n                labelSingular: \"\",\n                labelPlural: \"\",\n                color: randomColor({ luminosity: \"dark\" }),\n                id: shortid.generate(),\n            });\n        };\n        const deleteCategory = (idx: number) => {\n            const c = categories.value[idx];\n            if (!c) return;\n\n            $q.dialog({\n                component: DeleteCategoryDialog,\n                componentProps: {\n                    category: c.name,\n                },\n            }).onOk(() => {\n                categories.value.splice(idx, 1);\n            });\n        };\n\n        const saveChanges = async () => {\n            try {\n                await $store.dispatch(API_UPDATE_JOURNAL, { categories: unref(categories) });\n                onDialogOK();\n            } catch (e) {\n                console.error(e);\n                $q.notify({ message: e.message, type: \"negative\" });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            categories,\n            addCategory,\n            pluralize,\n            deleteCategory,\n            namePluralized,\n            saveChanges,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\" persistent>\n        <q-card class=\"q-dialog-plugin\">\n            <q-card-section>\n                <div class=\"text-h6\">Delete category \"{{ category }}\"</div>\n            </q-card-section>\n            <q-card-section>\n                Are you sure you want to delete\n                <span class=\"text-weight-bold\">\"{{ category }}\"?</span> This action cannot be\n                undone!\n                <br />\n                <div class=\"text-red q-mt-sm\">\n                    All matching entries will lose this category.\n                </div>\n            </q-card-section>\n            <q-card-actions align=\"right\">\n                <q-btn color=\"primary\" label=\"Cancel\" @click=\"onCancelClick\" flat />\n                <q-btn color=\"red\" label=\"Delete\" @click=\"onOKClick\" flat />\n            </q-card-actions>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent } from \"quasar\";\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n    name: \"DeleteCategoryDialog\",\n    props: {\n        category: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';;\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n    name: \"DeleteCategoryDialog\",\n    props: {\n        category: {\n            type: String,\n            required: true,\n        },\n    },\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // REQUIRED; must be called inside of setup()\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            onOKClick() {\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./DeleteCategoryDialog.vue?vue&type=template&id=58f6827a\"\nimport script from \"./DeleteCategoryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./DeleteCategoryDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QCardActions,QBtn});\n","\nimport { cloneDeep } from \"lodash\";\nimport pluralize from \"pluralize\";\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport randomColor from \"randomcolor\";\nimport shortid from \"short-uuid\";\nimport { computed, defineComponent, ref, unref } from \"vue\";\n\nimport { useStore } from \"@/store\";\nimport { API_UPDATE_JOURNAL, Category } from \"@/store/types\";\n\nimport DeleteCategoryDialog from \"./DeleteCategoryDialog.vue\";\n\nexport default defineComponent({\n    name: \"ManageCategoriesDialog\",\n    props: {},\n\n    emits: [...useDialogPluginComponent.emits],\n\n    setup() {\n        // Providers\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Refs\n        const categories = ref<Category[]>(\n            $store.getters.currentJournal ? cloneDeep($store.getters.currentJournal.categories) : []\n        );\n\n        // Computed\n        const namePluralized = computed((idx: number) =>\n            categories.value[idx] ? pluralize(categories.value[idx].name) : \"\"\n        );\n\n        // Functions\n        const addCategory = () => {\n            categories.value.unshift({\n                name: \"Untitled category\",\n                labelSingular: \"\",\n                labelPlural: \"\",\n                color: randomColor({ luminosity: \"dark\" }),\n                id: shortid.generate(),\n            });\n        };\n        const deleteCategory = (idx: number) => {\n            const c = categories.value[idx];\n            if (!c) return;\n\n            $q.dialog({\n                component: DeleteCategoryDialog,\n                componentProps: {\n                    category: c.name,\n                },\n            }).onOk(() => {\n                categories.value.splice(idx, 1);\n            });\n        };\n\n        const saveChanges = async () => {\n            try {\n                await $store.dispatch(API_UPDATE_JOURNAL, { categories: unref(categories) });\n                onDialogOK();\n            } catch (e) {\n                console.error(e);\n                $q.notify({ message: e.message, type: \"negative\" });\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            categories,\n            addCategory,\n            pluralize,\n            deleteCategory,\n            namePluralized,\n            saveChanges,\n\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./ManageCategoriesDialog.vue?vue&type=template&id=451ef028\"\nimport script from \"./ManageCategoriesDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./ManageCategoriesDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QExpansionItem from 'quasar/src/components/expansion-item/QExpansionItem.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QColor from 'quasar/src/components/color/QColor.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QSpace,QBtn,QTooltip,QList,QExpansionItem,QInput,QIcon,QPopupProxy,QColor,QSeparator,QCardActions});\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, ref } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\n\nimport EntryIconDialog from \"@/components/EntryIconDialog.vue\";\nimport { useStore } from \"@/store\";\nimport {\n    API_ADD_ENTRY_ATTACHMENT,\n    API_CREATE_ENTRY,\n    CreateAttachment,\n    Entry,\n    EntryAvatar,\n} from \"@/store/types\";\n\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\ninterface CreateEntryDialogData {\n    avatar: EntryAvatar;\n    title: string;\n    category: string[];\n    template: string;\n    showIconDialog: boolean;\n    loading: boolean;\n}\n\nexport default defineComponent({\n    name: \"CreateEntryDialog\",\n    components: {\n        EntryIconDialog,\n    },\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup: () => {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n        const $route = useRoute();\n\n        const avatarFile = ref<File | undefined>(undefined);\n        const state = {\n            avatar: ref<EntryAvatar>({ type: \"icon\", data: \"subject\" }),\n            title: ref(\"\"),\n            categories: computed(() =>\n                $store.state.currentJournal\n                    ? $store.state.journals[$store.state.currentJournal].categories\n                    : []\n            ),\n            category: ref([]),\n            template: ref(\"\"),\n            loading: ref(false),\n            showIconDialog: ref(false),\n        };\n\n        const submit = async () => {\n            state.loading.value = true;\n            try {\n                if (state.avatar.value.type == \"attachment\") {\n                    if (!avatarFile.value) {\n                        throw new Error(\"Avatar never uploaded\");\n                    }\n                    const e = {\n                        title: state.title.value,\n                        avatar: { type: \"attachment\", data: \"avatar\" },\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $store.dispatch(API_ADD_ENTRY_ATTACHMENT, {\n                        id: e2.id,\n                        attachment: {\n                            name: \"avatar\",\n                            data: avatarFile.value,\n                        } as CreateAttachment,\n                    });\n                    console.log($route.params.jid, e2.id);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                } else {\n                    const e = {\n                        title: state.title.value,\n                        avatar: state.avatar.value,\n                        category: state.category.value,\n                    } as Partial<Entry>;\n                    const e2 = await $store.dispatch(API_CREATE_ENTRY, e);\n                    await $router.push(`/j/${$route.params.jid}/e/${e2.id}`);\n                }\n                onDialogOK();\n            } catch (e) {\n                $q.notify({ type: \"negative\", message: e.message });\n            } finally {\n                state.loading.value = false;\n            }\n        };\n\n        const updateAvatar = (data: {\n            type: \"image\" | \"icon\" | \"attachment\";\n            data: string | File;\n        }) => {\n            // Hide icon dialog\n            state.showIconDialog.value = false;\n            if (data.type === \"image\") {\n                const fr = new FileReader();\n                fr.onload = () => {\n                    if (fr.result == null) {\n                        $q.notify({ type: \"negative\", message: \"Failed to load avatar\" });\n                        return;\n                    }\n                    state.avatar.value = { type: \"attachment\", data: fr.result };\n                };\n                avatarFile.value = data.data as File;\n                fr.readAsDataURL(data.data as File);\n            } else if (data.type === \"icon\") {\n                avatarFile.value = undefined;\n                state.avatar.value = { type: \"icon\", data: data.data as string };\n            }\n        };\n\n        const openManageCategories = () => {\n            $q.dialog({\n                component: ManageCategoriesDialog,\n            });\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n            ...state,\n            submit,\n            updateAvatar,\n            onOKClick() {\n                submit();\n                onDialogOK();\n                // or with payload: onDialogOK({ ... })\n                // ...and it will also hide the dialog automatically\n            },\n            openManageCategories,\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CreateEntryDialog.vue?vue&type=template&id=731521d4\"\nimport script from \"./CreateEntryDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateEntryDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QPopupProxy from 'quasar/src/components/popup-proxy/QPopupProxy.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSelect from 'quasar/src/components/select/QSelect.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QExpansionItem from 'quasar/src/components/expansion-item/QExpansionItem.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QSpinnerDots from 'quasar/src/components/spinner/QSpinnerDots.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QCardSection,QAvatar,QTooltip,QPopupProxy,QInput,QSelect,QItem,QItemSection,QBtn,QExpansionItem,QCardActions,QSpinnerDots});\n","<template>\n    <q-chip\n        :style=\"{\n            maxWidth: '175px',\n            border: '1px solid ' + c.color,\n            backgroundColor: modelValue[c.id] ? c.color : '',\n        }\"\n        clickable\n        v-for=\"c in categories\"\n        :dense=\"categories.length > 8\"\n        :key=\"c.id\"\n        :selected=\"modelValue[c.id]\"\n        @update:selected=\"updateValue(c.id, $event)\"\n    >\n        <div class=\"ellipsis\">\n            {{ c.name }}\n            <q-tooltip> {{ c.name }}</q-tooltip>\n        </div>\n    </q-chip>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { Category } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CategoryChips\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<{ [key: string]: boolean }>,\n        },\n        categories: {\n            type: Array as PropType<Array<Category>>,\n            default: [],\n        },\n    },\n    setup: (props, ctx) => {\n        // Providers\n        const $q = useQuasar();\n\n        // Computed\n        const darkActive = computed(() => $q.dark.isActive);\n\n        // Functions\n        const updateValue = (id: string, val: boolean) => {\n            if (!props.modelValue) return;\n            ctx.emit(\"update:modelValue\", {\n                ...Object.entries(props.modelValue)\n                    .filter((v) => !!v[1])\n                    .reduce((acc, kv) => (acc = { ...acc, [kv[0]]: kv[1] }), {}),\n                [id]: val,\n            });\n        };\n\n        return { updateValue, darkActive };\n    },\n});\n</script>\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType } from \"vue\";\n\nimport { Category } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CategoryChips\",\n    emits: [\"update:modelValue\"],\n    props: {\n        modelValue: {\n            type: Object as PropType<{ [key: string]: boolean }>,\n        },\n        categories: {\n            type: Array as PropType<Array<Category>>,\n            default: [],\n        },\n    },\n    setup: (props, ctx) => {\n        // Providers\n        const $q = useQuasar();\n\n        // Computed\n        const darkActive = computed(() => $q.dark.isActive);\n\n        // Functions\n        const updateValue = (id: string, val: boolean) => {\n            if (!props.modelValue) return;\n            ctx.emit(\"update:modelValue\", {\n                ...Object.entries(props.modelValue)\n                    .filter((v) => !!v[1])\n                    .reduce((acc, kv) => (acc = { ...acc, [kv[0]]: kv[1] }), {}),\n                [id]: val,\n            });\n        };\n\n        return { updateValue, darkActive };\n    },\n});\n","import { render } from \"./CategoryChips.vue?vue&type=template&id=f9b4fcf2\"\nimport script from \"./CategoryChips.vue?vue&type=script&lang=ts\"\nexport * from \"./CategoryChips.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QChip from 'quasar/src/components/chip/QChip.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QChip,QTooltip});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, PropType, ref } from \"vue\";\n\nimport CreateEntryDialog from \"@/components/CreateEntryDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { Entry } from \"@/store/types\";\n\nimport CategoryChips from \"./CategoryChips.vue\";\nimport EntryLink from \"./EntryLink.vue\";\nimport ManageCategoriesDialog from \"./ManageCategoriesDialog.vue\";\n\nexport default defineComponent({\n    name: \"JournalDrawer\",\n    components: { EntryLink, CategoryChips },\n    setup: (props) => {\n        // Providers\n        const $q = useQuasar();\n        const $store = useStore();\n\n        // Refs\n        const entrySearch = ref(\"\");\n        const entryCategoryFilter = ref<{ [key: string]: boolean }>({});\n\n        // Computed\n        const lastEntry = computed(() =>\n            $store.state.entries[$store.state.lastEntry] ? $store.state.lastEntry : undefined\n        );\n        const darkActive = computed(() => $q.dark.isActive);\n        const categories = computed(() =>\n            $store.state.currentJournal\n                ? $store.state.journals[$store.state.currentJournal].categories\n                : []\n        );\n        const filteredCategories = computed(() =>\n            Object.entries(entryCategoryFilter.value)\n                .filter((kv) => kv[1])\n                .map((kv) => kv[0])\n        );\n        const filteredEntries = computed(() =>\n            Object.values(props.entries)\n                .filter((e) => (entrySearch.value ? e.title.includes(entrySearch.value) : true))\n                .filter((e) => {\n                    if (!filteredCategories.value.length) {\n                        return true;\n                    }\n                    // return xor(filteredCategories, e.category).length === 0;\n                    return filteredCategories.value.every((fc) => e.category.includes(fc));\n                })\n        );\n\n        // Functions\n        const openCreateEntry = () => {\n            $q.dialog({ component: CreateEntryDialog });\n        };\n        const openCreateCategory = () => {\n            $q.dialog({ component: ManageCategoriesDialog });\n        };\n        const getEntryAvatar = (id: string, name: string) => {\n            return $store.getters.entryAttachment(id, name);\n        };\n\n        return {\n            openCreateEntry,\n            getEntryAvatar,\n            lastEntry,\n            openCreateCategory,\n            entrySearch,\n            categories,\n            filteredEntries,\n            entryCategoryFilter,\n            filteredCategories,\n            darkActive,\n        };\n    },\n    props: {\n        currentJournal: {\n            type: String,\n        },\n        entries: {\n            type: Object as PropType<{ [key: string]: Entry }>,\n            default: {},\n        },\n    },\n});\n","import { render } from \"./JournalDrawer.vue?vue&type=template&id=afd29128\"\nimport script from \"./JournalDrawer.vue?vue&type=script&lang=ts\"\nexport * from \"./JournalDrawer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItemLabel from 'quasar/src/components/item/QItemLabel.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QImg from 'quasar/src/components/img/QImg.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QSeparator,QList,QItemLabel,QBtn,QTooltip,QItem,QItemSection,QIcon,QImg});\n","import { render } from \"./Dashboard.vue?vue&type=template&id=15694667\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script\nimport QLayout from 'quasar/src/components/layout/QLayout.js';\nimport QHeader from 'quasar/src/components/header/QHeader.js';\nimport QToolbar from 'quasar/src/components/toolbar/QToolbar.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QToolbarTitle from 'quasar/src/components/toolbar/QToolbarTitle.js';\nimport QSpace from 'quasar/src/components/space/QSpace.js';\nimport QTooltip from 'quasar/src/components/tooltip/QTooltip.js';\nimport QDrawer from 'quasar/src/components/drawer/QDrawer.js';\nimport QPageContainer from 'quasar/src/components/page/QPageContainer.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QLayout,QHeader,QToolbar,QBtn,QToolbarTitle,QSpace,QTooltip,QDrawer,QPageContainer});\n","<template>\n    <div class=\"row items-center q-pt-md\">\n        <div class=\"col-none col-sm-1 col-md-3\"></div>\n        <div class=\"col\">\n            <div class=\"row q-mb-md\">\n                <div class=\"col\">\n                    <div class=\"text-h3\">\n                        ajourn\n                    </div>\n                    <div class=\"text-caption text-italic q-mt-sm\">\n                        An offline world planner.\n                    </div>\n                </div>\n                <div class=\"col row items-end justify-end\">\n                    <div>\n                        Made with 🤮 by\n                        <a\n                            href=\"https://github.com/xankz\"\n                            target=\"_blank\"\n                            class=\"text-weight-bold text-primary\"\n                            style=\"text-decoration: none\"\n                            >@xankz</a\n                        >\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"col q-pr-md\">\n                        <div class=\"text-h6\" v-if=\"numJournals <= 0\">\n                            No journals available.<br />\n                            <q-btn\n                                outline\n                                no-caps\n                                class=\"text-primary q-mt-sm\"\n                                @click=\"openCreateJournal\"\n                            >\n                                Create a new journal\n                            </q-btn>\n                        </div>\n                        <q-list dense bordered class=\"rounded-borders\" separator v-else>\n                            <q-item\n                                v-for=\"(j, id) in journals\"\n                                :key=\"id\"\n                                clickable\n                                :to=\"'/j/' + id\"\n                            >\n                                <q-item-section avatar>\n                                    <q-avatar icon=\"bookmark_border\"></q-avatar>\n                                </q-item-section>\n                                <q-item-section v-if=\"j.title\" class=\"text-weight-medium\"\n                                    >{{ j.title }}\n                                </q-item-section>\n                                <q-item-section v-else class=\"text-italic text-grey\"\n                                    >Unknown journal, ID: {{ id }})\n                                </q-item-section>\n                            </q-item>\n                        </q-list>\n                        <div class=\"text-caption q-mt-sm\" v-if=\"numJournals\">\n                            Loaded {{ numJournals }} journal{{ numJournals > 1 ? \"s\" : \"\" }}.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <change-log></change-log>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-none col-sm-1 col-md-3\"></div>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport { useQuasar } from \"quasar\";\nimport { computed, defineComponent, onBeforeMount } from \"vue\";\n\nimport ChangeLog from \"@/components/ChangeLog.vue\";\nimport CreateJournalDialog from \"@/components/CreateJournalDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { API_FETCH_JOURNALS } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"Landing\",\n    components: {\n        ChangeLog,\n    },\n    setup() {\n        // Providers\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Computed\n        const journals = computed(() => $store.state.journals);\n        const numJournals = computed(() => Object.keys($store.state.journals).length);\n\n        // Effects\n        onBeforeMount(async () => {\n            await $store.dispatch(API_FETCH_JOURNALS);\n        });\n\n        return {\n            journals,\n            numJournals,\n            openCreateJournal: () => {\n                $q.dialog({\n                    component: CreateJournalDialog,\n                });\n            },\n        };\n    },\n});\n</script>\n","<template>\n    <q-banner\n        dense\n        rounded\n        class=\"bg-warning q-mb-sm\"\n        v-if=\"latestVer != undefined && AppVersion != latestVer && !fetchErr\"\n    >\n        Warning: you are using an older version of ajourn. <br />(current: {{ AppVersion }}, latest:\n        {{ latestVer }})\n    </q-banner>\n    <q-card flat bordered>\n        <q-card-section>\n            <vue3-markdown-it class=\"md-changelog\" :source=\"changes\"></vue3-markdown-it>\n        </q-card-section>\n    </q-card>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref } from \"vue\";\nimport { VueMarkdownIt } from \"vue3-markdown-it\";\n\nimport { AppVersion, ChangelogUrl } from \"@/constants\";\n\nexport default defineComponent({\n    name: \"ChangeLog\",\n    component: {\n        VueMarkdownIt,\n    },\n    setup: () => {\n        // Refs\n        const changes = ref<string>(\"\");\n        const fetchErr = ref<string | undefined>();\n        const latestVer = ref<string | undefined>(undefined);\n\n        // Functions\n        const fetchChangelog = async () => {\n            try {\n                const headers = new Headers();\n                const res = await (\n                    await fetch(`${ChangelogUrl}?cache-bust=${Math.random()}`, {\n                        method: \"GET\",\n                        cache: \"no-store\",\n                        headers,\n                    })\n                ).text();\n\n                // Find latest version\n                const vers = res.split(\"\\n\").filter((l) => l.startsWith(\"## \"));\n                if (vers[0]) {\n                    // Extract latest version from header\n                    const m = vers[0].match(/\\d+.\\d+.\\d+/m);\n                    if (m && m[0]) {\n                        latestVer.value = m[0];\n                    } else {\n                        throw new Error(\"Failed to retrieve latest version\");\n                    }\n\n                    // Extract only latest version changes\n                    if (vers[1]) {\n                        const v1idx = res.indexOf(vers[0]);\n                        const v2idx = res.indexOf(vers[1]);\n                        changes.value = res.slice(v1idx, v2idx);\n                    } else {\n                        changes.value = res;\n                    }\n                }\n            } catch (e) {\n                fetchErr.value = e.message;\n            }\n        };\n\n        // Effects\n        onMounted(() => {\n            fetchChangelog();\n        });\n\n        return {\n            changes,\n            latestVer,\n            AppVersion,\n        };\n    },\n});\n</script>\n\n<style lang=\"scss\">\n.md-changelog h1,\n.md-changelog h2,\n.md-changelog h4,\n.md-changelog h5,\n.md-changelog h6 {\n    margin: 0;\n}\n\n.md-changelog h2 {\n    font-weight: 500;\n    font-size: 1.25rem;\n    line-height: initial;\n}\n\n.md-changelog h3 {\n    font-weight: 500;\n    font-size: 1rem;\n    line-height: initial;\n    margin: 8px 0;\n}\n\n.md-changelog ul:last-child {\n    margin-bottom: 0;\n}\n</style>\n","\nimport { defineComponent, onMounted, ref } from \"vue\";\nimport { VueMarkdownIt } from \"vue3-markdown-it\";\n\nimport { AppVersion, ChangelogUrl } from \"@/constants\";\n\nexport default defineComponent({\n    name: \"ChangeLog\",\n    component: {\n        VueMarkdownIt,\n    },\n    setup: () => {\n        // Refs\n        const changes = ref<string>(\"\");\n        const fetchErr = ref<string | undefined>();\n        const latestVer = ref<string | undefined>(undefined);\n\n        // Functions\n        const fetchChangelog = async () => {\n            try {\n                const headers = new Headers();\n                const res = await (\n                    await fetch(`${ChangelogUrl}?cache-bust=${Math.random()}`, {\n                        method: \"GET\",\n                        cache: \"no-store\",\n                        headers,\n                    })\n                ).text();\n\n                // Find latest version\n                const vers = res.split(\"\\n\").filter((l) => l.startsWith(\"## \"));\n                if (vers[0]) {\n                    // Extract latest version from header\n                    const m = vers[0].match(/\\d+.\\d+.\\d+/m);\n                    if (m && m[0]) {\n                        latestVer.value = m[0];\n                    } else {\n                        throw new Error(\"Failed to retrieve latest version\");\n                    }\n\n                    // Extract only latest version changes\n                    if (vers[1]) {\n                        const v1idx = res.indexOf(vers[0]);\n                        const v2idx = res.indexOf(vers[1]);\n                        changes.value = res.slice(v1idx, v2idx);\n                    } else {\n                        changes.value = res;\n                    }\n                }\n            } catch (e) {\n                fetchErr.value = e.message;\n            }\n        };\n\n        // Effects\n        onMounted(() => {\n            fetchChangelog();\n        });\n\n        return {\n            changes,\n            latestVer,\n            AppVersion,\n        };\n    },\n});\n","import { render } from \"./ChangeLog.vue?vue&type=template&id=2aa84456\"\nimport script from \"./ChangeLog.vue?vue&type=script&lang=ts\"\nexport * from \"./ChangeLog.vue?vue&type=script&lang=ts\"\n\nimport \"./ChangeLog.vue?vue&type=style&index=0&id=2aa84456&lang=scss\"\nscript.render = render\n\nexport default script\nimport QBanner from 'quasar/src/components/banner/QBanner.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBanner,QCard,QCardSection});\n","<template>\n    <q-dialog ref=\"dialogRef\" @hide=\"onDialogHide\">\n        <q-card class=\"q-dialog-plugin\">\n            <q-form @submit.prevent=\"submit\">\n                <q-card-section>\n                    <div class=\"text-h6\">Create a new journal</div>\n                </q-card-section>\n                <q-card-section class=\"q-py-none\">\n                    <q-input\n                        outlined\n                        autofocus\n                        placeholder=\"Title\"\n                        v-model=\"title\"\n                        :rules=\"[(val) => val.length >= 0 || 'Title is required']\"\n                    ></q-input>\n                    <div class=\"column\">\n                        <q-checkbox label=\"Sync online\" v-model=\"createOnline\" disable>\n                        </q-checkbox>\n                        <small class=\"text-grey\"> Log in to enable online sync. </small>\n                    </div>\n                </q-card-section>\n                <q-card-actions align=\"right\" class=\"text-primary\">\n                    <q-btn flat label=\"Cancel\" type=\"button\" @click=\"onCancelClick\"></q-btn>\n                    <q-btn\n                        flat\n                        label=\"Create\"\n                        type=\"submit\"\n                        :loading=\"loading\"\n                        :disable=\"title.length <= 0\"\n                    ></q-btn>\n                </q-card-actions>\n            </q-form>\n        </q-card>\n    </q-dialog>\n</template>\n\n<script lang=\"ts\">\nimport { useDialogPluginComponent, useQuasar } from \"quasar\";\nimport { computed, defineComponent, onMounted, ref, watchEffect } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useStore } from \"@/store\";\nimport { API_CREATE_JOURNAL, API_OPEN_JOURNAL, CreateJournal } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateJournalDialog\",\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup() {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const title = ref(\"\");\n        const submit = async () => {\n            try {\n                const id = await $store.dispatch(API_CREATE_JOURNAL, {\n                    title: title.value,\n                } as CreateJournal);\n                await $store.dispatch(API_OPEN_JOURNAL, id);\n                await $router.push(`/j/${id}`);\n                onDialogOK();\n            } catch (e) {\n                $q.notify(e);\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            // stub: true only if user logged in\n            createOnline: ref(false),\n            title,\n            loading: ref(false),\n            submit,\n\n            // other methods that we used in our vue html template;\n            // these are part of our example (so not required)\n            onOKClick() {\n                submit();\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n</script>\n","\nimport useDialogPluginComponent from 'quasar/src/composables/use-dialog-plugin-component.js';import useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onMounted, ref, watchEffect } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nimport { useStore } from \"@/store\";\nimport { API_CREATE_JOURNAL, API_OPEN_JOURNAL, CreateJournal } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"CreateJournalDialog\",\n    emits: [\n        // REQUIRED; need to specify some events that your\n        // component will emit through useDialogPluginComponent()\n        ...useDialogPluginComponent.emits,\n    ],\n    setup() {\n        const { dialogRef, onDialogHide, onDialogOK, onDialogCancel } = useDialogPluginComponent();\n        const $q = useQuasar();\n        const $store = useStore();\n        const $router = useRouter();\n\n        const title = ref(\"\");\n        const submit = async () => {\n            try {\n                const id = await $store.dispatch(API_CREATE_JOURNAL, {\n                    title: title.value,\n                } as CreateJournal);\n                await $store.dispatch(API_OPEN_JOURNAL, id);\n                await $router.push(`/j/${id}`);\n                onDialogOK();\n            } catch (e) {\n                $q.notify(e);\n            }\n        };\n\n        return {\n            dialogRef,\n            onDialogHide,\n\n            // stub: true only if user logged in\n            createOnline: ref(false),\n            title,\n            loading: ref(false),\n            submit,\n\n            // other methods that we used in our vue html template;\n            // these are part of our example (so not required)\n            onOKClick() {\n                submit();\n                onDialogOK();\n            },\n\n            // we can passthrough onDialogCancel directly\n            onCancelClick: onDialogCancel,\n        };\n    },\n});\n","import { render } from \"./CreateJournalDialog.vue?vue&type=template&id=4acec7d6\"\nimport script from \"./CreateJournalDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./CreateJournalDialog.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QCheckbox from 'quasar/src/components/checkbox/QCheckbox.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QDialog,QCard,QForm,QCardSection,QInput,QCheckbox,QCardActions,QBtn});\n","\nimport useQuasar from 'quasar/src/composables/use-quasar.js';;\nimport { computed, defineComponent, onBeforeMount } from \"vue\";\n\nimport ChangeLog from \"@/components/ChangeLog.vue\";\nimport CreateJournalDialog from \"@/components/CreateJournalDialog.vue\";\nimport { useStore } from \"@/store\";\nimport { API_FETCH_JOURNALS } from \"@/store/types\";\n\nexport default defineComponent({\n    name: \"Landing\",\n    components: {\n        ChangeLog,\n    },\n    setup() {\n        // Providers\n        const $store = useStore();\n        const $q = useQuasar();\n\n        // Computed\n        const journals = computed(() => $store.state.journals);\n        const numJournals = computed(() => Object.keys($store.state.journals).length);\n\n        // Effects\n        onBeforeMount(async () => {\n            await $store.dispatch(API_FETCH_JOURNALS);\n        });\n\n        return {\n            journals,\n            numJournals,\n            openCreateJournal: () => {\n                $q.dialog({\n                    component: CreateJournalDialog,\n                });\n            },\n        };\n    },\n});\n","import { render } from \"./Landing.vue?vue&type=template&id=b673b6e2\"\nimport script from \"./Landing.vue?vue&type=script&lang=ts\"\nexport * from \"./Landing.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QAvatar from 'quasar/src/components/avatar/QAvatar.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QBtn,QList,QItem,QItemSection,QAvatar});\n","import Loading from 'quasar/src/plugins/Loading.js';import Notify from 'quasar/src/plugins/Notify.js';import QSpinnerGrid from 'quasar/src/components/spinner/QSpinnerGrid.js';;\nimport { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\";\n\nimport EntryView from \"@/components/EntryView.vue\";\nimport { store } from \"@/store\";\nimport { API_FETCH_ENTRY, API_FETCH_JOURNALS, API_OPEN_JOURNAL } from \"@/store/types\";\n\nimport Dashboard from \"../views/Dashboard.vue\";\nimport Landing from \"../views/Landing.vue\";\n\nconst routes: Array<RouteRecordRaw> = [\n    {\n        path: \"/\",\n        name: \"Landing\",\n        component: Landing,\n    },\n    {\n        path: \"/j/:jid\",\n        name: \"Dashboard\",\n        component: Dashboard,\n        children: [\n            {\n                path: \"e/:eid\",\n                name: \"Entry\",\n                components: {\n                    default: Dashboard,\n                    view: EntryView,\n                },\n                beforeEnter: async (to, from, next) => {\n                    // Fetch entry from database\n                    try {\n                        await store.dispatch(API_FETCH_ENTRY, { id: to.params.eid });\n                        next();\n                    } catch (e) {\n                        Notify.create({ message: e.message, type: \"negative\" });\n                        next(`/j/${to.params.jid}`);\n                    }\n                },\n            },\n        ],\n        beforeEnter: async (to, from, next) => {\n            // Show loading screen\n            Loading.show({\n                message: \"Loading journal...\",\n                spinner: QSpinnerGrid,\n            });\n\n            // Fetch journal from database\n            try {\n                await store.dispatch(API_FETCH_JOURNALS);\n                await store.dispatch(API_OPEN_JOURNAL, to.params.jid);\n                next();\n            } catch (e) {\n                Notify.create({ message: e.message, type: \"negative\" });\n                next(\"/\");\n            } finally {\n                Loading.hide();\n            }\n        },\n    },\n];\n\nconst router = createRouter({\n    history: createWebHistory(\n        process.env.NODE_ENV === \"production\" ? process.env.BASE_URL + \"/#\" : process.env.BASE_URL\n    ),\n    routes,\n});\n\nexport default router;\n","import \"./registerServiceWorker\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.fullscreen/Control.FullScreen.css\";\nimport \"vue-advanced-cropper/dist/style.css\";\nimport \"leaflet\";\nimport \"leaflet.fullscreen\";\n\nimport Quasar from 'quasar/src/vue-plugin.js';;\nimport screenfull from \"screenfull\";\nimport { createApp } from \"vue\";\nimport vueDebounce from \"vue-debounce\";\nimport VueMarkdownIt from \"vue3-markdown-it\";\n\nimport App from \"./App.vue\";\nimport { devtools } from \"./devtools\";\nimport quasarUserOptions from \"./quasar-user-options\";\nimport router from \"./router\";\nimport { key, store } from \"./store\";\n\nwindow.screenfull = screenfull;\n\nconst app = createApp(App)\n    .use(devtools)\n    .use(Quasar, quasarUserOptions)\n    .use(store, key)\n    .use(router)\n    .use(VueMarkdownIt as any)\n    .use(vueDebounce, { listenTo: \"input\" });\n\napp.mount(\"#app\");\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./EntryView.vue?vue&type=style&index=0&id=6d61f85b&lang=scss&scoped=true\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js?kebab!../../../node_modules/cache-loader/dist/cjs.js??ref--0-1!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-2!./CropAttachmentDialog.vue?vue&type=style&index=0&id=3bf8cc3c&scoped=true&lang=scss\""],"sourceRoot":""}